{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "https://sandbox.api.myinfo.gov.sg",
      "description": "Sandbox"
    },
    {
      "url": "https://test.api.myinfo.gov.sg",
      "description": "Test"
    },
    {
      "url": "https://api.myinfo.gov.sg",
      "description": "Production"
    }
  ],
  "info": {
    "version": "2.0.8",
    "title": "MyInfo Business",
    "x-logo": {
      "url": "https://public.cloud.myinfo.gov.sg/images/logo/myinfobiz-logo.png"
    },
    "description": "MyInfo Business REST APIs for retrieving Entity and Person data.\n\n**Note - this specification is subject to changes based on evolution of the APIs.**\n\n# Release Notes\n* **2.0.8 (27 Jul 2023)**\n  - **Data Items**\n    - New:\n      - primary-user-described-activity\n      - secondary-user-described-activity\n\n* **2.0.7 (31 Mar 2023)**\n  - **Data Items**\n    - Updated: \n      - cpfcontributions.history employer field: Corrected max length to 30 characters\n      - cpfemployers.history employer field: Corrected max length to 30 characters\n\n* **2.0.6 (26 Jan 2023)**\n  - **Data Items**\n    - Updated: \n      - sponsoredchildrenrecords updated to include LTVP\n\n* **2.0.5 (Dec 2022)**\n  - **Data Items**\n    - Updated: \n      - Corrected attribute name from cpfdependentprotectionscheme to cpfdependantprotectionscheme\n\n* **2.0.4 (Dec 2022)**\n  - **Operation**\n    - New:\n      - Add under Support Section the position code table by entity type (for Entity Object)\n\n* **2.0.3 (Nov 2022)**\n  - **Data Items**\n    - Updated:\n      - Description of 'Nationality' updated to 'Nationality/Citizenship'\n      - Description of 'Country' updated to 'Country/Place'\n  - **Operation**\n    - Updated:\n      - Downtime\n    - New:\n      - Add under Support Section the handling of null/blank returns from Myinfo Business (for Entity Object)\n\n* **2.0.2 (Aug 2022)**\n  - **Data Items**\n    - New:\n      - cpfinvestmentscheme\n      - childrenbirthrecords.vaccinationrequirements\n      - sponsoredchildrenrecords.vaccinationrequirements\n      - hdbownership.purchaseprice\n      - hdbownership.outstandinginstalment\n      - partialuinfin\n      - academicqualifications\n      - cpfhousingwithdrawal\n      - merdekagen\n      - pioneergen\n      - cpfhomeprotectionscheme\n      - cpfdependentprotectionscheme\n    - Deprecated:\n      - mailadd\n      - billadd\n      - homeno\n      - edulevel\n      - gradyear\n      - schoolname\n      - householdincome\n    - Updated:\n      - regadd updated to include FIN registered address, which may also be unavailable.\n      - Description of lastupdated to indicate that value may be blank if source agency does not have record for the user\n      - \"appointments\" and \"shareholders\" to include corppass-email and corppass-mobile number if position user is \"Individual\"\n      - Type enum for regadd (Unformatted to UNFORMATTED)\n      - Description of SG Address Block to 'Block/House of Address'\n      - Description for cpfcontributions to maximum of 15 months records\n      - marriagecertno to maximum 50 characters\n      - Local phone number default to '65'\n      - Employment Sectors of workpass to upper case, remove enumeration and provide examples of possible values \n      - Value of dob updated to include potential formats 'YYYY' and 'YYYY-MM'\n      - Removed code and desc fields from 'occupation' as these are SC/PR user provided fields. For FIN user's occupation, continue to use 'occupation.value'\n    - Removed:\n      - \"corppass-contacts\" from \"entity\"\n\n* **2.0.1 (Feb 2022)**\n  - Updates to use uuid instead of uinfin\n  - Updated SSIC reference from **SSIC 2015 (version 2018)** to **SSIC 2020**\n\n* **2.0.0 (Aug 2020)**\n  - New security headers (see Security -> Request Signing)\n  - Updates to **Person** and **Entity** schema in `entity-person`; See [Understanding the Data Structure](#section/Understanding-the-Data-Structure) for details\n  - Updated new API urls to /v2/\n  - Response changes from JWE to JWE wrapping JWS\n  - Updated maxlength for some fields in `entity` that did not have this\n    - block\n    - building\n    - street\n    - unit\n    - floor\n  - Updated SSIC reference from **SSIC 2015** to **SSIC 2015 (version 2018)**\n  - New data items available:\n    - licences\n    - gov-contracts\n    - builders\n    - contractors\n    - corppass-contacts\n  - Updated type enum for person regadd and entity addresses\n    - Unformatted to UNFORMATTED\n  - Update of Certificate Authority list\n    - Comodo to Comodo/Sectigo\n    - New CA: Netrust\n  - Updated TLS version to only 1.2\n  - Updated recommended cipher suites\n\n* **1.0.0 (Feb 2019)**\n  - Updated data items:\n    - noa(basic) to noa-basic\n    - noahistory(basic) to noahistory-basic\n\n* **0.2.5 (15 July 2019)**\n  - Updated description for entity appointments and shareholders category:\n    - If appointment holder or shareholder does not fall in any of the listed categories, the field will return `\"\"`\n      - `1` - Individual\n      - `2` - Local Company\n      - `3` - Foreign Company\n      - `4` - Unregistered Local Entity\n      - `5` - Limited Liability Partnerships\n      - `6` - Unregistered Foreign Entity\n\n* **0.2.4 (05 Dec 2018)**\n  - Base URL changes:\n    - **Production Environment**: from `myinfosg.api.gov.sg` to `api.myinfo.gov.sg`\n    - **Test Environment**: from `myinfosgstg.api.gov.sg/test` to `test.api.myinfo.gov.sg`\n    - **Sandbox Environment**: from `myinfosgstg.api.gov.sg/dev` to `sandbox.api.myinfo.gov.sg`\n\n  - Security header (`.e.` no longer needed in basestring)\n    - Before v0.2.4, when crafting the basestring of the security header, an additional `.e.` is required in the domain name: e.g. `myinfosgstg.api.gov.sg` -> `myinfosgstg.e.api.gov.sg`.\n      <br>**Note: This is no longer required**\n    - In v0.2.4, when crafting the basestring of the security header, the url in the basestring is the same as the one you call; e.g. `api.myinfo.gov.sg`\n    - For more details, please refer to Security > Request Signing section for updated instructions.\n\n  - Data items deprecated:\n    - assessyear\n    - assessableincome\n\n  - New data items available:\n    - noa(basic)\n    - noa\n    - noahistory(basic)\n    - noahistory\n\n  - Added link to [MyInfo Business demo app](https://github.com/ndi-trusted-data/myinfobiz-demo-app) under Support section for easy reference.\n\n* **0.2.3 (19 November 2018)**\n  - Updated `Entity Type` field to encompass more entity types.\n  - Added `Company Type` and `Business Constitution` to give further breakdown to `Company` and `Business` entity types.\n\n\n* **0.2.2 (9 November 2018)**\n  - Updated endpoint urls to end with `/`.\n\n* **0.2.1 (29 August 2018)**\n  - Updated description for Nationality to include a note on known issue for Singapore PR (code value: SP).\n\n* **0.2.0 (3 August 2018)**\n  - Added `Entity-Person-Sample` with no authentication for sandbox testing.\n  - Re-ordered response schema from `Entity-Person` call such that `Entity` object is before `Person` object.\n\n* **0.1.1 (24 July 2018)**\n  - Updated \"sub\" in access_token to have the format `uen`_`uinfin`\n  - Updated description of uen and unifin path parameters of Entity-Person API indicating that value can be obtained from \"sub\" in decoded access_token.\n\n* **0.1.0 (20 June 2018)**\n  - Initial Release for Pilot\n\n## Releases and Compatibility\nThe RESTful API adopts __Semantic Versioning 2.0.0__ for releases, and every new release of the API increments the version numbers in the following format:\n```\n{MAJOR}.{MINOR}.{PATCH}\n```\n\n1. `{MAJOR}` number introduces incompatible API changes with previous `{MAJOR}` number also resets `{MINOR}` to `0`,\n2. `{MINOR}` number introduces new functionalities or information that are backward compatible also resets `{PATCH}` to `0`, and\n3. `{PATCH}` number introduces bug fixes and remains backward compatible.\n\nPre-release or draft versions, when provided, are denoted by appended hypen `-` with a series of separate identifiers `{LABEL}-{VERSION}` following the `{PATCH}` number. Such releases are unstable and may not provide the intended compatibility with the specification in draft status.\n\nServing as notice, the RESTful API in version `2.X.X` are incompatible with version `1.X.X` releases.\n\nDespite backward compatibility in `{MINOR}` or `{PATCH}` releases, API consumers are best to evaluate and determine their implementation does not disrupt use-case requirements.\n\n# Known Issues\n\n  - There is a known issue with the `Nationality` field, where the return value sometimes will be `SP` which refers to \"Singapore Permanent Resident\". This value will be moved to a separate \"Residential Status\" field in later releases.\n\n\n# Overview\nThe following diagram illustrates how the integration with MyInfo Business APIs work:\n![Overview](https://public.cloud.myinfo.gov.sg/images/myinfobiz-overview.png \"MyInfo Business API Overview\")\n\nAs shown above, your application will be interfacing with our API Gateway to integrate successfully with MyInfo Business.\n\n# Environments\n\nThe RESTful API provides both testing and live environments accessible over the __Internet__ via HTTPS.\n\nConsumers are to ensure firewall clearance on their edge network nodes for connecting to the APIs.\n\nThe convention used by API endpoints' URL are in the following format:\n\n```\nhttps://{ENV_DOMAIN_NAME}/{CONTEXT}/{VERSION}/{RESOURCE}\n```\n\n\n\n  * `{ENV_DOMAIN_NAME}` indicates MyInfo's API domain names - respectively:\n    * `sandbox.api.myinfo.gov.sg`, or\n    * `test.api.myinfo.gov.sg`, or\n    * `api.myinfo.gov.sg`, following\n\n  * `/{CONTEXT}`, indicates the context of the API call = `/biz`\n\n  * `/{VERSION}` indicates the endpoint's release `{MAJOR}` version number\n  path - for this release = `/v2`\n\n  * `/{RESOURCE}` indicates the API resource path name.\n\nAny additional query string parameters are appended as needed.\n\n## Available Environments\n### 1. Sandbox Environment\nThe sandbox environment is used for your testing when developing your prototype. The Entity-Person-Sample and Entity-Person API will return test data previously shared by our officer via email. For test data matters, please contact us.\n#### Note:\n  - Domain Name: `sandbox.api.myinfo.gov.sg`\n  - PKI digital signature is **not required** for all APIs.\n  - Authorization Bearer access token is **not required** in Entity-Person-Sample API.\n  - Authorization Bearer access token **is required** in Entity-Person API.\n\n\n### 2. Test Environment\nThe test enviroment is used for testing your application with the full security measures required in production. The Entity-Person API will return test data previously shared by our officer via email. For test data matters, please contact us.\n#### Note:\n  - Domain Name: `test.api.myinfo.gov.sg`\n  - PKI digital signature **is required** for Token and Entity-Person APIs. <br>Refer to Security > Request Signing for the steps to sign your request.\n  - Authorization Bearer access token **is required** in Entity-Person API.\n\n\n### 3. Production Environment\nThe production enviroment is the actual live environment with full security measures and live data.\n#### Note:\n  - Domain Name: `api.myinfo.gov.sg`\n  - PKI digital signature **is required** for Token and Entity-Person APIs. <br>Refer to Security > Request Signing for the steps to sign your request.\n  - Authorization Bearer access token **is required** in Entity-Person API.\n\n\n\n## Scheduled Downtimes\nThe following are the scheduled downtimes for the various environments:\n\n### Production Environment\n* **CPFB data** \n  * Everyday 5:00am to 5:30am\n  * Every 1st Sun of the month from 12:00am to 8:00am\n  * Every last Sn of the month from 12:00am to 8:00am\n\n* **IRAS data**\n  * Every Wed, 2:00am to 6:00am\n  * Every Sun, 2:00am to 8:30am\n\n* **MOM data**\n  * Every 4th Sun of the month from 12:00am to 6:00am\n\n\n### Sandbox Environment\n* none\n\n### Test Environments\n* none\n\n# Security\n## HTTPS Interface\n\nMyInfo Business's API gateway supports accessing of APIs via the following interfaces:\n* HTTP version 1.1 connection over __TLS__ (Transport Layer Security) version __1.2__ standards, and cipher suites:\n  * using __AES__ (Advanced Encryption Standard) and __SHA__ (Secure Hash Algorithm),\n  * on either __GCM__ (Galois/Counter Mode) or __CBC__ (Cipher Block Chaining) mode.\n* Below is the list of recommended cipher suites that you may use:\n\n  * TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n  * TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n  * TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n  * TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n\n> **IMPORTANT:** ensure your server supports **TLS 1.2** and supports a cipher suite in the list above.\n\nAccessing the RESTful API using prior versions of TLS or unsupported cipher suites will result in connectivity errors. MyInfo Business' API gateway does not support 2-way TLS client nor mutual authentication.\n\nAPI HTTP interface features:\n\n1. __JSON__ (JavaScript Object Notation) is the supported data media format and indicated in `Content-Type` header `application/json`, also\n2. `Content-Length` header is omitted by having `Transfer-Encoding` header `chunked` emitted for streaming data, and\n3. __GZip__ (GNU Zip) response compression is supported by opt-in `Accept-Encoding: gzip` and indicated in `Content-Encoding` header `gzip`.\n\n## OAuth2.0\nMyInfo Business APIs use OAuth2.0 authorisation code flow to perform authentication & authorisation.\n\nThe sequence diagram below illustrates the steps involved in integrating your application with our APIs:\n\n![OAuth](https://public.cloud.myinfo.gov.sg/images/myinfobiz-sequence-diagram.png)\n\nThe flow consists of 3 APIs:\n1. **Authorise**\n    * This will trigger the CorpPass login and consent page. Once successful, your application will receive the **authorisation code** via your callback url.\n\n2. **Token**\n    * Call this server-to-server API with a valid **authorisation code** to get the **access token**.\n\n3. **Protected Resource (Entity-Person)**\n    * Call this server-to-server API with a valid  **access token** to get the entity and person data.\n\n\n## Application Authentication\n\nAccess to all server-to-server APIs will be authenticated by MyInfo Business' API gateway.\nPrior to consumption of API, respective consumers are required to have:\n\n* approval of access, onboarding process for the required API resources will be provisioned, and\n* authentication credentials are then supplied and exchanged.\n\nAuthentication methods provided by MyInfo Business' API gateway on internet:\n\n* OAuth 2.0 using `SHA256withRSA` digital signature (see \"**Request Signing**\" section below)\n* Digital signature should be produced using a RSA private key with corresponding public certificate issued by one of the following compatible CAs:\n  * Comodo/Sectigo\n  * digiCert\n  * Entrust\n  * GeoTrust\n  * GlobalSign\n  * Netrust\n  * Thawte\n  * VeriSign\n\n\n\n\n## Request Signing\n**NOTE: Test and Production Environments only**<br><br>\nAll server-to-server API requests are to be digitally signed, by including the following parameters and values in the `Authorization` header:\n\n```\nPKI_SIGN app_id=\"{app_id}\",\nnonce=\"{random_nonce}\",\nsignature_method=\"RS256\",\nsignature=\"{base64_url_percent_encoded_signature}\",\ntimestamp=\"{unix_epoch_in_milliseconds}\"\n```\n\n*__Note__: Above sample is separated by lines for ease-of-reading, and new-line denotations are to be omitted in the actual request.*\n\n* `{app_id}` is the APP ID credential supplied upon onboarding,\n* `{random_nonce}` is an unique randomly generated text used for replay prevention,\n* `{signature_algorithm}` is the signature algorithm of the authenticating gateway.\n\n  * Value of __signature_algorithm__ = `RS256`\n\n* `{base64_url_percent_encoded_signature}` is the binary of the generated signature encoded in __Base64__ URL-safe format,\n* `{unix_epoch_in_milliseconds}` is the UNIX epoch time in milliseconds\n\n\n### Sample header with authorization parameters\nBelow is an example of an Authorization header for the sample application. Make sure you list the parameters in the sequence shown below.\n```\n  Authorization: PKI_SIGN\n  app_id=\"STG2-MYINFOBIZ-SELF-TEST\",\n  nonce=\"150590021034800\",\n  signature_method=\"RS256\",\n  signature=\"EEm+HEcNQajb5FkVd82zjojk+daYZXxSGPCOR2GHZeoyjZY1PK+aFMzHfWu7eJZYMa5WaEwWxdOdq5hjNbl8kHD7bMaOks7FgEPdjE++TNomfv7SMktDnIvZmPYAxhjb/C9POU2KT6tSlZT/Si/qMgD1cryaPwSeMoM59UZa1GzYmqlkveba7rma58uGwb3wZFH0n57UnouR6LYXDOOLkqi8uMZBuvRUvSJRXETAj2N0hT+4QJiN96Ct6IEQh/woZh0o74K5Ol9PpDSM08qC7Lj6N/k694J+hbBQVVviGn7/6mDkfbwdMDuoKs4t7NpqmAnwT+xaQSIZcexfrAVQYA==\",\n  timestamp=\"1505900210349\"\n```\n\n\n### Sample Code in `NodeJS`\n```\n  // generates the security headers for calling API gateway\n  function generateAuthorizationHeader(url, params, method, strContentType, authType, appId, keyCertContent, passphrase) {\n\n    if (authType == \"L2\") {\n      return generateRS256Header(url, params, method, strContentType, appId, keyCertContent, passphrase);\n    } else {\n      return \"\";\n    }\n  };\n\n  // Signing Your Requests\n  function generateRS256Header(url, params, method, strContentType, appId, keyCertContent, keyCertPassphrase) {\n    var nonceValue = nonce();\n    var timestamp = (new Date).getTime();\n\n    // A) Construct the Authorisation Token Parameters\n    var defaultAuthHeaders = {\n      \"app_id\": appId, // App ID assigned to your application\n      \"nonce\": nonceValue, // secure random number\n      \"signature_method\": \"RS256\",\n      \"timestamp\": timestamp // Unix epoch time\n    };\n\n    // B) Forming the Base String\n    // Base String is a representation of the entire request (ensures message integrity)\n\n    // i) Normalize request parameters\n    var baseParams = sortJSON(_.merge(defaultAuthHeaders, params));\n\n    var baseParamsStr = qs.stringify(baseParams);\n    baseParamsStr = qs.unescape(baseParamsStr); // url safe\n\n    // ii) concatenate request elements (HTTP method + url + base string parameters)\n    var baseString = method.toUpperCase() + \"&\" + url + \"&\" + baseParamsStr;\n\n    // C) Signing Base String to get Digital Signature\n    var signWith = {\n      key: fs.readFileSync(keyCertContent, 'utf8')\n    }; // Provides private key\n\n    // Load pem file containing the x509 cert & private key & sign the base string with it to produce the Digital Signature\n    var signature = crypto.createSign('RSA-SHA256')\n      .update(baseString)\n      .sign(signWith, 'base64');\n\n    // D) Assembling the Authorization Header\n    var strAuthHeader = \"PKI_SIGN app_id=\\\"\" + appId + // Defaults to 1st part of incoming request hostname\n      \"\\\",timestamp=\\\"\" + timestamp +\n      \"\\\",nonce=\\\"\" + nonceValue +\n      \"\\\",signature_method=\\\"RS256\\\"\" +\n      \",signature=\\\"\" + signature +\n      \"\\\"\";\n\n    return strAuthHeader;\n  };\n\n\n```\n\n## Token Validation\n**NOTE: Entity-Person APIs only**<br><br>\nAccess Tokens are in JWT format. This JWT complies to the standard 'JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants' (https://tools.ietf.org/html/rfc7523). You will need to verify the token with our public cert (provided during application onboarding).\n### Sample Code in `NodeJS`\n```\n  // Sample Code for Verifying & Decoding JWS or JWT\n  function verifyJWS(jws, publicCert) {\n    // verify token\n    // ignore notbefore check because it gives errors sometimes if the call is too fast.\n    try {\n      var decoded = jwt.verify(jws, fs.readFileSync(publicCert, 'utf8'), {\n        algorithms: ['RS256'],\n        ignoreNotBefore: true\n      });\n      return decoded;\n    }\n    catch(error) {\n      throw(\"Error with verifying and decoding JWS\");\n    }\n  }\n\n```\n\n\n## Payload Signing and Encryption (Entity-Person)\n**NOTE: Entity-Person APIs in Test and Production environments only**<br><br>\nThe response payload for the **Entity-Person** API (for test and production environments) is first signed, then encrypted:\n  - Signing is done using [**JWS (JSON Web Signature)**](https://tools.ietf.org/html/rfc7515) format\n  - Encryption is done using [**JWE (JSON Web Encryption) Compact Serialization**](https://tools.ietf.org/html/rfc7516) format\n\nEncryption protects the data at rest while a signed payload means, if necessary, you will be able to pass this signed payload to a 3rd party where they can verify the payload's integrity with our public certificate.\n\nIn order to read the payload, you have to perform the following steps in order:\n  1. Decrypt the payload with your application's private key.\n  2. Validate the decrypted payload signature with our public key.\n  3. Decode the verified JWS payload using Base64 decode.\n\n\nAfter doing the above steps, your application will be able to extract the payload in JSON format.\n\n### STEP 1: Decryption\n* Encryption is done using your application's public key that you provided during onboarding. Decryption of the payload should be using the private key of that key-pair.\n* Current encryption algorithms used:\n  * **RSA-OAEP** (for content key wrapping)\n  * **AES256GCM** (for content encrytion)\n\n\n### Sample Code in `NodeJS`\n```\n  // Sample Code for decrypting JWE\n  // Decrypt JWE using private key\n  function decryptJWE(header, encryptedKey, iv, cipherText, tag, privateKey) {\n\n    return new Promise((resolve, reject) => {\n\n      var keystore = jose.JWK.createKeyStore();\n\n      var data = {\n        \"type\": \"compact\",\n        \"ciphertext\": cipherText,\n        \"protected\": header,\n        \"encrypted_key\": encryptedKey,\n        \"tag\": tag,\n        \"iv\": iv,\n        \"header\": JSON.parse(jose.util.base64url.decode(header).toString())\n      };\n      keystore.add(fs.readFileSync(privateKey, 'utf8'), \"pem\")\n        .then(function(jweKey) {\n          // {result} is a jose.JWK.Key\n          jose.JWE.createDecrypt(jweKey)\n            .decrypt(data)\n            .then(function(result) {\n              resolve(JSON.parse(result.payload.toString()));\n            })\n            .catch(function(error) {\n              reject(error);\n            });\n        });\n\n    })\n    .catch (error => {\n      throw \"Error with decrypting JWE\";\n    })\n  }\n\n```\n\n### STEP 2: Verification of Signature\nThe decrypted payload is signed according to [**JWS (JSON Web Signature)**](https://tools.ietf.org/html/rfc7515) format, similar to the access token.\n  - signature algorithm used is `RS256`.\n\n#### Sample Code in `NodeJS`\n```\n  // Sample Code for Verifying & Decoding JWS or JWT\n  function verifyJWS(jws, publicCert) {\n    // verify payload\n    // ignore notbefore check because it gives errors sometimes if the call is too fast.\n    try {\n      var decoded = jwt.verify(jws, fs.readFileSync(publicCert, 'utf8'), {\n        algorithms: ['RS256'],\n        ignoreNotBefore: true\n      });\n      return decoded;\n    }\n    catch(error) {\n      throw(\"Error with verifying and decoding JWS\");\n    }\n  }\n\n```\n\n\n\n\n\n\n# Understanding the Data Structure\nMyInfoBiz Entity and Person data follows a specific structure that you need to understand to traverse the data effectively. This section will explain the structure in detail.\n\nThe Entity-Person response includes both an Entity and a Person object (see diagram): ![Entity-Person Response Structure](https://public.cloud.myinfo.gov.sg/images/entity-person-response-structure.png \"Entity-Person Response Structure\")\n\nThe diagram below illustrates how the Entity data is represented logically:<br>\n![EDH Entity Data Structure](https://public.cloud.myinfo.gov.sg/images/entity-data-structure.png \"EDH Entity Data Structure\")\n\nThe diagram below illustrates how the Person data is represented logically:<br>\n![MyInfo Person Data Structure](https://public.cloud.myinfo.gov.sg/images/person-data-structure.png \"MyInfo Person Data Structure\")\n\n\n## Data Items (Top-Level)\nData Items are attributes that can be requested in the API. Each top-level data item can either be a **data item object** or an array of **data item objects**.\nEach **data item object** will consist of the following properties:\n  - `source` (see below)\n  - `unavailable` (in certain situations - see below)\n  - additional data properties containing data values or arrays\n\n\n### Data Source\n\n  The `source` property indicates the source of data. Possible values are:\n  * '1' - Government-verified\n  * '2' - User Provided\n  * '3' - Field is Not Applicable to this Entity\n  * '4' - Verified by SingPass\n\n\n\n## Data Properties\nIn each data item, there can be multiple data properties or arrays of data properties.\n\nEach data property will contain either:\n  - a `value` property, or\n  - a pair of `code` and `desc` properties, or\n  - an array of data properties, or\n  - other data properties\n\n\n**Note:**\n  - `value` property can be strings, numbers, or dates.\n  - `code` and `desc` pairs will contain the code and its matching description.\n  - `value` is mutually exclusive from (`code` + `desc`); i.e. if there is a `value`, there will not be any `code` or `desc`.\n  - Where there is `code`, there will always be a `desc` - no `value` will be present.\n\n\n**Exceptions:** For these cases, the values will be directly in the property and not in a `value`, `code` or `desc` subproperty:\n  - for data item metadata properties; e.g. `source` and `unavailable`\n  - for discriminator properties; e.g. `type` in address formats\n\n\n\n## Data Not Applicable\nSometimes, a requested data item or data property is not applicable to the entity. Examples include:\n  - a Business Entity (entitytype = `BN`) will never have a `shareholders` data item.\n  - a Business Entity (entitytype = `BN`) will never have a `declarations` data item.\n  - a Local Company (entitytype = `LC`) will never have `commencment-date` data property.\n\nFor a full list, refer to the descriptions in each of the data properties of the entity data model.\n\n### Data Item Not Applicable\nWhen a requested data item is **not applicable** to the entity:\n  - for data item objects, the `source` property will be **3**\n  - for data item arrays, an empty array will be returned\n\nIn such cases, please ignore the data item completely.\nCheck out the different Entity schemas for each type by selecting the different `entitype` discriminator in the specifications. E.g. if you choose \"BN\" (Business) entity type, you will see that `shareholders` schema is an empty array.\n\n\n### Data Property Not Applicable\n\n  - The Entity object has a `entitytype` discriminator which helps to specify the data properties applicable to each entity type.\n  - When a data property is **not applicable** to the entity, it will not appear in the schema of that particular entity type.\n\n\n\n\n\n## Data Unavailable\nIn other situations, a requested data item might not have any data for that data item from the data source; i.e. data is **unavailable**. Examples include:\n  - when an entity does not have any grants submitted/approved\n\n\n\n### Data Item Unavailable\n  - for data item objects, the data item will have the property `unavailable` with value **true**.<br>\n    In such cases, no additional properties (other than `source`) will be provided for the data item.\n  - for data item arrays, an empty array will be returned.\n\nPlease display as \"Not Available\" in your form.\n\n\n### Data Property Unavailable\n  - for data property objects, the `value` or `code`/`desc` will be empty value (\"\") or NaN.\n  - for arrays of data properties, an empty array will be returned.\n\n\n\n\n\n\n\n# Error Handling\n\nThe RESTful API(s) uses HTTP specification standard status codes to indicate the success or failure of each request. Except gateway errors, the response content will be in the following JSON format:\n\n```\n{\n    \"code\": \"integer (int32)\",\n    \"message\": \"string\"\n}\n```\n> **Refer to the individual API definitions for the error codes you might encounter for each API.**\n\n\n# Support\nPlease refer to the links below for the following supporting materials where relevant:\n- [Myinfo Business demo app](https://github.com/ndi-trusted-data/myinfobiz-demo-app)\n- [Code reference tables (for Entity object)](https://public.cloud.myinfo.gov.sg/dpp/frontend/assets/api-lib/myinfobiz/downloads/myinfobiz-code-tables.xlsx)\n- [Code reference tables (for Person object)](https://public.cloud.myinfo.gov.sg/dpp/frontend/assets/api-lib/myinfo/downloads/myinfo-api-code-tables.xlsx)\n- [Test accounts for test environments](https://api.singpass.gov.sg/library/myinfobiz/developers/resources-personas)\n- [Reference user journey templates](https://api.singpass.gov.sg/library/myinfobiz/business/implementation-reference-journey)\n- [Handling of null/blank returns from Myinfo Business](https://public.cloud.myinfo.gov.sg/myinfobiz/myinfo-biz-handling-null-blank-returns-data-fields.xlsx)\n- [Position code table by entity type](https://public.cloud.myinfo.gov.sg/myinfobiz/Position_Code_Table_by_type.xlsx)\n\nFor technical queries, contact [support@myinfo.gov.sg](mailto:support@myinfo.gov.sg).\nFor business queries, contact [partner@myinfo.gov.sg](mailto:partner@myinfo.gov.sg).\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->"
  },
  "tags": [
    {
      "name": "MyInfo Business",
      "description": "Entity-Person API resource operations to access corporate entity\n and person details."
    }
  ],
  "x-tagGroups": [
    {
      "name": "API Definitions",
      "tags": [
        "MyInfo Business"
      ]
    }
  ],
  "paths": {
    "/biz/v2/entity-person-sample/{uen}/{uuid}/": {
      "get": {
        "tags": [
          "MyInfo Business"
        ],
        "summary": "Entity-Person-Sample",
        "description": "Retrieves a sample Entity-Person data from MyInfo Business based on UEN and UIN/FIN.\n\nThis API does not use OAuth2.0 to perform authentication or authrisation, and does not require authorisation token and digital signature.\n\n**Note:** Null value indicates that an attribute is unavailable.",
        "servers": [
          {
            "url": "https://sandbox.api.myinfo.gov.sg/",
            "description": "Sandbox"
          }
        ],
        "operationId": "getentitypersonsample",
        "parameters": [
          {
            "in": "query",
            "name": "txnNo",
            "description": "Transaction ID from requesting digital services for cross referencing.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "uen",
            "description": "Required URL path parameter of the entity's unique entity number. This value can be obtained from the sub (uen_uuid) in the decoded access_token.",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 10,
              "example": "T15LP0010D"
            }
          },
          {
            "in": "path",
            "name": "uuid",
            "description": "Required URL path parameter of the person's uuid. This value can be obtained from the sub (uen_uuid) in the decoded access_token.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "f5230352-50d4-0001-74f2-11907b381069"
            }
          },
          {
            "in": "query",
            "name": "attributes",
            "required": true,
            "description": "Comma separated list of attributes requested. Possible attributes are listed in the scopes of the OAuth2 Security Schema above.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "minimum": 1
              },
              "example": "addresses,basic-profile,name,hanyupinyinname"
            }
          },
          {
            "in": "query",
            "name": "client_id",
            "description": "Unique ID for your application.",
            "allowEmptyValue": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "curl https://sandbox.api.myinfo.gov.sg/biz/v2/entity-person-sample/T15LP0010D/0e8e3ce6-5a21-0dc7-2f90-41212b1d8726"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.\n\n**Note:**\n- Response Content-Encoding will be 'gzip'.\n- Response Content-Type will be 'application/jose', which is a JSON object conforming to the JWE standard (https://tools.ietf.org/html/rfc7516).\n- Your application should decrypt the signature with your application's private key.\n- After decrypting the signature, your application will be able to extract the payload in JSON format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Entity-Person"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. This could be due to the scenarios below:\n\n- **SCENARIO 1:** Requested 'uen'/'uuid' does not match the 'uen'/'uuid' of the person of the entity who logged in. When requesting for data of Person A and Entity A, the CorpPass login and consent must be by Person A from Entity A as well.\n\n\n- **SCENARIO 2:** Requested attributes does not match the attributes consented by person. This happens if the list of attributes in your request are different from the attributes specified when calling the token endpoint.\n\n\n- **SCENARIO 3:** Request contains attributes that are not allowable for the digital service. This happens when you request for attributes that are not allowed for your application. The list of allowable attributes for your application are preconfigured during the onboarding process.\n\nDetails will be given in the error object returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. Digital service is not registered with MyInfo Business.\n\n**MESSAGE:** 'Digital Service is invalid'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found. UIN/FIN and/or UEN does not exist in MyInfo Business.\n\n**MESSAGE:** 'UIN/FIN and/or UEN is invalid.'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "428": {
            "description": "Profile Incomplete. User/Entity registered for MyInfo Business less than 1 working day.\n\n**MESSAGE:** 'Profile Incomplete'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Error with request parameters or headers. Error details will be provided in the response body"
          }
        }
      }
    },
    "/biz/v2/authorise": {
      "get": {
        "tags": [
          "MyInfo Business"
        ],
        "summary": "Authorise",
        "description": "This API triggers CorpPass login and obtain consent for the MyInfo Business to retrieve person and entity data from MyInfo Business.\nOnce the user has authenticated and consented, an authorisation code (authcode) will be returned together with the state for verification via the callback URL defined.\nThe authcode can then be used to retrieve an access token via the Token API.\n\n**Note:** This API is public and should be implemented as a link or button on your online webpage.",
        "operationId": "getauthorise",
        "parameters": [
          {
            "in": "query",
            "name": "authmode",
            "description": "Mode of authentication used to obtain user consent. Default is \"CORPPASS\".",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "CORPPASS",
                "MOBILEID"
              ],
              "default": "CORPPASS"
            }
          },
          {
            "in": "query",
            "name": "purpose",
            "description": "State the purpose for requesting the data. This will be shown to the user for his consent.",
            "allowEmptyValue": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "response_type",
            "description": "Response type for authorisation code flow - must be \"code\".",
            "allowEmptyValue": false,
            "required": false,
            "schema": {
              "type": "string",
              "default": "code"
            }
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Comma separated list of attributes requested. Possible attributes are listed in the scopes of the OAuth2 Security Schema above.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "minimum": 1
              },
              "example": "addresses,basic-profile,name,hanyupinyinname"
            }
          },
          {
            "in": "query",
            "name": "state",
            "description": "Identifier to reconcile query and response. This will be sent back to you via the callback URL. Use a unique system generated number for each and every call.",
            "allowEmptyValue": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "redirect_uri",
            "description": "Your callback URL for MyInfo Business to return with the authorisation code.",
            "allowEmptyValue": false,
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "client_id",
            "description": "Unique ID for your application.",
            "allowEmptyValue": false,
            "required": true,
            "schema": {
              "type": "string",
              "example": "STG-180099999K-TEST01"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Service will redirect all responses to 'redirect_uri' with additional parameters added as response results. Expected parameters include:\n- **code**: this is the authorisation code you will use when calling the token endpoint\n- **state**: this should be the same state passed in your initial URL.\n- **error**: if there are any errors encountered, the error code will be given in this parameter. If user did not give consent, error value will be 'access_denied', and refer to error_description parameter for the reason.\n- **error_description**: if error is 'access_denied' i.e. user did not give consent, the description will be 'Resource Owner did not authorize the request'.\n\n**Error Codes**\n- **'404'** - User/Entity not found or not registered with MyInfo Business.\n- **'428'** - Profile Incomplete. User/Entity registered for MyInfo Business less than 1 working day.\n- **'500'** - Unknown or other server side errors.\n- **'503'** - MyInfo Business under maintenance. Error description will also be given in error_description parameter.\n**Note:** If user closes the browser window prematurely, there will be no callback to the 'redirect_uri'. Therefore it is important for you to check the 'state' to verify that the transaction is the same."
          }
        },
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "function callAuthoriseApi() {\n  var authoriseUrl = authApiUrl + \"?client_id=\" + clientId +\n    \"&attributes=\" + attributes +\n    \"&purpose=\" + purpose +\n    \"&state=\" + state +\n    \"&redirect_uri=\" + redirectUrl;\n\n  window.location = authoriseUrl;\n}\n"
          }
        ]
      }
    },
    "/biz/v2/token": {
      "post": {
        "tags": [
          "MyInfo Business"
        ],
        "summary": "Token",
        "description": "This API generates an access token when presented with a valid authcode obtained from the Authorise API. This token can then be used to request for the person and entity data that were consented.",
        "operationId": "gettoken",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Add token constructed containing the RSA digital signature of the base string. Refer to **Security** > **Request Signing** on how this token should be generated.\n\n**Note:** This header is not required when calling Sandbox API.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. returning a JSON object which contains the authorisation access token (JWT) that will be used to retrieve the data from MyInfo Business.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "AuthCode error - missing, invalid, expired, revoked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenError"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error. Error message will be in the response body"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/gettoken"
        },
        "x-code-samples": [
          {
            "lang": "NodeJS",
            "source": "// function to prepare request for TOKEN API\nfunction createTokenRequest(code) {\n  var cacheCtl = \"no-cache\";\n  var contentType = \"application/x-www-form-urlencoded\";\n  var method = \"POST\";\n  var request = null;\n\n  // preparing the request with header and parameters\n  // assemble params for Token API\n  var strParams = \"grant_type=authorization_code\" +\n    \"&code=\" + code +\n    \"&redirect_uri=\" + _redirectUrl +\n    \"&client_id=\" + _clientId +\n    \"&client_secret=\" + _clientSecret;\n  var params = querystring.parse(strParams);\n\n\n  // assemble headers for Token API\n  var strHeaders = \"Content-Type=\" + contentType + \"&Cache-Control=\" + cacheCtl;\n  var headers = querystring.parse(strHeaders);\n\n  // Sign request and add Authorization Headers\n  var authHeaders = generateAuthorizationHeader(\n    _tokenApiUrl,\n    params,\n    method,\n    contentType,\n    _authLevel,\n    _clientId,\n    _privateKeyContent,\n    _clientSecret\n  );\n\n  if (!_.isEmpty(authHeaders)) {\n    _.set(headers, \"Authorization\", authHeaders);\n  }\n\n  var request = restClient.post(_tokenApiUrl);\n\n  // Set headers\n  if (!_.isUndefined(headers) && !_.isEmpty(headers))\n    request.set(headers);\n\n  // Set Params\n  if (!_.isUndefined(params) && !_.isEmpty(params))\n    request.send(params);\n\n  return request;\n}\n"
          }
        ]
      }
    },
    "/biz/v2/entity-person/{uen}/{uuid}/": {
      "get": {
        "tags": [
          "MyInfo Business"
        ],
        "summary": "Entity-Person",
        "description": "This API returns person and entity data from MyInfo Business when presented with a valid access token obtained from the Token API.\n\n**Note:** Null value indicates that an attribute is unavailable.",
        "operationId": "getentityperson",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Add authorization token constructed containing the RSA digital signature of the base string. Refer to **Security** > **Request Signing**  on how this token should be generated. Also include the access token (JWT) from /token API in your header prefixed with 'Bearer'.\n\n**Note:** Only the Bearer token is required when calling Sandbox API.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "uen",
            "description": "Required URL path parameter of the entity's unique entity number. This value can be obtained from the sub (uen_uuid) in the decoded access_token.",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 10,
              "example": "T15LP0010D"
            }
          },
          {
            "in": "path",
            "name": "uuid",
            "description": "Required URL path parameter of the person's uuid. This value can be obtained from the sub (uen_uuid) in the decoded access_token.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "f5230352-50d4-0001-74f2-11907b381069"
            }
          },
          {
            "in": "query",
            "name": "txnNo",
            "description": "Transaction ID from requesting digital services for cross referencing.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "attributes",
            "required": true,
            "description": "Comma separated list of attributes requested. Possible attributes are listed in the scopes of the OAuth2 Security Schema above.",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "minimum": 1
              },
              "example": "addresses,basic-profile,name,hanyupinyinname"
            }
          },
          {
            "in": "query",
            "name": "client_id",
            "description": "Unique ID for your application.",
            "allowEmptyValue": false,
            "required": true,
            "schema": {
              "type": "string",
              "example": "STG-180099999K-TEST01"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.\n\n**Note:**\n  - Response Content-Encoding will be 'gzip'.\n  - Response Content-Type will be 'application/jose', which is a JSON object conforming to the JWE standard (https://tools.ietf.org/html/rfc7516).\n  - Response contents are first signed, then encrypted. In order to access the data, your application should do the following steps in order:\n      1. Decrypt the payload with your application's private key.\n      2. Validate the decrypted payload signature with our public key.\n      3. Decode the verified JWS payload using Base64 decode.\n  - After doing the above steps, your application will be able to extract the payload in JSON format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Entity-Person"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. This could be due to the scenarios below:\n\n- **SCENARIO 1:** Requested 'uen'/'uuid' does not match the 'uen'/'uuid' of the person of the entity who logged in. When requesting for data of Person A and Entity A, the CorpPass login and consent must be by Person A from Entity A as well.\n\n\n- **SCENARIO 2:** Requested attributes does not match the attributes consented by person. This happens if the list of attributes in your request are different from the attributes specified when calling the token endpoint.\n\n\n- **SCENARIO 3:** Request contains attributes that are not allowable for the digital service. This happens when you request for attributes that are not allowed for your application. The list of allowable attributes for your application are preconfigured during the onboarding process.\n\nDetails will be given in the error object returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. Digital service is not registered with MyInfo Business.\n\n**MESSAGE:** 'Digital Service is invalid'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found. UIN/FIN and/or UEN does not exist in MyInfo Business.\n\n**MESSAGE:** 'UIN/FIN and/or UEN is invalid.'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "428": {
            "description": "Profile Incomplete. User/Entity registered for MyInfo Business less than 1 working day.\n\n**MESSAGE:** 'Profile Incomplete'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Error with request parameters or headers. Error details will be provided in the response body"
          }
        },
        "x-code-samples": [
          {
            "lang": "NodeJS",
            "source": "// function to prepare request for PERSON API\nfunction createPersonRequest(uuid, validToken) {\n  var url = _personApiUrl + \"/\" + uuid + \"/\";\n  var cacheCtl = \"no-cache\";\n  var method = \"GET\";\n  var request = null;\n  // assemble params for Person API\n  var strParams = \"client_id=\" + _clientId +\n    \"&attributes=\" + _attributes;\n  var params = querystring.parse(strParams);\n\n  // assemble headers for Person API\n  var strHeaders = \"Cache-Control=\" + cacheCtl;\n  var headers = querystring.parse(strHeaders);\n  var authHeaders;\n\n  // Sign request and add Authorization Headers\n  authHeaders = generateAuthorizationHeader(\n    url,\n    params,\n    method,\n    \"\", // no content type needed for GET\n    _authLevel,\n    _clientId,\n    _privateKeyContent,\n    _clientSecret\n  );\n\n  if (!_.isEmpty(authHeaders)) {\n    _.set(headers, \"Authorization\", authHeaders + \",Bearer \" + validToken);\n  }\n  else {\n    // NOTE: include access token in Authorization header as \"Bearer \" (with space behind)\n      _.set(headers, \"Authorization\", \"Bearer \" + validToken);\n  }\n\n  // invoke token API\n  var request = restClient.get(url);\n\n  // Set headers\n  if (!_.isUndefined(headers) && !_.isEmpty(headers))\n    request.set(headers);\n\n  // Set Params\n  if (!_.isUndefined(params) && !_.isEmpty(params))\n    request.query(params);\n\n  return request;\n}\n"
          }
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    }
  },
  "components": {
    "requestBodies": {
      "gettoken": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "The authcode given by the authorise API.",
                  "type": "string"
                },
                "grant_type": {
                  "description": "Grant type for getting token (default \"authorization_code\")",
                  "type": "string",
                  "default": "authorization_code"
                },
                "client_secret": {
                  "description": "Secret key given to your application during onboarding.",
                  "type": "string"
                },
                "client_id": {
                  "description": "Unique ID for your application.",
                  "type": "string"
                },
                "redirect_uri": {
                  "description": "Application's callback URL.",
                  "type": "string"
                },
                "state": {
                  "description": "Identifier that represents the user's session with the client, provided earlier during the authorise API call.",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "client_secret",
                "client_id",
                "redirect_uri"
              ]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "oauth2": {
        "description": "The following are the available OAuth2 scopes for MyInfo Business APIs\n",
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "/authorise",
            "tokenUrl": "/token",
            "scopes": {
              "basic-profile": "(Entity) Basic Entity Profile",
              "previous-names": "(Entity) Previous Names",
              "previous-uens": "(Entity) Previous UENs",
              "addresses": "(Entity) Addresses",
              "financials": "(Entity) Financials",
              "capitals": "(Entity) Capitals",
              "appointments": "(Entity) Appointments",
              "shareholders": "(Entity) Shareholders",
              "grants": "(Entity) Grants",
              "builders-contractors": "(Entity) Builders and contractors",
              "gov-contracts": "(Entity) Government contracts",
              "licences": "(Entity) Licences",
              "uinfin": "(Person) NRIC/FIN",
              "name": "(Person) Full Name",
              "hanyupinyinname": "(Person) Han Yu Pin Yin name",
              "aliasname": "(Person) Alias name",
              "hanyupinyinaliasname": "(Person) Han Yu Pin Yin Alias name",
              "marriedname": "(Person) Married name",
              "sex": "(Person) Sex",
              "race": "(Person) Race",
              "secondaryrace": "(Person) Secondary Race",
              "dialect": "(Person) Dialect",
              "nationality": "(Person) Nationality/Citizenship",
              "dob": "(Person) Date of Birth",
              "birthcountry": "(Person) Country/Place of Birth",
              "residentialstatus": "(Person) Residential Status",
              "passportnumber": "(Person) Passport Number",
              "passportexpirydate": "(Person) Passport Expiry Date",
              "regadd": "(Person) Registered Address",
              "housingtype": "(Person) Housing Type",
              "hdbtype": "(Person) HDB Type",
              "ownerprivate": "(Person) Ownership of Private Property Status",
              "email": "(Person) Email Address",
              "mobileno": "(Person) Mobile Number",
              "marital": "(Person) Marital Status",
              "marriagecertno": "(Person) Certificate number of the latest marriage",
              "countryofmarriage": "(Person) Country of the latest marriage",
              "marriagedate": "(Person) Latest Marriage Date",
              "divorcedate": "(Person) Last Divorce Date",
              "childrenbirthrecords": "(Person) Details of Children Birth Records",
              "occupation": "(Person) Occupation",
              "employment": "(Person) Employer's Name",
              "workpassstatus": "(Person) Work pass status of a FIN holder",
              "workpassexpirydate": "(Person) Work pass expiry of a foreigner",
              "assessableincome": "(Person) Latest Assessable Income",
              "assessyear": "(Person) Year of Assessment (for Assessable Income)",
              "noa-basic": "(Person) Notice Of Assessment (Basic)",
              "noa": "(Person) Notice Of Assessment",
              "noahistory-basic": "(Person) History of Notice Of Assessment (Basic)",
              "noahistory": "(Person) History of Notice Of Assessment",
              "cpfcontributions": "(Person) Employer CPF Contributions",
              "cpfbalances": "(Person) CPF Balances",
              "vehicles": "(Person) Vehicle Number"
            }
          }
        }
      }
    },
    "schemas": {
      "AuthTokenResponse": {
        "description": "Authorisation Token Response JSON",
        "type": "object",
        "properties": {
          "access_token": {
            "title": "JWTAccessToken",
            "description": "Access token to be used in the subsequent resource endpoint call. This is in the form of  JWT (JSON web token). Include this in your header as 'Bearer' when invoking the resource API. This JWT complies to the standard 'JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants' (https://tools.ietf.org/html/rfc7523).\n\n**Note:** This token is returned in the form of a compact serialized string. Decode and verify the signature before use.",
            "type": "object",
            "properties": {
              "sub": {
                "type": "string",
                "description": "(subject) This is the identifier of the user who logged in."
              },
              "scope": {
                "type": "string",
                "description": "Space separated list of scopes allowed. This is the list scopes user has consented to."
              },
              "nbf": {
                "type": "string",
                "description": "(not before) - the time before which the token MUST NOT be accepted for processing"
              },
              "iss": {
                "type": "string",
                "description": "(issuer) Issuer of the JWT."
              },
              "txnid": {
                "type": "string",
                "description": "(transaction id) Unique string for reconciliation of transaction."
              },
              "client": {
                "type": "object",
                "description": "OAuth 2 client information and UEN info",
                "properties": {
                  "client_id": {
                    "type": "string",
                    "description": "Client ID",
                    "example": "STG2-MYINFO-SELF-TEST"
                  },
                  "client_name": {
                    "type": "string",
                    "description": "Client Name",
                    "example": "Myinfo Self Test App"
                  },
                  "entity_uen": {
                    "type": "string",
                    "description": "UEN of Entity",
                    "example": "T16GB0002G"
                  },
                  "entity_name": {
                    "type": "string",
                    "description": "Name of Entity",
                    "example": "GovTech"
                  }
                }
              },
              "subentity": {
                "type": "object",
                "description": "Entity that is receving the data",
                "properties": {
                  "subclient_id": {
                    "type": "string",
                    "description": "Client ID of the receiving Entity"
                  },
                  "subclient_name": {
                    "type": "string",
                    "description": "Client Name of the receiving Entity"
                  },
                  "entity_name": {
                    "type": "string",
                    "description": "Entity Name of the receiving Entity"
                  },
                  "entity_uen": {
                    "type": "string",
                    "description": "UEN of the receiving Entity"
                  },
                  "whitelist": {
                    "type": "boolean",
                    "description": "Indicator if receiving entity is whitelisted"
                  }
                }
              },
              "expires_in": {
                "type": "string",
                "description": "The remaining lifetime of the access token."
              },
              "iat": {
                "type": "string",
                "description": "(issued at) Time which JWT was issued at."
              },
              "exp": {
                "type": "string",
                "description": "(expiration time) time which JWT will expire"
              },
              "realm": {
                "type": "string",
                "description": "Realm for OAuth process."
              },
              "aud": {
                "type": "string",
                "description": "Audience for JWT."
              },
              "jti": {
                "type": "string",
                "description": "(JWT ID) unique identifier for the JWT token."
              },
              "cnf": {
                "type": "object",
                "description": null,
                "properties": {
                  "jkt": {
                    "type": "string",
                    "description": "Thumbprint of jwk in DPoP Proof"
                  }
                }
              },
              "jku": {
                "type": "string",
                "description": "JWKS url to retrieve partner's public encryption key"
              },
              "epk": {
                "type": "object",
                "description": "Partner's public key in JWK format",
                "properties": {
                  "use": {
                    "type": "string",
                    "description": "(Public Key Use) Identifies the intended use of the public key, such as \"enc\"",
                    "example": "enc"
                  },
                  "alg": {
                    "type": "string",
                    "description": "(Algorithm) Identifies the algorithm intended for use with the key",
                    "example": "ECDH-ES+A256KW"
                  },
                  "kty": {
                    "type": "string",
                    "description": "(Key Type) Identifies the cryptographic algorithm family used with the key, such as \"EC\"",
                    "example": "EC"
                  },
                  "kid": {
                    "type": "string",
                    "description": "(Key ID) Used to match a specific key, the ID of the key",
                    "example": "M-JXqh0gh1GGUUdzNue3IUDyUiagqjHathnscUk2nS8"
                  },
                  "crv": {
                    "type": "string",
                    "description": "Curve of the EC key",
                    "example": "P-256"
                  },
                  "x": {
                    "type": "string",
                    "description": "Generated from the EC public key",
                    "example": "qrR8PAUO6fDouV-6mVdix5IyrVMtu0PVS0nOqWBZosA"
                  },
                  "y": {
                    "type": "string",
                    "description": "Generated from the EC public key",
                    "example": "6xSbySYW6ke2V727TCgSOPiH4XSDgxFCUrAAMSbl9tI"
                  }
                }
              }
            }
          },
          "token_type": {
            "type": "string",
            "description": "Type of token (Bearer)",
            "default": "Bearer"
          },
          "expires_in": {
            "type": "integer",
            "description": "Expiry of access token (in seconds)"
          },
          "scope": {
            "type": "string",
            "description": "Scopes requested, separated by space"
          }
        },
        "required": [
          "access_token",
          "token_type"
        ]
      },
      "JWTAccessToken": {
        "title": "JWTAccessToken",
        "description": "Access token to be used in the subsequent resource endpoint call. This is in the form of  JWT (JSON web token). Include this in your header as 'Bearer' when invoking the resource API. This JWT complies to the standard 'JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants' (https://tools.ietf.org/html/rfc7523).\n\n**Note:** This token is returned in the form of a compact serialized string. Decode and verify the signature before use.",
        "type": "object",
        "properties": {
          "sub": {
            "type": "string",
            "description": "(subject) This is the identifier of the user who logged in."
          },
          "scope": {
            "type": "string",
            "description": "Space separated list of scopes allowed. This is the list scopes user has consented to."
          },
          "nbf": {
            "type": "string",
            "description": "(not before) - the time before which the token MUST NOT be accepted for processing"
          },
          "iss": {
            "type": "string",
            "description": "(issuer) Issuer of the JWT."
          },
          "txnid": {
            "type": "string",
            "description": "(transaction id) Unique string for reconciliation of transaction."
          },
          "client": {
            "type": "object",
            "description": "OAuth 2 client information and UEN info",
            "properties": {
              "client_id": {
                "type": "string",
                "description": "Client ID",
                "example": "STG2-MYINFO-SELF-TEST"
              },
              "client_name": {
                "type": "string",
                "description": "Client Name",
                "example": "Myinfo Self Test App"
              },
              "entity_uen": {
                "type": "string",
                "description": "UEN of Entity",
                "example": "T16GB0002G"
              },
              "entity_name": {
                "type": "string",
                "description": "Name of Entity",
                "example": "GovTech"
              }
            }
          },
          "subentity": {
            "type": "object",
            "description": "Entity that is receving the data",
            "properties": {
              "subclient_id": {
                "type": "string",
                "description": "Client ID of the receiving Entity"
              },
              "subclient_name": {
                "type": "string",
                "description": "Client Name of the receiving Entity"
              },
              "entity_name": {
                "type": "string",
                "description": "Entity Name of the receiving Entity"
              },
              "entity_uen": {
                "type": "string",
                "description": "UEN of the receiving Entity"
              },
              "whitelist": {
                "type": "boolean",
                "description": "Indicator if receiving entity is whitelisted"
              }
            }
          },
          "expires_in": {
            "type": "string",
            "description": "The remaining lifetime of the access token."
          },
          "iat": {
            "type": "string",
            "description": "(issued at) Time which JWT was issued at."
          },
          "exp": {
            "type": "string",
            "description": "(expiration time) time which JWT will expire"
          },
          "realm": {
            "type": "string",
            "description": "Realm for OAuth process."
          },
          "aud": {
            "type": "string",
            "description": "Audience for JWT."
          },
          "jti": {
            "type": "string",
            "description": "(JWT ID) unique identifier for the JWT token."
          },
          "cnf": {
            "type": "object",
            "description": null,
            "properties": {
              "jkt": {
                "type": "string",
                "description": "Thumbprint of jwk in DPoP Proof"
              }
            }
          },
          "jku": {
            "type": "string",
            "description": "JWKS url to retrieve partner's public encryption key"
          },
          "epk": {
            "type": "object",
            "description": "Partner's public key in JWK format",
            "properties": {
              "use": {
                "type": "string",
                "description": "(Public Key Use) Identifies the intended use of the public key, such as \"enc\"",
                "example": "enc"
              },
              "alg": {
                "type": "string",
                "description": "(Algorithm) Identifies the algorithm intended for use with the key",
                "example": "ECDH-ES+A256KW"
              },
              "kty": {
                "type": "string",
                "description": "(Key Type) Identifies the cryptographic algorithm family used with the key, such as \"EC\"",
                "example": "EC"
              },
              "kid": {
                "type": "string",
                "description": "(Key ID) Used to match a specific key, the ID of the key",
                "example": "M-JXqh0gh1GGUUdzNue3IUDyUiagqjHathnscUk2nS8"
              },
              "crv": {
                "type": "string",
                "description": "Curve of the EC key",
                "example": "P-256"
              },
              "x": {
                "type": "string",
                "description": "Generated from the EC public key",
                "example": "qrR8PAUO6fDouV-6mVdix5IyrVMtu0PVS0nOqWBZosA"
              },
              "y": {
                "type": "string",
                "description": "Generated from the EC public key",
                "example": "6xSbySYW6ke2V727TCgSOPiH4XSDgxFCUrAAMSbl9tI"
              }
            }
          }
        }
      },
      "Person": {
        "type": "object",
        "description": "Person instance's details",
        "allOf": [
          {
            "$ref": "#/components/schemas/PersonCommon"
          },
          {
            "$ref": "#/components/schemas/PersonCommunityCommercial"
          },
          {
            "$ref": "#/components/schemas/PersonFinancial"
          }
        ]
      },
      "PersonFinancial": {
        "type": "object",
        "description": "Person instance's details",
        "properties": {
          "noa-basic": {
            "description": "Summary of latest Notice of Assessment within the past three years.",
            "allOf": [
              {
                "$ref": "#/components/schemas/NOABasic"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "noa": {
            "description": "Detailed breakdown of latest Notice of Assessment within the past three years.",
            "allOf": [
              {
                "$ref": "#/components/schemas/NOA"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "noahistory-basic": {
            "allOf": [
              {
                "$ref": "#/components/schemas/noahistory-basic"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "noahistory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/noahistory"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "cpfcontributions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cpfcontributions"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "cpfemployers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cpfemployers"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "cpfbalances": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cpfbalances"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "cpfhousingwithdrawal": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cpfhousingwithdrawal"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "cpfhomeprotectionscheme": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cpfhomeprotectionscheme"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "cpfdependantprotectionscheme": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cpfdependantprotectionscheme"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "cpfinvestmentscheme": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cpfinvestmentscheme"
              }
            ]
          }
        }
      },
      "PersonCommon": {
        "type": "object",
        "description": "Person instance's details",
        "properties": {
          "partialuinfin": {
            "allOf": [
              {
                "$ref": "#/components/schemas/partialuinfin"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "uinfin": {
            "allOf": [
              {
                "$ref": "#/components/schemas/uinfin"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/name"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "hanyupinyinname": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hanyupinyinname"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "aliasname": {
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasname"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "hanyupinyinaliasname": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hanyupinyinaliasname"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "marriedname": {
            "allOf": [
              {
                "$ref": "#/components/schemas/marriedname"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "sex": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sex"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "race": {
            "allOf": [
              {
                "$ref": "#/components/schemas/race"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "secondaryrace": {
            "allOf": [
              {
                "$ref": "#/components/schemas/secondaryrace"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "dialect": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dialect"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "nationality": {
            "allOf": [
              {
                "$ref": "#/components/schemas/nationality"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "dob": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dob"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "birthcountry": {
            "allOf": [
              {
                "$ref": "#/components/schemas/birthcountry"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "residentialstatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/residentialstatus"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "passportnumber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/passportnumber"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "passportexpirydate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/passportexpirydate"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "regadd": {
            "allOf": [
              {
                "$ref": "#/components/schemas/regadd"
              }
            ]
          },
          "mailadd": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mailadd"
              }
            ],
            "deprecated": true
          },
          "billadd": {
            "allOf": [
              {
                "$ref": "#/components/schemas/billadd"
              }
            ],
            "deprecated": true
          },
          "housingtype": {
            "allOf": [
              {
                "$ref": "#/components/schemas/housingtype"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "hdbtype": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hdbtype"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "hdbownership": {
            "type": "array",
            "title": "HDBOwnership",
            "description": "HDB Ownership details\n",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/hdbownership"
                },
                {
                  "$ref": "#/components/schemas/DataFieldProperties"
                }
              ]
            }
          },
          "ownerprivate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ownerprivate"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "email": {
            "allOf": [
              {
                "$ref": "#/components/schemas/email"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "homeno": {
            "allOf": [
              {
                "$ref": "#/components/schemas/homeno"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ],
            "deprecated": true
          },
          "mobileno": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mobileno"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "marital": {
            "allOf": [
              {
                "$ref": "#/components/schemas/marital"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "marriagecertno": {
            "allOf": [
              {
                "$ref": "#/components/schemas/marriagecertno"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "countryofmarriage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/countryofmarriage"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "marriagedate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/marriagedate"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "divorcedate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/divorcedate"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "childrenbirthrecords": {
            "type": "array",
            "title": "ChildrenBirthRecords",
            "description": "This refers to only local registered birth records(based on ICA’s electronic Birth Certificate Records from 1985 onwards).\n\nThis includes adoption of locally registered child.\n\nFor child below 21, the child’s Birth Cert No, Name, Sex, Race, Dialect, Date of Birth and Time of Birth will be shown.\n\nFor child above 21, only the child’s Birth Cert Number will be shown.",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/childrenbirthrecords"
                }
              ]
            }
          },
          "sponsoredchildrenrecords": {
            "type": "array",
            "title": "SponsoredChildrenRecords",
            "description": "Details of children sponsored to be SC/PR/LTVP\n\nFor child below 21, the child's NRIC/FIN, Name, Sex, Race, Secondary Race, Dialect, Date of Birth, Country/Place of Birth, Residential Status and SC/PR/LTVP grant date will be shown.\n\nFor child above 21, only the child's last known NRIC/FIN will be shown.",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/sponsoredchildrenrecords"
                }
              ]
            }
          },
          "edulevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/edulevel"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ],
            "deprecated": true
          },
          "gradyear": {
            "allOf": [
              {
                "$ref": "#/components/schemas/gradyear"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ],
            "deprecated": true
          },
          "schoolname": {
            "allOf": [
              {
                "$ref": "#/components/schemas/schoolname"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ],
            "deprecated": true
          },
          "occupation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/occupation"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "employment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/employment"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "passtype": {
            "allOf": [
              {
                "$ref": "#/components/schemas/passtype"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "passstatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/passstatus"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "passexpirydate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/passexpirydate"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "employmentsector": {
            "allOf": [
              {
                "$ref": "#/components/schemas/employmentsector"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "householdincome": {
            "allOf": [
              {
                "$ref": "#/components/schemas/householdincome"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ],
            "deprecated": true
          },
          "vehicles": {
            "allOf": [
              {
                "$ref": "#/components/schemas/vehicles"
              }
            ]
          },
          "drivinglicence": {
            "allOf": [
              {
                "$ref": "#/components/schemas/drivinglicence"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "academicqualifications": {
            "allOf": [
              {
                "$ref": "#/components/schemas/academicqualifications"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          }
        }
      },
      "PersonCommunityCommercial": {
        "type": "object",
        "description": "Person instance's details",
        "properties": {
          "merdekagen": {
            "allOf": [
              {
                "$ref": "#/components/schemas/merdekagen"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "pioneergen": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pioneergen"
              },
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          }
        }
      },
      "DataFieldProperties": {
        "type": "object",
        "required": [
          "classification",
          "source",
          "lastupdated"
        ],
        "properties": {
          "classification": {
            "type": "string",
            "maxLength": 1,
            "enum": [
              "C"
            ],
            "default": "C",
            "description": "Data classification of data field. Default 'C' - Confidential."
          },
          "source": {
            "type": "string",
            "maxLength": 1,
            "enum": [
              "1",
              "2",
              "3",
              "4"
            ],
            "description": "Source of data.\n\n* '1' - Government-verified\n* '2' - User provided\n* '3' - Field is Not Applicable to Person\n* '4' - Verified by SingPass\n\n**Note:** All Government-verified fields must be **non-editable** on your digital service form (some exceptions apply - see individual field descriptions)."
          },
          "lastupdated": {
            "type": "string",
            "format": "date",
            "required": false,
            "description": "Last updated date of data field. See \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14. Can be blank if the source agency does not have record for the user."
          },
          "unavailable": {
            "type": "boolean",
            "required": false,
            "description": "Optional flag to indicate if data is unavailable from data source.\n\n**NOTE:**\n  - This optional property will be only present with value `true` if there is no data available from the data source; i.e. record not found.\n  - When this flag is `true`, no other data attributes will be present (other than `classification`, `source`, and `lastupdated`).\n  - If data is available from the data source, this property will not be present.\n"
          }
        },
        "example": {
          "classification": "C",
          "source": "1",
          "lastupdated": "2019-03-26"
        }
      },
      "MyinfobizDataFieldProperties": {
        "type": "object",
        "required": [
          "classification",
          "source",
          "lastupdated"
        ],
        "properties": {
          "classification": {
            "type": "string",
            "maxLength": 1,
            "enum": [
              "C"
            ],
            "default": "C",
            "description": "Data classification of data field. Default 'C' - Confidential."
          },
          "source": {
            "type": "string",
            "maxLength": 1,
            "enum": [
              "1",
              "2",
              "3",
              "4"
            ],
            "description": "Source of data.\n\n* '1' - Government-verified\n* '2' - User provided\n* '3' - Field is Not Applicable to Person\n* '4' - Verified by SingPass\n\n**Note:** All Government-verified fields must be **non-editable** on your digital service form (some exceptions apply - see individual field descriptions)."
          },
          "lastupdated": {
            "type": "string",
            "format": "date",
            "required": false,
            "description": "Last updated date of data field. See \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14. "
          },
          "unavailable": {
            "type": "boolean",
            "required": false,
            "description": "Optional flag to indicate if data is unavailable from data source.\n\n**NOTE:**\n  - This optional property will be only present with value `true` if there is no data available from the data source; i.e. record not found.\n  - When this flag is `true`, no other data attributes will be present (other than `classification`, `source`, and `lastupdated`).\n  - If data is available from the data source, this property will not be present.\n"
          }
        },
        "example": {
          "classification": "C",
          "source": "1",
          "lastupdated": "2019-03-26"
        }
      },
      "AddressSG": {
        "type": "object",
        "description": "Address details (Singapore Format)",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of Address (SG or UNFORMATTED for non SG)",
            "default": "SG",
            "enum": [
              "SG",
              "UNFORMATTED"
            ]
          },
          "block": {
            "type": "object",
            "description": "Block/House of Address",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 10,
                "example": "548"
              }
            }
          },
          "building": {
            "type": "object",
            "description": "Building of Address",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 66,
                "example": ""
              }
            }
          },
          "floor": {
            "type": "object",
            "description": "Floor of Address",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 3,
                "example": "09"
              }
            }
          },
          "unit": {
            "type": "object",
            "description": "Unit of Address",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 5,
                "example": "128"
              }
            }
          },
          "street": {
            "type": "object",
            "description": "Street of Address",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 66,
                "example": "BEDOK NORTH AVENUE 1"
              }
            }
          },
          "postal": {
            "type": "object",
            "description": "Postal Code of Address",
            "properties": {
              "value": {
                "type": "string",
                "minLength": 6,
                "maxLength": 6,
                "example": "460548"
              }
            }
          },
          "country": {
            "type": "object",
            "description": "Country/Place of Address. For AddressSG this will always be \"SG\".",
            "properties": {
              "code": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2,
                "default": "SG"
              },
              "desc": {
                "type": "string",
                "default": "SINGAPORE"
              }
            }
          }
        }
      },
      "dataitem-address-sg": {
        "type": "object",
        "description": "Address details (Singapore Format)",
        "allOf": [
          {
            "$ref": "#/components/schemas/AddressSG"
          },
          {
            "$ref": "#/components/schemas/DataFieldProperties"
          }
        ]
      },
      "AddressUnformatted": {
        "type": "object",
        "description": "Address details (Non-Singapore Format)",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of Address (SG or UNFORMATTED for non SG)",
            "default": "UNFORMATTED",
            "enum": [
              "SG",
              "UNFORMATTED"
            ]
          },
          "line1": {
            "type": "object",
            "description": "Unregistered Foreign address line 1",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 66,
                "example": "4578 SMITHFIELD AVENUE"
              }
            }
          },
          "line2": {
            "type": "object",
            "description": "Unregistered Foreign address line 2",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 66,
                "example": "HARTFORD CT 06120"
              }
            }
          }
        }
      },
      "dataitem-address-unformatted": {
        "type": "object",
        "description": "Address details (Non-Singapore Format)",
        "allOf": [
          {
            "$ref": "#/components/schemas/AddressUnformatted"
          },
          {
            "$ref": "#/components/schemas/DataFieldProperties"
          }
        ]
      },
      "HDBOwnership": {
        "type": "object",
        "title": "HDBOwnership",
        "description": "HDB Ownership details\n\n**TODO: is this tied to the registered address or the person (UINFIN) or both?**\n",
        "properties": {
          "noofowners": {
            "type": "object",
            "description": "Number of Owners. Note that this does not include executors, administrators or trustees.",
            "properties": {
              "value": {
                "type": "integer",
                "maximum": 9,
                "example": 2
              }
            }
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressSG"
              }
            ]
          },
          "hdbtype": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hdbtype"
              }
            ]
          },
          "leasecommencementdate": {
            "type": "object",
            "description": "Date from which the lease period starts. See \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14",
            "properties": {
              "value": {
                "type": "string",
                "format": "date",
                "example": "2008-06-13"
              }
            }
          },
          "termoflease": {
            "type": "object",
            "description": "Term of lease (in years) for the property computed from the lease commencement date.",
            "properties": {
              "value": {
                "type": "integer",
                "maximum": 99,
                "example": 99
              }
            }
          },
          "dateofpurchase": {
            "type": "object",
            "description": "Effective date of flat purchase. See \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14",
            "properties": {
              "value": {
                "type": "string",
                "format": "date",
                "example": "2008-06-13"
              }
            }
          },
          "dateofownershiptransfer": {
            "type": "object",
            "description": "Effective date of partial transfer without monetary consideration (e.g. addition, deletion or substitution of a co-owner) for an HDB sold flat.\n\nFor partial transfer of flat where at least one of the current owner remains in the household, the Date of Purchase remains unchanged while the date of transfer of ownership will be updated.\n\nFor outright transfer where there is a total change of all owner(s), only the Date of Purchase will be updated.\n\nSee \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14'",
            "properties": {
              "value": {
                "type": "string",
                "format": "date",
                "example": "2018-06-13"
              }
            }
          },
          "loangranted": {
            "type": "object",
            "description": "The amount of housing loan granted to owner(s) by HDB in SGD.",
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "example": 310000.01
              }
            }
          },
          "originalloanrepayment": {
            "type": "object",
            "description": "The number of years of loan repaymnet opted by owner(s) at the time the loan is first granted to him/her.",
            "properties": {
              "value": {
                "type": "integer",
                "maximum": 99,
                "example": 25
              }
            }
          },
          "balanceloanrepayment": {
            "type": "object",
            "description": "The remaining term of repayment for the loan in the format `years` + `months`.",
            "properties": {
              "years": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "integer",
                    "maximum": 99,
                    "example": 2
                  }
                }
              },
              "months": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "integer",
                    "maximum": 99,
                    "example": 6
                  }
                }
              }
            }
          },
          "outstandingloanbalance": {
            "type": "object",
            "description": "The amount of outstanding HDB loan owed by owner(s) in SGD.",
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "example": 50000.01
              }
            }
          },
          "monthlyloaninstalment": {
            "type": "object",
            "description": "The amount of monthly instalment the owner(s) have to pay for his/her loan in SGD.",
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "example": 1000.01
              }
            }
          },
          "outstandinginstalment": {
            "type": "object",
            "description": "The amount of outstanding instalment the owner(s) have to pay for his/her loan in SGD.",
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "example": 1000.01
              }
            }
          },
          "purchaseprice": {
            "type": "object",
            "description": "The purchase price of the HDB flat in SGD.",
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "example": 1000.01
              }
            }
          }
        }
      },
      "NOA": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "object",
            "description": "Assessable Income",
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "example": 100000.01
              }
            }
          },
          "yearofassessment": {
            "type": "object",
            "description": "value of data field",
            "properties": {
              "value": {
                "type": "string",
                "pattern": "[0-9]{4}",
                "maxLength": 4,
                "example": "2018"
              }
            }
          },
          "employment": {
            "type": "object",
            "description": "Assessable Income from employment",
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "example": 100000.01
              }
            }
          },
          "trade": {
            "type": "object",
            "description": "Assessable Income from trade",
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "example": 0
              }
            }
          },
          "rent": {
            "type": "object",
            "description": "Assessable Income from rent",
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "example": 0
              }
            }
          },
          "interest": {
            "type": "object",
            "description": "Assessable Income from interest",
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "example": 0
              }
            }
          },
          "taxclearance": {
            "type": "object",
            "description": "Tax Clearance indicator. This means that tax clearance has been sought by the employer for this NOA assessment. For more information, please refer to [this](https://www.iras.gov.sg/irashome/Businesses/Employers/Tax-Clearance-for-Foreign-SPR-Employees/Getting-Tax-Clearance--A-Step-by-Step-Guide/)",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 1,
                "enum": [
                  "Y",
                  "N"
                ],
                "example": "N"
              }
            }
          },
          "category": {
            "type": "object",
            "description": "Type of 'Notice of Assessment' (NOA)",
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "ADDITIONAL",
                  "AMENDED",
                  "ORIGINAL",
                  "REPAYMENT"
                ],
                "example": "ORIGINAL"
              }
            }
          }
        }
      },
      "NOABasic": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "object",
            "description": "Assessable Income",
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "example": 100000.01
              }
            }
          },
          "yearofassessment": {
            "type": "object",
            "description": "The second latest annual assessable income available from IRAS within the past 3 years.",
            "properties": {
              "value": {
                "type": "string",
                "pattern": "[0-9]{4}",
                "maxLength": 4,
                "example": "2018"
              }
            }
          }
        }
      },
      "PhoneNumLocal": {
        "type": "object",
        "properties": {
          "prefix": {
            "type": "object",
            "description": "Prefix of Phone Number. Defaults to '+'. If phone number is blank, prefix will be returned as blank.",
            "properties": {
              "value": {
                "type": "string",
                "default": "+",
                "maxLength": 1,
                "example": "+"
              }
            }
          },
          "areacode": {
            "type": "object",
            "description": "Area Code of Phone Number. Default to '65'. If phone number is blank, code will be returned as blank.",
            "properties": {
              "value": {
                "type": "string",
                "default": "65",
                "maxLength": 3,
                "example": "65"
              }
            }
          },
          "nbr": {
            "type": "object",
            "description": "Phone Number.",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 12,
                "example": "66132665"
              }
            }
          }
        }
      },
      "academicqualifications": {
        "type": "object",
        "title": "Academic Qualifications",
        "description": "Academic Qualifications achieved",
        "properties": {
          "transcripts": {
            "type": "array",
            "description": "Transcript of qualification",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "object",
                  "description": "Qualification's Name",
                  "properties": {
                    "value": {
                      "type": "string",
                      "example": "SINGAPORE-CAMBRIDGE GENERAL CERTIFICATE OF EDUCATION ORDINARY LEVEL"
                    }
                  }
                },
                "yearattained": {
                  "type": "object",
                  "description": "Year this qualification was attained\n\nSee \"date-fullyear\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14'",
                  "properties": {
                    "value": {
                      "type": "string",
                      "format": "date",
                      "example": "2018"
                    }
                  }
                },
                "results": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subject": {
                        "type": "object",
                        "description": "Subject taken",
                        "properties": {
                          "value": {
                            "type": "string",
                            "example": "English Language"
                          }
                        }
                      },
                      "level": {
                        "type": "object",
                        "description": "Level of subject taken",
                        "properties": {
                          "value": {
                            "type": "string",
                            "example": "Ordinary"
                          }
                        }
                      },
                      "grade": {
                        "type": "object",
                        "description": "Grade attained",
                        "properties": {
                          "value": {
                            "type": "string",
                            "example": "A"
                          }
                        }
                      },
                      "subsubject": {
                        "type": "object",
                        "description": "Optional Sub Subject taken",
                        "properties": {
                          "value": {
                            "type": "string",
                            "example": "SPECIAL PAPER"
                          }
                        }
                      },
                      "subgrade": {
                        "type": "object",
                        "description": "Optional grade attained for subSubject",
                        "properties": {
                          "value": {
                            "type": "string",
                            "example": "One"
                          }
                        }
                      }
                    }
                  }
                },
                "explanatorynotes": {
                  "type": "object",
                  "description": "Explanatory Notes",
                  "properties": {
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "certificates": {
            "type": "array",
            "description": "Electronic Certificates Uploaded",
            "items": {
              "type": "object",
              "description": "Electronic Certificate",
              "properties": {
                "name": {
                  "type": "object",
                  "description": "File name of the electronic certificate",
                  "properties": {
                    "value": {
                      "type": "string",
                      "maxlength": 255,
                      "example": "nus.opencert"
                    }
                  }
                },
                "content": {
                  "type": "object",
                  "description": "File content of the electronic certificate, Base64 encoded",
                  "properties": {
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "opencertificate": {
                  "type": "object",
                  "description": "Open Certificate Information\n\nNote: The test environment for OpenCert is at https://dev.opencerts.io/ while production is\nat https://opencerts.io/",
                  "properties": {
                    "id": {
                      "type": "object",
                      "description": "The OpenCert serial number.",
                      "properties": {
                        "value": {
                          "type": "string",
                          "example": 100000000343840
                        }
                      }
                    },
                    "primary": {
                      "type": "object",
                      "description": "Indicate whether this open certificate is primary certificate",
                      "properties": {
                        "value": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                },
                "opencertificateindicator": {
                  "type": "object",
                  "description": "Indicate whether this file is open certificate",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "aliasname": {
        "type": "object",
        "title": "Alias",
        "description": "Alias name of the Person.\n\n*Presentation Logic - If there is a value to `aliasname` (i.e. not empty), then `aliasname` should be displayed in a new line below `hanyupinyinname`, and prefixed with the ''@'' symbol i.e. \"@`aliasname`\".'*",
        "properties": {
          "value": {
            "type": "string",
            "maxLength": 66,
            "description": "value of the field.",
            "example": "TRICIA TAN XIAO HUI"
          }
        }
      },
      "billadd": {
        "type": "object",
        "title": "BillAdd",
        "description": "Billing Address of Person\n\n**Note:**\n- address can be either a Singapore address (type: 'SG') or non Singapore address (type: 'UNFORMATTED')\n- check the `type` discriminator property to differentiate between the two address formats\n",
        "oneOf": [
          {
            "$ref": "#/components/schemas/dataitem-address-sg"
          },
          {
            "$ref": "#/components/schemas/dataitem-address-unformatted"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "SG": "#/components/schemas/dataitem-address-sg",
            "UNFORMATTED": "#/components/schemas/dataitem-address-unformatted"
          }
        }
      },
      "birthcountry": {
        "type": "object",
        "title": "BirthCountry",
        "description": "Country/Place of Birth of Person.\n\nRefer to the [Code reference tables](#section/Support) in the Support section for list of possible values.",
        "properties": {
          "code": {
            "type": "string",
            "maxLength": 2,
            "pattern": "[a-zA-Z]{2}",
            "description": "",
            "example": "SG"
          },
          "desc": {
            "type": "string",
            "maxLength": 300,
            "description": "",
            "example": "SINGAPORE"
          }
        }
      },
      "childrenbirthrecords": {
        "type": "object",
        "properties": {
          "birthcertno": {
            "type": "object",
            "description": "Birth certificate number of child.",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 15,
                "example": "S5562882C"
              }
            }
          },
          "name": {
            "type": "object",
            "description": "Full Name of child",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 66,
                "example": "Jo Tan Pei Ni"
              }
            }
          },
          "hanyupinyinname": {
            "type": "object",
            "description": "Han Yu Pin Yin name of child.\n\n*Presentation Logic - If there is a value to `hanyupinyinname` (i.e. not empty), then `hanyupinyinname` should be displayed in a new line below `name`, and formatted with round brackets i.e. \\\"(`hanyupinyinname`)\\\".*",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 66,
                "example": "Cheng Pei Ni"
              }
            }
          },
          "aliasname": {
            "type": "object",
            "description": "Alias name of child.\n\n*Presentation Logic - If there is a value to `aliasname` (i.e. not empty), then `aliasname` should be displayed in a new line below `hanyupinyinname`, and prefixed with the ''@'' symbol i.e. \\\"@`aliasname`\\\".*",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 66,
                "example": ""
              }
            }
          },
          "hanyupinyinaliasname": {
            "type": "object",
            "description": "Han Yu Pin Yin Alias name of child.\n\n*Presentation Logic - If there is a value to `hanyupinyinaliasname` (i.e. not empty), then `hanyupinyinaliasname` should be displayed in a new line below `aliasname`, and prefixed with the ''@'' symbol i.e. \\\"@`hanyupinyinaliasname`\\\".*",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 66,
                "example": ""
              }
            }
          },
          "marriedname": {
            "type": "object",
            "description": "Married name of child.\n\n*Presentation Logic - If there is a value to `marriedname` (i.e. not empty), then `marriedname` should be displayed in a new line below `hanyupinyinaliasname`.*",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 66,
                "example": ""
              }
            }
          },
          "sex": {
            "type": "object",
            "description": "Sex of child. Possible values:\n\n* 'F' - FEMALE\n* 'M' - MALE\n* 'U' - UNKNOWN",
            "properties": {
              "code": {
                "type": "string",
                "maxLength": 1,
                "enum": [
                  "F",
                  "M",
                  "U"
                ],
                "example": "F"
              },
              "desc": {
                "type": "string",
                "maxLength": 300,
                "enum": [
                  "FEMALE",
                  "MALE",
                  "UNKNOWN"
                ],
                "example": "FEMALE"
              }
            }
          },
          "race": {
            "type": "object",
            "description": "Race of child.\n\nRefer to the [Code reference tables](#section/Support) in the Support section for list of possible values.\n",
            "properties": {
              "code": {
                "type": "string",
                "maxLength": 2,
                "pattern": "[a-zA-Z]{2}",
                "example": "CN"
              },
              "desc": {
                "type": "string",
                "maxLength": 300,
                "example": "CHINESE"
              }
            }
          },
          "secondaryrace": {
            "type": "object",
            "description": "Secondary Race of child.\n\nRefer to the [Code reference tables](#section/Support) in the Support section for list of possible values.",
            "properties": {
              "code": {
                "type": "string",
                "maxLength": 2,
                "pattern": "[a-zA-Z]{2}",
                "example": ""
              },
              "desc": {
                "type": "string",
                "maxLength": 300,
                "example": ""
              }
            }
          },
          "dialect": {
            "type": "object",
            "description": "Dialect of child.\n\nRefer to the [Code reference tables](#section/Support) in the Support section for list of possible values.",
            "properties": {
              "code": {
                "type": "string",
                "maxLength": 2,
                "pattern": "[a-zA-Z]{2}",
                "example": "HK"
              },
              "desc": {
                "type": "string",
                "maxLength": 300,
                "example": "HOKKIEN"
              }
            }
          },
          "lifestatus": {
            "type": "object",
            "description": "Life Status of child. Possible values:\n\n* A - ALIVE\n* D - DECEASED",
            "properties": {
              "code": {
                "type": "string",
                "enum": [
                  "A",
                  "D"
                ],
                "example": "D"
              },
              "desc": {
                "type": "string",
                "enum": [
                  "ALIVE",
                  "DECEASED"
                ],
                "example": "DECEASED"
              }
            }
          },
          "dob": {
            "type": "object",
            "description": "Date of Birth of child.\n\nSee \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14",
            "properties": {
              "value": {
                "type": "string",
                "format": "date",
                "example": "2011-09-10"
              }
            }
          },
          "tob": {
            "type": "object",
            "description": "Time of Birth of child.\n\nFormat: HHMM",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 4,
                "example": "0901"
              }
            }
          },
          "vaccinationrequirements": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "requirement": {
                  "type": "object",
                  "description": "Vaccination Requirement.\n\nRefer to the [Code reference tables](#section/Support) in the Support section for list of possible values.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "1M3D"
                    },
                    "desc": {
                      "type": "string",
                      "example": "MINIMUM VACCINATION REQUIREMENT FOR PRESCHOOL"
                    }
                  }
                },
                "fulfilled": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "sgcitizenatbirthind": {
            "type": "object",
            "description": "Indicates whether the child is a Singapore Citizen at the time of birth.\n\n* Y - Yes\n* N - No\n* < BLANK > - Not applicable",
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "Y",
                  "N",
                  ""
                ],
                "example": "Y"
              }
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DataFieldProperties"
          }
        ]
      },
      "countryofmarriage": {
        "type": "object",
        "title": "CountryOfMarriage",
        "description": "Country/Place of the latest marriage.\n\n\n**Note:** This field must be made **editable** on your digital service form even though `source` is '1' (Government Verified).",
        "properties": {
          "code": {
            "type": "string",
            "maxLength": 2,
            "description": null,
            "example": "SG"
          },
          "desc": {
            "type": "string",
            "maxLength": 2,
            "description": null,
            "example": "SINGAPORE"
          }
        }
      },
      "cpfbalances": {
        "type": "object",
        "title": "CPFBalances",
        "description": "CPF Balances of Person in SGD.",
        "properties": {
          "ma": {
            "type": "object",
            "description": "Amount Balance in CPF-MA",
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "example": 11470.71
              }
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "oa": {
            "type": "object",
            "description": "Amount Balance in CPF-OA",
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "example": 1581.48
              }
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "sa": {
            "type": "object",
            "description": "Amount Balance in CPF-SA",
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "example": 21967.09
              }
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "ra": {
            "type": "object",
            "description": "Amount Balance in CPF-RA",
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "example": 0.01
              }
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          }
        }
      },
      "cpfcontributions": {
        "type": "object",
        "title": "CPFContributions",
        "description": "Employer CPF Contributions of Person in SGD. Does not include any non-employer contributions.\nMaximum past 15 months' of contributions.\n",
        "properties": {
          "history": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "CPF contribution",
              "properties": {
                "employer": {
                  "type": "object",
                  "description": "Employer who paid the Contribution.",
                  "properties": {
                    "value": {
                      "type": "string",
                      "maxLength": 30,
                      "example": "Crystal Horse Invest Pte Ltd"
                    }
                  }
                },
                "date": {
                  "type": "object",
                  "description": "Date of Contribution Paid. See \"full-date\" in http://xml2rfc.ietf.org/public/rfc/htm",
                  "properties": {
                    "value": {
                      "type": "string",
                      "format": "date",
                      "example": "2017-03-01"
                    }
                  }
                },
                "month": {
                  "type": "object",
                  "description": "Month for which CPF Contribution was paid. Format: YYYY-MM",
                  "properties": {
                    "value": {
                      "type": "string",
                      "maxLength": 7,
                      "example": "2017-02"
                    }
                  }
                },
                "amount": {
                  "type": "object",
                  "description": "Amount of contribution in SGD",
                  "properties": {
                    "value": {
                      "type": "number",
                      "format": "double",
                      "example": 500
                    }
                  }
                }
              }
            },
            "example": [
              {
                "date": {
                  "value": "2016-12-01"
                },
                "amount": {
                  "value": 500
                },
                "month": {
                  "value": "2016-11"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "date": {
                  "value": "2016-12-12"
                },
                "amount": {
                  "value": 500
                },
                "month": {
                  "value": "2016-12"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "date": {
                  "value": "2016-12-21"
                },
                "amount": {
                  "value": 500
                },
                "month": {
                  "value": "2016-12"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "date": {
                  "value": "2017-01-01"
                },
                "amount": {
                  "value": 500
                },
                "month": {
                  "value": "2016-12"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "date": {
                  "value": "2017-01-12"
                },
                "amount": {
                  "value": 500
                },
                "month": {
                  "value": "2017-01"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "date": {
                  "value": "2017-01-21"
                },
                "amount": {
                  "value": 500
                },
                "month": {
                  "value": "2017-01"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "date": {
                  "value": "2017-02-01"
                },
                "amount": {
                  "value": 500
                },
                "month": {
                  "value": "2017-01"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "date": {
                  "value": "2017-02-12"
                },
                "amount": {
                  "value": 500
                },
                "month": {
                  "value": "2017-02"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "date": {
                  "value": "2017-02-21"
                },
                "amount": {
                  "value": 500
                },
                "month": {
                  "value": "2017-02"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "date": {
                  "value": "2017-03-01"
                },
                "amount": {
                  "value": 500
                },
                "month": {
                  "value": "2017-02"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "date": {
                  "value": "2017-03-12"
                },
                "amount": {
                  "value": 500
                },
                "month": {
                  "value": "2017-03"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "date": {
                  "value": "2017-03-21"
                },
                "amount": {
                  "value": 500
                },
                "month": {
                  "value": "2017-03"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "date": {
                  "value": "2017-04-01"
                },
                "amount": {
                  "value": 500
                },
                "month": {
                  "value": "2017-03"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "date": {
                  "value": "2017-04-12"
                },
                "amount": {
                  "value": 500
                },
                "month": {
                  "value": "2017-04"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "date": {
                  "value": "2017-04-21"
                },
                "amount": {
                  "value": 500
                },
                "month": {
                  "value": "2017-04"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "date": {
                  "value": "2017-05-01"
                },
                "amount": {
                  "value": 500
                },
                "month": {
                  "value": "2017-04"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "date": {
                  "value": "2017-05-12"
                },
                "amount": {
                  "value": 500
                },
                "month": {
                  "value": "2017-05"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "date": {
                  "value": "2017-05-21"
                },
                "amount": {
                  "value": 500
                },
                "month": {
                  "value": "2017-05"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "date": {
                  "value": "2017-06-01"
                },
                "amount": {
                  "value": 500
                },
                "month": {
                  "value": "2017-05"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "date": {
                  "value": "2017-06-12"
                },
                "amount": {
                  "value": 500
                },
                "month": {
                  "value": "2017-06"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "date": {
                  "value": "2017-06-21"
                },
                "amount": {
                  "value": 500
                },
                "month": {
                  "value": "2017-06"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "date": {
                  "value": "2017-07-01"
                },
                "amount": {
                  "value": 500
                },
                "month": {
                  "value": "2017-06"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "date": {
                  "value": "2017-07-12"
                },
                "amount": {
                  "value": 500
                },
                "month": {
                  "value": "2017-07"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "date": {
                  "value": "2017-07-21"
                },
                "amount": {
                  "value": 500
                },
                "month": {
                  "value": "2017-07"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "date": {
                  "value": "2017-08-01"
                },
                "amount": {
                  "value": 500
                },
                "month": {
                  "value": "2017-07"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "date": {
                  "value": "2017-08-12"
                },
                "amount": {
                  "value": 750
                },
                "month": {
                  "value": "2017-08"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "date": {
                  "value": "2017-08-21"
                },
                "amount": {
                  "value": 750
                },
                "month": {
                  "value": "2017-08"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "date": {
                  "value": "2017-09-01"
                },
                "amount": {
                  "value": 750
                },
                "month": {
                  "value": "2017-08"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "date": {
                  "value": "2017-09-12"
                },
                "amount": {
                  "value": 750
                },
                "month": {
                  "value": "2017-09"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "date": {
                  "value": "2017-09-21"
                },
                "amount": {
                  "value": 750
                },
                "month": {
                  "value": "2017-09"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "date": {
                  "value": "2017-10-01"
                },
                "amount": {
                  "value": 750
                },
                "month": {
                  "value": "2017-09"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "date": {
                  "value": "2017-10-12"
                },
                "amount": {
                  "value": 750
                },
                "month": {
                  "value": "2017-10"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "date": {
                  "value": "2017-10-21"
                },
                "amount": {
                  "value": 750
                },
                "month": {
                  "value": "2017-10"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "date": {
                  "value": "2017-11-01"
                },
                "amount": {
                  "value": 750
                },
                "month": {
                  "value": "2017-10"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "date": {
                  "value": "2017-11-12"
                },
                "amount": {
                  "value": 750
                },
                "month": {
                  "value": "2017-11"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "date": {
                  "value": "2017-11-21"
                },
                "amount": {
                  "value": 750
                },
                "month": {
                  "value": "2017-11"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "date": {
                  "value": "2017-12-01"
                },
                "amount": {
                  "value": 750
                },
                "month": {
                  "value": "2017-11"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "date": {
                  "value": "2017-12-12"
                },
                "amount": {
                  "value": 750
                },
                "month": {
                  "value": "2017-12"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "date": {
                  "value": "2017-12-21"
                },
                "amount": {
                  "value": 750
                },
                "month": {
                  "value": "2017-12"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "date": {
                  "value": "2018-01-01"
                },
                "amount": {
                  "value": 750
                },
                "month": {
                  "value": "2017-12"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "date": {
                  "value": "2018-01-12"
                },
                "amount": {
                  "value": 750
                },
                "month": {
                  "value": "2018-01"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "date": {
                  "value": "2018-01-21"
                },
                "amount": {
                  "value": 750
                },
                "month": {
                  "value": "2018-01"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              }
            ]
          }
        }
      },
      "cpftransactions": {
        "type": "object",
        "title": "CPFTransactions",
        "description": "CPF Transaction History of Person in SGD.\nMaximum past 15 months' of transactions.\n",
        "properties": {
          "history": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "CPF transaction",
              "properties": {
                "txntype": {
                  "type": "object",
                  "description": "Type of transaction",
                  "properties": {
                    "code": {
                      "type": "string",
                      "maximum": 3,
                      "example": "CON"
                    },
                    "desc": {
                      "type": "string",
                      "example": "Contributions/Government Cash Grant/Government Top-up"
                    }
                  }
                },
                "accountno": {
                  "type": "object",
                  "description": "Account Number. May be present if txntype code is 'TRF'.",
                  "properties": {
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "month": {
                  "type": "object",
                  "description": "Month of transaction. Format: YYYY-MM\n\nPresent if txntype code is 'CON'/'RFD'/'ADJ'",
                  "properties": {
                    "value": {
                      "type": "string",
                      "maxLength": 7,
                      "example": "2017-02"
                    }
                  }
                },
                "date": {
                  "type": "object",
                  "description": "Date of Transaction. See \"full-date\" in http://xml2rfc.ietf.org/public/rfc/htm",
                  "properties": {
                    "value": {
                      "type": "string",
                      "format": "date",
                      "maximum": 10,
                      "example": "2017-03-01"
                    }
                  }
                },
                "referenceno": {
                  "type": "object",
                  "description": "Footer reference",
                  "properties": {
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "oatxnamt": {
                  "type": "object",
                  "description": "Transaction Amount to Ordinary Account in SGD",
                  "properties": {
                    "value": {
                      "type": "number",
                      "format": "double",
                      "example": 500
                    }
                  }
                },
                "satxnamt": {
                  "type": "object",
                  "description": "Transaction Amount to Special Account in SGD",
                  "properties": {
                    "value": {
                      "type": "number",
                      "format": "double",
                      "example": 500
                    }
                  }
                },
                "matxnamt": {
                  "type": "object",
                  "description": "Transaction Amount to Medisave Account in SGD",
                  "properties": {
                    "value": {
                      "type": "number",
                      "format": "double",
                      "example": 500
                    }
                  }
                },
                "ratxnamt": {
                  "type": "object",
                  "description": "Transaction Amount to Retirement Account in SGD. Only present if user has Retirement Account",
                  "properties": {
                    "value": {
                      "type": "number",
                      "format": "double",
                      "example": 500
                    }
                  }
                }
              },
              "example": [
                {
                  "date": {
                    "value": "2019-01-01"
                  },
                  "txntype": {
                    "code": "TRF",
                    "desc": "Transfer between accounts"
                  },
                  "accountno": {
                    "value": 1234567
                  },
                  "referenceno": {
                    "value": "A"
                  },
                  "txnmonth": {
                    "value": "2019-01"
                  },
                  "oatxnamt": {
                    "value": "100.00"
                  },
                  "satxnamt": {
                    "value": "0.00"
                  },
                  "matxnamt": {
                    "value": "0.00"
                  }
                },
                {
                  "date": {
                    "value": "2019-02-01"
                  },
                  "txntype": {
                    "code": "CON",
                    "desc": "Contributions/Government Cash Grant/Government Top-Up"
                  },
                  "referenceno": {
                    "value": "A"
                  },
                  "txnmonth": {
                    "value": "2019-02"
                  },
                  "oatxnamt": {
                    "value": "900.00"
                  },
                  "satxnamt": {
                    "value": "150.00"
                  },
                  "matxnamt": {
                    "value": "150.00"
                  }
                },
                {
                  "date": {
                    "value": "2019-02-01"
                  },
                  "txntype": {
                    "code": "CON",
                    "desc": "Contributions/Government Cash Grant/Government Top-Up"
                  },
                  "referenceno": {
                    "value": "B"
                  },
                  "txnmonth": {
                    "value": "2019-02"
                  },
                  "oatxnamt": {
                    "value": "900.00"
                  },
                  "satxnamt": {
                    "value": "150.00"
                  },
                  "matxnamt": {
                    "value": "150.00"
                  }
                }
              ]
            }
          },
          "footers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "example": "REF A: EMPLOYER XXXX"
                    }
                  }
                }
              }
            },
            "example": [
              {
                "message": {
                  "value": "REF A: EMPLOYER XXXX"
                }
              },
              {
                "message": {
                  "value": "B: EMPLOYER YYYY"
                }
              }
            ]
          }
        }
      },
      "cpfhomeprotectionscheme": {
        "type": "object",
        "title": "CPF Home Protection Scheme",
        "description": "CPF Home Protection Scheme",
        "properties": {
          "coverage": {
            "type": "object",
            "properties": {
              "value": {
                "type": "boolean",
                "description": "Indicator",
                "example": true
              }
            }
          },
          "premium": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Coverage premium. OPTIONAL attribute, present only if 'coverage' is true",
                "example": 100.01
              }
            }
          },
          "shareofcover": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Share of coverage (in percentage). OPTIONAL attribute, present only if 'coverage' is true",
                "example": 20
              }
            }
          }
        }
      },
      "cpfdependantprotectionscheme": {
        "type": "object",
        "title": "CPF Dependant Protection Scheme",
        "description": "CPF Dependant Protection Scheme",
        "properties": {
          "coverage": {
            "type": "object",
            "properties": {
              "value": {
                "type": "boolean",
                "description": "Indicator",
                "example": true
              }
            }
          },
          "insurercode": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "Insurer Code",
                "example": "9GEL"
              }
            }
          },
          "sumassuredamount": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Sum assured. OPTIONAL attribute, present only if 'coverage' is true",
                "example": 70000
              }
            }
          }
        }
      },
      "cpfhousingwithdrawal": {
        "type": "object",
        "title": "CPFHousingWithdrawal",
        "description": "CPF Housing Withdrawal of Person. Amounts in SGD.",
        "properties": {
          "withdrawaldetails": {
            "type": "array",
            "description": "Withdrawal details for properties",
            "items": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "object",
                  "description": "Registered Address of Property which withdrawal is made.\n\n  **Note:**\n  - address can be either Singapore address (type: 'SG') or non Singapore address (type: 'UNFORMATTED')\n  - check the `type` discriminator property to differentiate between the two address formats\n",
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/AddressSG"
                    },
                    {
                      "$ref": "#/components/schemas/AddressUnformatted"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "SG": "#/components/schemas/AddressSG",
                      "UNFORMATTED": "#/components/schemas/AddressUnformatted"
                    }
                  }
                },
                "accruedinterestamt": {
                  "type": "object",
                  "description": null,
                  "properties": {
                    "value": {
                      "type": "number",
                      "format": "double",
                      "example": 1581.48
                    }
                  }
                },
                "monthlyinstalmentamt": {
                  "type": "object",
                  "description": null,
                  "properties": {
                    "value": {
                      "type": "number",
                      "format": "double",
                      "example": 1196.09
                    }
                  }
                },
                "principalwithdrawalamt": {
                  "type": "object",
                  "description": null,
                  "properties": {
                    "value": {
                      "type": "number",
                      "format": "double",
                      "example": 2897.01
                    }
                  }
                },
                "totalamountofcpfallowedforproperty": {
                  "type": "object",
                  "description": null,
                  "properties": {
                    "value": {
                      "type": "number",
                      "format": "double",
                      "example": 10000.01
                    }
                  }
                }
              }
            }
          }
        }
      },
      "cpfemployers": {
        "type": "object",
        "title": "CPFEmployers",
        "description": "Employers who paid CPF Contributions. Maximum up to past 14 months.\n",
        "properties": {
          "history": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "CPF employers",
              "properties": {
                "employer": {
                  "type": "object",
                  "description": "Employer who paid the Contribution.",
                  "properties": {
                    "value": {
                      "type": "string",
                      "maxLength": 30,
                      "example": "Crystal Horse Invest Pte Ltd"
                    }
                  }
                },
                "month": {
                  "type": "object",
                  "description": "Month for which CPF Contribution was paid. Format: YYYY-MM",
                  "properties": {
                    "value": {
                      "type": "string",
                      "format": "date",
                      "example": "2017-03"
                    }
                  }
                }
              }
            },
            "example": [
              {
                "month": {
                  "value": "2016-11"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "month": {
                  "value": "2016-12"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "month": {
                  "value": "2016-12"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "month": {
                  "value": "2016-12"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "month": {
                  "value": "2017-01"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "month": {
                  "value": "2017-01"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "month": {
                  "value": "2017-01"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "month": {
                  "value": "2017-02"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "month": {
                  "value": "2017-02"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "month": {
                  "value": "2017-02"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "month": {
                  "value": "2017-03"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "month": {
                  "value": "2017-03"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "month": {
                  "value": "2017-03"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "month": {
                  "value": "2017-04"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "month": {
                  "value": "2017-04"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "month": {
                  "value": "2017-04"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "month": {
                  "value": "2017-05"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "month": {
                  "value": "2017-05"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "month": {
                  "value": "2017-05"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "month": {
                  "value": "2017-06"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "month": {
                  "value": "2017-06"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "month": {
                  "value": "2017-06"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "month": {
                  "value": "2017-07"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "month": {
                  "value": "2017-07"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "month": {
                  "value": "2017-07"
                },
                "employer": {
                  "value": "Crystal Horse Invest Pte Ltd"
                }
              },
              {
                "month": {
                  "value": "2017-08"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "month": {
                  "value": "2017-08"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "month": {
                  "value": "2017-08"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "month": {
                  "value": "2017-09"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "month": {
                  "value": "2017-09"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "month": {
                  "value": "2017-09"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "month": {
                  "value": "2017-10"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "month": {
                  "value": "2017-10"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "month": {
                  "value": "2017-10"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "month": {
                  "value": "2017-11"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "month": {
                  "value": "2017-11"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "month": {
                  "value": "2017-11"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "month": {
                  "value": "2017-12"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "month": {
                  "value": "2017-12"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "month": {
                  "value": "2017-12"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "month": {
                  "value": "2018-01"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              },
              {
                "month": {
                  "value": "2018-01"
                },
                "employer": {
                  "value": "Delta Marine Consultants PL"
                }
              }
            ]
          }
        }
      },
      "cpfinvestmentscheme": {
        "type": "object",
        "title": "CPFInvestmentScheme",
        "description": "CPF Investment Scheme.",
        "properties": {
          "sdsnetshareholdingqty": {
            "type": "object",
            "description": "Quantity of Special Discounted Shares shares held",
            "properties": {
              "value": {
                "type": "number",
                "example": 1360
              }
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "account": {
            "type": "object",
            "description": "CPF Investment Account Details",
            "properties": {
              "agentbankcode": {
                "type": "object",
                "description": "Agent Bank Code",
                "properties": {
                  "value": {
                    "type": "string",
                    "example": "OCBC"
                  }
                }
              },
              "invbankacctno": {
                "type": "object",
                "description": "Account Number",
                "properties": {
                  "value": {
                    "type": "string",
                    "example": "098-26644-4"
                  }
                }
              }
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          },
          "saqparticipationstatus": {
            "type": "object",
            "description": "Status of Self-Awareness Questionnaire Participation.",
            "properties": {
              "code": {
                "type": "string",
                "enum": [
                  "Y",
                  "X",
                  "N"
                ],
                "description": "Possible values:\n\n* 'Y' – Participated\n* 'X' – Existing CPFIS participant\n* 'N' – Did not participate",
                "example": "X"
              },
              "desc": {
                "type": "string",
                "example": "Participated"
              }
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/DataFieldProperties"
              }
            ]
          }
        }
      },
      "dialect": {
        "type": "object",
        "title": "Dialect",
        "description": "Dialect of Person.\n\nRefer to the [Code reference tables](#section/Support) in the Support section for list of possible values.",
        "properties": {
          "code": {
            "type": "string",
            "maxLength": 2,
            "pattern": "[a-zA-Z]{2}",
            "description": "",
            "example": "SG"
          },
          "desc": {
            "type": "string",
            "maxLength": 300,
            "description": "",
            "example": "SWISS GERMAN"
          }
        }
      },
      "divorcedate": {
        "type": "object",
        "title": "DivorceDate",
        "description": "Last Divorce Date of Person.\n\n\n**Note:** This field must be made **editable** on your digital service form even though `source` is '1' (Government Verified).\n",
        "properties": {
          "value": {
            "type": "string",
            "format": "date",
            "description": "Value of data field.\n\nSee \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14",
            "example": ""
          }
        }
      },
      "dob": {
        "type": "object",
        "title": "DOB",
        "description": "Date of Birth of Person.",
        "properties": {
          "value": {
            "type": "string",
            "format": "date",
            "description": "Value of data field. \nFormat can be one of the below (with reference to http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14):\n- full-date\n- date-fullyear \"-\" date-month\n- date-fullyear ",
            "example": "1958-05-17"
          }
        }
      },
      "drivinglicence": {
        "type": "object",
        "description": "Driving Licence details of Person.\n",
        "properties": {
          "comstatus": {
            "type": "object",
            "description": "Status of Certificate of Merit. Possible values:\n\n* Y - ELIGIBLE\n* N - NOT ELIGIBLE",
            "properties": {
              "code": {
                "type": "string",
                "maxLength": 1,
                "enum": [
                  "Y",
                  "N"
                ],
                "example": "Y"
              },
              "desc": {
                "type": "string",
                "description": "",
                "enum": [
                  "ELIGIBLE",
                  "NOT ELIGIBLE"
                ],
                "example": "ELIGIBLE"
              }
            }
          },
          "totaldemeritpoints": {
            "type": "object",
            "description": "Total Demerit Points",
            "properties": {
              "value": {
                "type": "integer",
                "maxLength": 2,
                "example": 0
              }
            }
          },
          "suspension": {
            "type": "object",
            "description": "",
            "properties": {
              "startdate": {
                "type": "object",
                "description": "Suspension Start Date",
                "properties": {
                  "value": {
                    "type": "string",
                    "format": "date",
                    "maxLength": 10,
                    "example": ""
                  }
                }
              },
              "enddate": {
                "type": "object",
                "description": "Suspension End Date",
                "properties": {
                  "value": {
                    "type": "string",
                    "format": "date",
                    "maxLength": 10,
                    "example": ""
                  }
                }
              }
            }
          },
          "disqualification": {
            "type": "object",
            "description": "",
            "properties": {
              "startdate": {
                "type": "object",
                "description": "Disqualification Start Date",
                "properties": {
                  "value": {
                    "type": "string",
                    "format": "date",
                    "maxLength": 10,
                    "example": ""
                  }
                }
              },
              "enddate": {
                "type": "object",
                "description": "Disqualification End Date",
                "properties": {
                  "value": {
                    "type": "string",
                    "format": "date",
                    "maxLength": 10,
                    "example": ""
                  }
                }
              }
            }
          },
          "revocation": {
            "type": "object",
            "description": "",
            "properties": {
              "startdate": {
                "type": "object",
                "description": "Revocation Start Date",
                "properties": {
                  "value": {
                    "type": "string",
                    "format": "date",
                    "maxLength": 10,
                    "example": ""
                  }
                }
              },
              "enddate": {
                "type": "object",
                "description": "Revocation End Date",
                "properties": {
                  "value": {
                    "type": "string",
                    "format": "date",
                    "maxLength": 10,
                    "example": ""
                  }
                }
              }
            }
          },
          "pdl": {
            "type": "object",
            "description": "Provisional Driving Licence (PDL)",
            "properties": {
              "validity": {
                "type": "object",
                "description": "Validity of PDL. Possible values:\n\n* V - VALID\n* E - EXPIRED\n* I - INVALID\n* N - NOT HOLDING",
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 1,
                    "enum": [
                      "V",
                      "E",
                      "I",
                      "N"
                    ],
                    "example": "V"
                  },
                  "desc": {
                    "type": "string",
                    "description": "",
                    "enum": [
                      "VALID",
                      "EXPIRED",
                      "INVALID",
                      "NOT HOLDING"
                    ],
                    "example": "VALID"
                  }
                }
              },
              "expirydate": {
                "type": "object",
                "description": "PDL Expiry Date",
                "properties": {
                  "value": {
                    "type": "string",
                    "format": "date",
                    "maxLength": 10,
                    "example": "2020-06-15"
                  }
                }
              },
              "classes": {
                "type": "array",
                "description": "PDL Classes",
                "items": {
                  "type": "object",
                  "properties": {
                    "class": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "maxLength": 2
                        }
                      }
                    }
                  }
                },
                "example": [
                  {
                    "class": {
                      "value": "2A"
                    }
                  },
                  {
                    "class": {
                      "value": "3A"
                    }
                  }
                ]
              }
            }
          },
          "qdl": {
            "type": "object",
            "description": "Qualified Driving Licence (QDL)",
            "properties": {
              "validity": {
                "type": "object",
                "description": "Validity of QDL. Possible values:\n\n* V - VALID\n* E - EXPIRED\n* I - INVALID\n* N - NOT HOLDING",
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 1,
                    "enum": [
                      "V",
                      "E",
                      "I",
                      "N"
                    ],
                    "example": "V"
                  },
                  "desc": {
                    "type": "string",
                    "description": "",
                    "enum": [
                      "VALID",
                      "EXPIRED",
                      "INVALID",
                      "NOT HOLDING"
                    ],
                    "example": "VALID"
                  }
                }
              },
              "expirydate": {
                "type": "object",
                "description": "QDL Expiry Date",
                "properties": {
                  "value": {
                    "type": "string",
                    "format": "date",
                    "maxLength": 10,
                    "example": "2020-06-15"
                  }
                }
              },
              "classes": {
                "type": "array",
                "description": "QDL Classes. Includes Issue Date (e.g. 2B, 2018-01-01)",
                "items": {
                  "type": "object",
                  "properties": {
                    "class": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "maxLength": 2
                        }
                      }
                    },
                    "issuedate": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "format": "date",
                          "maxLength": 10
                        }
                      }
                    }
                  }
                },
                "example": [
                  {
                    "class": {
                      "value": "2A"
                    },
                    "issuedate": {
                      "value": "2018-06-06"
                    }
                  },
                  {
                    "class": {
                      "value": "3A"
                    },
                    "issuedate": {
                      "value": "2018-06-06"
                    }
                  }
                ]
              }
            }
          },
          "photocardserialno": {
            "type": "object",
            "description": "Serial Number of the Photo Card",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 10,
                "example": "115616"
              }
            }
          }
        }
      },
      "edulevel": {
        "type": "object",
        "title": "EduLevel",
        "description": "Highest Education Level of Person.\n\n* '0' - NO FORMAL QUALIFICATION / PRE-PRIMARY / LOWER PRIMARY\n* '1' - PRIMARY\n* '2' - LOWER SECONDARY\n* '3' - SECONDARY\n* '4' - POST-SECONDARY (NON-TERTIARY): GENERAL & VOCATION\n* '5' - POLYTECHNIC DIPLOMA\n* '6' - PROFESSIONAL QUALIFICATION AND OTHER DIPLOMA\n* '7' - BACHELOR'S OR EQUIVALENT\n* '8' - POSTGRADUATE DIPLOMA / CERTIFICATE (EXCLUDING MASTER'S AND DOCTORATE)\n* '9' - MASTER'S AND DOCTORATE OR EQUIVALENT\n* 'N' - MODULAR CERTIFICATION (NON-AWARD COURSES / NON-FULL QUALIFICATIONS)",
        "properties": {
          "code": {
            "type": "string",
            "description": null,
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "N"
            ],
            "example": "7"
          },
          "desc": {
            "type": "string",
            "enum": [
              "NO FORMAL QUALIFICATION / PRE-PRIMARY / LOWER PRIMARY",
              "PRIMARY",
              "LOWER SECONDARY",
              "SECONDARY",
              "POST-SECONDARY (NON-TERTIARY): GENERAL & VOCATION",
              "POLYTECHNIC DIPLOMA",
              "PROFESSIONAL QUALIFICATION AND OTHER DIPLOMA",
              "BACHELOR'S OR EQUIVALENT",
              "POSTGRADUATE DIPLOMA / CERTIFICATE (EXCLUDING MASTER'S AND DOCTORATE)",
              "MASTER'S AND DOCTORATE OR EQUIVALENT",
              "MODULAR CERTIFICATION (NON-AWARD COURSES / NON-FULL QUALIFICATIONS)"
            ],
            "example": "BACHELOR'S OR EQUIVALENT"
          }
        }
      },
      "email": {
        "type": "object",
        "title": "Email",
        "description": "Email Address of Person.",
        "properties": {
          "value": {
            "type": "string",
            "maxLength": 320,
            "description": "Value of data field.",
            "example": "test@gmail.com"
          }
        }
      },
      "employment": {
        "type": "object",
        "title": "Employment",
        "description": "Name of Employer.",
        "properties": {
          "value": {
            "type": "string",
            "maxLength": 124,
            "example": "ALPHA"
          }
        }
      },
      "employmentsector": {
        "type": "object",
        "title": "EmploymentSector",
        "description": "Employment Sector of a FIN holder.\n\n**Note:** Only applies to a foreigner with a valid work pass.\n\nSome examples of possible values are: \n* MANUFACTURING\n* CONSTRUCTION\n* RECLAMATION \n* SERVICE\n* GRI-TECHNOLOGY\n* LANDSCAPING\n* INCINERATOR PLANT\n* MARINE SHIPYARD\n* PROCESS\n* HARBOURCRAFT\n* DOMESTIC",
        "properties": {
          "value": {
            "type": "string",
            "example": "MANUFACTURING"
          }
        }
      },
      "gradyear": {
        "type": "object",
        "title": "GradYear",
        "description": "Year of Graduation of Person. Format: YYYY",
        "properties": {
          "value": {
            "type": "string",
            "pattern": "[0-9]{4}",
            "maxLength": 4,
            "example": "2006"
          }
        }
      },
      "hanyupinyinaliasname": {
        "type": "object",
        "title": "HanYuPinYinAlias",
        "description": "Han Yu Pin Yin Alias name of the Person.\n\n*Presentation Logic - If there is a value to `hanyupinyinaliasname` (i.e. not empty), then `hanyupinyinaliasname` should be displayed in a new line below `aliasname`, and prefixed with the ''@'' symbol i.e. \"@`hanyupinyinaliasname`\".*",
        "properties": {
          "value": {
            "type": "string",
            "maxLength": 66,
            "example": "TRICIA CHEN XIAO HUI"
          }
        }
      },
      "hanyupinyinname": {
        "type": "object",
        "title": "HanYuPinYin",
        "description": "Han Yu Pin Yin name of the Person.\n\n*Presentation Logic - If there is a value to `hanyupinyinname` (i.e. not empty), then `hanyupinyinname` should be displayed in a new line below `name`, and formatted with round brackets i.e. \"(`hanyupinyinname`)\"'*",
        "properties": {
          "value": {
            "type": "string",
            "maxLength": 66,
            "example": "CHEN XIAO HUI"
          }
        }
      },
      "hdbownership": {
        "type": "object",
        "title": "HDBOwnership",
        "description": "HDB Ownership details\n\n**TODO: is this tied to the registered address or the person (UINFIN) or both?**\n",
        "properties": {
          "noofowners": {
            "type": "object",
            "description": "Number of Owners. Note that this does not include executors, administrators or trustees.",
            "properties": {
              "value": {
                "type": "integer",
                "maximum": 9,
                "example": 2
              }
            }
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressSG"
              }
            ]
          },
          "hdbtype": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hdbtype"
              }
            ]
          },
          "leasecommencementdate": {
            "type": "object",
            "description": "Date from which the lease period starts. See \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14",
            "properties": {
              "value": {
                "type": "string",
                "format": "date",
                "example": "2008-06-13"
              }
            }
          },
          "termoflease": {
            "type": "object",
            "description": "Term of lease (in years) for the property computed from the lease commencement date.",
            "properties": {
              "value": {
                "type": "integer",
                "maximum": 99,
                "example": 99
              }
            }
          },
          "dateofpurchase": {
            "type": "object",
            "description": "Effective date of flat purchase. See \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14",
            "properties": {
              "value": {
                "type": "string",
                "format": "date",
                "example": "2008-06-13"
              }
            }
          },
          "dateofownershiptransfer": {
            "type": "object",
            "description": "Effective date of partial transfer without monetary consideration (e.g. addition, deletion or substitution of a co-owner) for an HDB sold flat.\n\nFor partial transfer of flat where at least one of the current owner remains in the household, the Date of Purchase remains unchanged while the date of transfer of ownership will be updated.\n\nFor outright transfer where there is a total change of all owner(s), only the Date of Purchase will be updated.\n\nSee \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14'",
            "properties": {
              "value": {
                "type": "string",
                "format": "date",
                "example": "2018-06-13"
              }
            }
          },
          "loangranted": {
            "type": "object",
            "description": "The amount of housing loan granted to owner(s) by HDB in SGD.",
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "example": 310000.01
              }
            }
          },
          "originalloanrepayment": {
            "type": "object",
            "description": "The number of years of loan repaymnet opted by owner(s) at the time the loan is first granted to him/her.",
            "properties": {
              "value": {
                "type": "integer",
                "maximum": 99,
                "example": 25
              }
            }
          },
          "balanceloanrepayment": {
            "type": "object",
            "description": "The remaining term of repayment for the loan in the format `years` + `months`.",
            "properties": {
              "years": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "integer",
                    "maximum": 99,
                    "example": 2
                  }
                }
              },
              "months": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "integer",
                    "maximum": 99,
                    "example": 6
                  }
                }
              }
            }
          },
          "outstandingloanbalance": {
            "type": "object",
            "description": "The amount of outstanding HDB loan owed by owner(s) in SGD.",
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "example": 50000.01
              }
            }
          },
          "monthlyloaninstalment": {
            "type": "object",
            "description": "The amount of monthly instalment the owner(s) have to pay for his/her loan in SGD.",
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "example": 1000.01
              }
            }
          },
          "outstandinginstalment": {
            "type": "object",
            "description": "The amount of outstanding instalment the owner(s) have to pay for his/her loan in SGD.",
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "example": 1000.01
              }
            }
          },
          "purchaseprice": {
            "type": "object",
            "description": "The purchase price of the HDB flat in SGD.",
            "properties": {
              "value": {
                "type": "number",
                "format": "double",
                "example": 1000.01
              }
            }
          }
        }
      },
      "hdbtype": {
        "type": "object",
        "title": "HDBType",
        "description": "Flat Type of the HDB flat.\n\n**Note 1:** that this excludes Rental Flats, Pre-War SIT flat, PSA flat, HUDC flat, Executive Condominium and Shophouse.\n\n**Note 2:** If `housingtype` is available, this value will be null.\n\n**Note 3:** If `housingtype` &  `hdbtype` are unavailable, make this field user editable.\n\n* '111' - 1-ROOM FLAT (HDB)\n* '112' - 2-ROOM FLAT (HDB)\n* '113' - 3-ROOM FLAT (HDB)\n* '114' - 4-ROOM FLAT (HDB)\n* '115' - 5-ROOM FLAT (HDB)\n* '116' - EXECUTIVE FLAT (HDB)\n* '118' - STUDIO APARTMENT (HDB)",
        "properties": {
          "code": {
            "type": "string",
            "description": null,
            "enum": [
              "111",
              "112",
              "113",
              "114",
              "115",
              "116",
              "118"
            ],
            "example": "112"
          },
          "desc": {
            "type": "string",
            "description": "",
            "enum": [
              "1-ROOM FLAT (HDB)",
              "2-ROOM FLAT (HDB)",
              "3-ROOM FLAT (HDB)",
              "4-ROOM FLAT (HDB)",
              "5-ROOM FLAT (HDB)",
              "EXECUTIVE FLAT (HDB)",
              "STUDIO APARTMENT (HDB)"
            ],
            "example": "2-ROOM FLAT (HDB)"
          }
        }
      },
      "homeno": {
        "type": "object",
        "title": "HomeNo",
        "description": "Home Contact Number of Person.",
        "allOf": [
          {
            "$ref": "#/components/schemas/PhoneNumLocal"
          }
        ]
      },
      "householdincome": {
        "type": "object",
        "title": "HouseholdIncome",
        "description": "Household Income of Person in SGD.",
        "properties": {
          "high": {
            "type": "object",
            "description": "upper bound of the range of household income bracket",
            "properties": {
              "value": {
                "type": "integer",
                "example": 5999
              }
            }
          },
          "low": {
            "type": "object",
            "description": "lower bound of the range of household income bracket",
            "properties": {
              "value": {
                "type": "integer",
                "example": 5000
              }
            }
          }
        }
      },
      "housingtype": {
        "type": "object",
        "title": "HousingType",
        "description": "Housing Type of Person (non-HDB only).\n\n**Note 1:** If `hdbtype` is available, this value will be null.\n\n**Note 2:** If `housingtype` &  `hdbtype` are unavailable, make this field user editable.\n\nRefer to `hdbtype` for detailed HDB type.\n\n* '121' - DETACHED HOUSE\n* '122' - SEMI-DETACHED HOUSE\n* '123' - TERRACE HOUSE\n* '131' - CONDOMINIUM\n* '132' - EXECUTIVE CONDOMINIUM\n* '139' - APARTMENT",
        "properties": {
          "code": {
            "type": "string",
            "description": null,
            "enum": [
              "121",
              "122",
              "123",
              "131",
              "132",
              "139"
            ],
            "example": "123"
          },
          "desc": {
            "type": "string",
            "description": "",
            "enum": [
              "DETACHED HOUSE",
              "SEMI-DETACHED HOUSE",
              "TERRACE HOUSE",
              "CONDOMINIUM",
              "EXECUTIVE CONDOMINIUM",
              "APARTMENT"
            ],
            "example": "TERRACE HOUSE"
          }
        }
      },
      "vocationallicences": {
        "type": "object",
        "title": "VocationalLicences",
        "description": "Vocational Licences.",
        "properties": {
          "licences": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "number": {
                  "type": "object",
                  "description": "Unique licence number assigned by issuing agency",
                  "properties": {
                    "value": {
                      "type": "number"
                    }
                  }
                },
                "name": {
                  "type": "object",
                  "description": "Licence name",
                  "properties": {
                    "value": {
                      "type": "String"
                    }
                  }
                },
                "status": {
                  "type": "object",
                  "description": "Status of licence",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "ACT",
                        "IPA"
                      ]
                    },
                    "desc": {
                      "type": "string",
                      "enum": [
                        "Active",
                        "In-Principal Approval"
                      ]
                    }
                  }
                },
                "issuanceagency": {
                  "type": "object",
                  "description": "Agency that issued the licence",
                  "properties": {
                    "code": {
                      "type": "string",
                      "maxlength": 3
                    },
                    "desc": {
                      "type": "string"
                    }
                  }
                },
                "issuedate": {
                  "type": "object",
                  "description": "Licence issue date. See \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14",
                  "properties": {
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "expirydate": {
                  "type": "object",
                  "description": "Licence expiry date. See \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14",
                  "properties": {
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "mailadd": {
        "type": "object",
        "title": "MailAdd",
        "description": "Mailing Address of Person\n\n**Note:**\n- address can be either a Singapore address (type: 'SG') or non Singapore address (type: 'UNFORMATTED')\n- check the `type` discriminator property to differentiate between the two address formats\n",
        "oneOf": [
          {
            "$ref": "#/components/schemas/dataitem-address-sg"
          },
          {
            "$ref": "#/components/schemas/dataitem-address-unformatted"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "SG": "#/components/schemas/dataitem-address-sg",
            "UNFORMATTED": "#/components/schemas/dataitem-address-unformatted"
          }
        }
      },
      "marital": {
        "type": "object",
        "title": "Marital",
        "description": "Marital Status of Person.\n\n* '1' - SINGLE\n* '2' - MARRIED\n* '3' - WIDOWED\n* '5' - DIVORCED\n\n**Note:** This field must be made **editable** on your digital service form even though `source` is '1' (Government Verified).",
        "properties": {
          "code": {
            "type": "string",
            "description": null,
            "enum": [
              1,
              2,
              3,
              5
            ],
            "example": "2"
          },
          "desc": {
            "type": "string",
            "description": null,
            "enum": [
              "SINGLE",
              "MARRIED",
              "WIDOWED",
              "DIVORCED"
            ],
            "example": "MARRIED"
          }
        }
      },
      "marriagecertno": {
        "type": "object",
        "title": "MarriageCertNo",
        "description": "Certificate number of the latest marriage.\n\n\n**Note:** This field must be made **editable** on your digital service form even though `source` is '1' (Government Verified).",
        "properties": {
          "value": {
            "type": "string",
            "maxLength": 50,
            "description": "Value of data field.",
            "example": "123456789012345"
          }
        }
      },
      "marriagedate": {
        "type": "object",
        "title": "MarriageDate",
        "description": "Latest Marriage Date of Person.\n\n\n**Note:** This field must be made **editable** on your digital service form even though `source` is '1' (Government Verified).\n",
        "properties": {
          "value": {
            "type": "string",
            "format": "date",
            "description": "Value of data field.\n\nSee \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14",
            "example": "2007-01-01"
          }
        }
      },
      "marriedname": {
        "type": "object",
        "title": "MarriedName",
        "description": "Married name of the Person.\n\n*Presentation Logic - If there is a value to `marriedname` (i.e. not empty), then `marriedname` should be displayed in a new line below `hanyupinyinaliasname`.*",
        "properties": {
          "value": {
            "type": "string",
            "maxLength": 66,
            "description": "value of the field, should be displayed as it is.",
            "example": ""
          }
        }
      },
      "mobileno": {
        "type": "object",
        "title": "MobileNo",
        "description": "Mobile Number of Person.",
        "allOf": [
          {
            "$ref": "#/components/schemas/PhoneNumLocal"
          }
        ]
      },
      "name": {
        "type": "object",
        "title": "Name",
        "description": "Full Name of the Person.",
        "properties": {
          "value": {
            "type": "string",
            "maxLength": 66,
            "description": "value of the field, should be displayed as it is.",
            "example": "TAN XIAO HUI"
          }
        }
      },
      "nationality": {
        "type": "object",
        "title": "Nationality",
        "description": "Nationality/Citizenship of Person.\n\nRefer to the [Code reference tables](#section/Support) in the Support section for list of possible values.",
        "properties": {
          "code": {
            "type": "string",
            "maxLength": 2,
            "pattern": "[a-zA-Z]{2}",
            "description": "",
            "example": "SG"
          },
          "desc": {
            "type": "string",
            "maxLength": 300,
            "description": "",
            "example": "SINGAPORE CITIZEN"
          }
        }
      },
      "noahistory-basic": {
        "type": "object",
        "title": "History of Notice Of Assessment (Basic)",
        "description": "Summary of latest 2 Notice of Assessments within the past three years.",
        "properties": {
          "noas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NOABasic"
            }
          }
        }
      },
      "noahistory": {
        "type": "object",
        "title": "History of Notice Of Assessment",
        "description": "Detailed breakdown of latest 2 Notice of Assessments within the past three years.",
        "properties": {
          "noas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NOA"
            }
          }
        }
      },
      "occupation": {
        "type": "object",
        "title": "Occupation",
        "description": "Occupation of Person. ",
        "properties": {
          "value": {
            "type": "string",
            "maxLength": 100,
            "description": "Free text.\n\nFor SC/PR holders, blank will be returned.",
            "example": ""
          }
        }
      },
      "ownerprivate": {
        "type": "object",
        "title": "OwnerPrivate",
        "description": "Ownership of Private Property Status of Person (based on IRAS information).\n\n* true\n* false\n* null (data not available)",
        "properties": {
          "value": {
            "type": "boolean",
            "description": "Value of data field.",
            "example": false
          }
        }
      },
      "passportexpirydate": {
        "type": "object",
        "title": "PassportExpiryDate",
        "description": "Passport Expiry Date of Person.",
        "properties": {
          "value": {
            "type": "string",
            "format": "date",
            "description": "Value of data field. See \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14",
            "example": "2020-01-01"
          }
        }
      },
      "passportnumber": {
        "type": "object",
        "title": "PassportNumber",
        "description": "Passport Number of Person.",
        "properties": {
          "value": {
            "type": "string",
            "maxLength": 25,
            "description": "Value of data field.",
            "example": "E35463874W"
          }
        }
      },
      "race": {
        "type": "object",
        "title": "Race",
        "description": "Race of Person.\n\nRefer to the [Code reference tables](#section/Support) in the Support section for list of possible values.",
        "properties": {
          "code": {
            "type": "string",
            "maxLength": 2,
            "pattern": "[a-zA-Z]{2}",
            "example": "CN"
          },
          "desc": {
            "type": "string",
            "maxLength": 300,
            "example": "CHINESE"
          }
        }
      },
      "regadd": {
        "type": "object",
        "title": "RegAdd",
        "description": "Registered Address of Person (including FIN holders)\n\n**Note:**\n- address can be either a Singapore address (type: 'SG') or non Singapore address (type: 'UNFORMATTED')\n- check the `type` discriminator property to differentiate between the two address formats\n- may be unavailable for some FIN holders",
        "oneOf": [
          {
            "$ref": "#/components/schemas/dataitem-address-sg"
          },
          {
            "$ref": "#/components/schemas/dataitem-address-unformatted"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "SG": "#/components/schemas/dataitem-address-sg",
            "UNFORMATTED": "#/components/schemas/dataitem-address-unformatted"
          }
        }
      },
      "residentialstatus": {
        "type": "object",
        "title": "ResidentialStatus",
        "description": "Residential Status of Person. Applicable to Singapore Citizens and Permanent Residents.\n\n\n**Note:** This data item is not applicable for FIN holders i.e. `source` will be '3'.\nIn such cases, the `code` and `desc` properties will be blank or empty string (\"\").\n\n* A - ALIEN\n* C - CITIZEN\n* P - PR\n* U - UNKNOWN\n* N - NOT APPLICABLE\n* &lt; BLANK &gt; (for FIN holders only)",
        "properties": {
          "code": {
            "type": "string",
            "maxLength": 2,
            "pattern": "[a-zA-Z]{1}",
            "enum": [
              "A",
              "C",
              "P",
              "U",
              "N",
              ""
            ],
            "example": "C"
          },
          "desc": {
            "type": "string",
            "maxLength": 300,
            "enum": [
              "ALIEN",
              "CITIZEN",
              "PR",
              "UNKNOWN",
              "NOT APPLICABLE",
              ""
            ],
            "example": "CITIZEN"
          }
        }
      },
      "schoolname": {
        "type": "object",
        "title": "SchoolName",
        "description": "Name of School of Person.",
        "properties": {
          "code": {
            "type": "string",
            "maxLength": 10,
            "description": "Code value of school name.\n\n**Note:** Code+desc and value are mutually exclusive.",
            "example": "T07GS3011J"
          },
          "desc": {
            "type": "string",
            "maxLength": 100,
            "description": "Name of school represented by 'code'\n\n**Note:** Code+desc and value are mutually exclusive.",
            "example": "SIGLAP SECONDARY SCHOOL"
          },
          "value": {
            "type": "string",
            "maxLength": 100,
            "description": "Free text value of school name.\n\n**Note:** Code+desc and value are mutually exclusive.",
            "example": ""
          }
        }
      },
      "secondaryrace": {
        "type": "object",
        "title": "SecondaryRace",
        "description": "Secondary Race of Person.\n\nRefer to the [Code reference tables](#section/Support) in the Support section for list of possible values.",
        "properties": {
          "code": {
            "type": "string",
            "maxLength": 2,
            "pattern": "[a-zA-Z]{2}",
            "description": "",
            "example": "EU"
          },
          "desc": {
            "type": "string",
            "maxLength": 300,
            "description": "",
            "example": "EURASIAN"
          }
        }
      },
      "sex": {
        "type": "object",
        "title": "Sex",
        "description": "Sex of Person.\n* 'F' - FEMALE\n* 'M' - MALE\n* 'U' - UNKNOWN",
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "F",
              "M",
              "U"
            ],
            "maxLength": 1,
            "example": "F"
          },
          "desc": {
            "type": "string",
            "description": "",
            "enum": [
              "FEMALE",
              "MALE",
              "UNKNOWN"
            ],
            "example": "FEMALE"
          }
        }
      },
      "sponsoredchildrenrecords": {
        "type": "object",
        "properties": {
          "nric": {
            "type": "object",
            "description": "NRIC/FIN of child",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 15,
                "example": "S5562882C"
              }
            }
          },
          "name": {
            "type": "object",
            "description": "Full Name of child",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 66,
                "example": "Jo Tan Pei Ni"
              }
            }
          },
          "hanyupinyinname": {
            "type": "object",
            "description": "Han Yu Pin Yin name of child.",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 66,
                "example": "Cheng Pei Ni"
              }
            }
          },
          "aliasname": {
            "type": "object",
            "description": "Alias name of child.",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 66,
                "example": ""
              }
            }
          },
          "hanyupinyinaliasname": {
            "type": "object",
            "description": "Han Yu Pin Yin Alias name of child.",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 66,
                "example": ""
              }
            }
          },
          "marriedname": {
            "type": "object",
            "description": "Married name of child.",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 66,
                "example": ""
              }
            }
          },
          "sex": {
            "type": "object",
            "description": "Sex of child. Possible values:\n\n* 'F' - FEMALE\n* 'M' - MALE\n* 'U' - UNKNOWN",
            "properties": {
              "code": {
                "type": "string",
                "maxLength": 1,
                "enum": [
                  "F",
                  "M",
                  "U"
                ],
                "example": "F"
              },
              "desc": {
                "type": "string",
                "maxLength": 300,
                "enum": [
                  "FEMALE",
                  "MALE",
                  "UNKNOWN"
                ],
                "example": "FEMALE"
              }
            }
          },
          "race": {
            "type": "object",
            "description": "Race of child.\n\nRefer to the [Code reference tables](#section/Support) in the Support section for list of possible values.",
            "properties": {
              "code": {
                "type": "string",
                "maxLength": 2,
                "pattern": "[a-zA-Z]{2}",
                "example": "CN"
              },
              "desc": {
                "type": "string",
                "maxLength": 300,
                "example": "CHINESE"
              }
            }
          },
          "secondaryrace": {
            "type": "object",
            "description": "Secondary Race of child.\n\nRefer to the [Code reference tables](#section/Support) in the Support section for list of possible values.",
            "properties": {
              "code": {
                "type": "string",
                "maxLength": 2,
                "pattern": "[a-zA-Z]{2}",
                "example": ""
              },
              "desc": {
                "type": "string",
                "maxLength": 300,
                "example": ""
              }
            }
          },
          "dialect": {
            "type": "object",
            "description": "Dialect of child.\n\nRefer to the [Code reference tables](#section/Support) in the Support section for list of possible values.",
            "properties": {
              "code": {
                "type": "string",
                "maxLength": 2,
                "pattern": "[a-zA-Z]{2}",
                "example": "HK"
              },
              "desc": {
                "type": "string",
                "maxLength": 300,
                "example": "HOKKIEN"
              }
            }
          },
          "dob": {
            "type": "object",
            "description": "Date of Birth of child.\n\nSee \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14",
            "properties": {
              "value": {
                "type": "string",
                "format": "date",
                "example": "2011-09-10"
              }
            }
          },
          "birthcountry": {
            "type": "object",
            "title": "BirthCountry",
            "description": "Country/Place of Birth of child.\n\nRefer to the [Code reference tables](#section/Support) in the Support section for list of possible values.",
            "properties": {
              "code": {
                "type": "string",
                "maxLength": 2,
                "pattern": "[a-zA-Z]{2}",
                "example": "SG"
              },
              "desc": {
                "type": "string",
                "maxLength": 300,
                "example": "SINGAPORE"
              }
            }
          },
          "lifestatus": {
            "type": "object",
            "description": "Life Status of child. Possible values:\n\n* A - ALIVE\n* D - DECEASED",
            "properties": {
              "code": {
                "type": "string",
                "enum": [
                  "A",
                  "D"
                ],
                "example": "A"
              },
              "desc": {
                "type": "string",
                "enum": [
                  "ALIVE",
                  "DECEASED"
                ],
                "example": "ALIVE"
              }
            }
          },
          "residentialstatus": {
            "type": "object",
            "title": "ResidentialStatus",
            "description": "Residential Status of child. Possible values:\n\n* A - ALIEN\n* C - CITIZEN\n* P - PR\n* U - UNKNOWN\n* N - NOT APPLICABLE",
            "properties": {
              "code": {
                "type": "string",
                "maxLength": 2,
                "pattern": "[a-zA-Z]{1}",
                "enum": [
                  "A",
                  "C",
                  "P",
                  "U",
                  "N"
                ],
                "example": "C"
              },
              "desc": {
                "type": "string",
                "maxLength": 300,
                "enum": [
                  "ALIEN",
                  "CITIZEN",
                  "PR",
                  "UNKNOWN",
                  "NOT APPLICABLE"
                ],
                "example": "Citizen"
              }
            }
          },
          "nationality": {
            "type": "object",
            "description": "Nationality/Citizenship of child.\n\nRefer to the [Code reference tables](#section/Support) in the Support section for list of possible values.",
            "properties": {
              "code": {
                "type": "string",
                "maxLength": 2,
                "pattern": "[a-zA-Z]{2}",
                "example": "SG"
              },
              "desc": {
                "type": "string",
                "maxLength": 300,
                "example": "SINGAPORE CITIZEN"
              }
            }
          },
          "scprgrantdate": {
            "description": "Date granted Singapore Citizenship, Permanent Resident or Long-term Visit Pass\n\nSee \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14",
            "properties": {
              "value": {
                "type": "string",
                "format": "date",
                "example": "2015-06-13"
              }
            }
          },
          "vaccinationrequirements": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "requirement": {
                  "type": "object",
                  "description": "Vaccination Requirement\n\nRefer to the [Code reference tables](#section/Support) in the Support section for list of possible values.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "1M3D"
                    },
                    "desc": {
                      "type": "string",
                      "example": "MINIMUM VACCINATION REQUIREMENT FOR PRESCHOOL"
                    }
                  }
                },
                "fulfilled": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DataFieldProperties"
          }
        ]
      },
      "vehicles": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "vehicleno": {
              "type": "object",
              "description": "Vehicle Registration Number displayed on the vehicle number plates",
              "properties": {
                "value": {
                  "type": "string",
                  "maxLength": 20,
                  "example": "SDF1235A"
                }
              }
            },
            "type": {
              "type": "object",
              "description": "Type of Vehicles such as 'MOTOR CAR', 'STATION /WAGON/JEEP/LAND ROVER'",
              "properties": {
                "value": {
                  "type": "string",
                  "maxLength": 55,
                  "example": "PASSENGER MOTOR CAR"
                }
              }
            },
            "iulabelno": {
              "type": "object",
              "description": "In-Vehicle Unit (IU) number of the device fitted in Singapore-registered vehicles for Electronic Road Pricing (ERP) gantries and Electronic Parking System (EPS) car parks.",
              "properties": {
                "value": {
                  "type": "string",
                  "maxLength": 10,
                  "example": ""
                }
              }
            },
            "make": {
              "type": "object",
              "description": "Vehicle Make such as 'TOYOTA', 'HONDA', 'AUDI'",
              "properties": {
                "value": {
                  "type": "string",
                  "maxLength": 44,
                  "example": "TOYOTA"
                }
              }
            },
            "model": {
              "type": "object",
              "description": "Vehicle Model such as 'COROLLA ALTIS CLASSIC 1.6 CVT', 'HRV 1.5 DX CVT'",
              "properties": {
                "value": {
                  "type": "string",
                  "maxLength": 40,
                  "example": "COROLLA ALTIS"
                }
              }
            },
            "chassisno": {
              "type": "object",
              "description": "Vehicle Chassis Number",
              "properties": {
                "value": {
                  "type": "string",
                  "maxLength": 25,
                  "example": "ZC11S1735800"
                }
              }
            },
            "engineno": {
              "type": "object",
              "description": "Vehicle Engine Number",
              "properties": {
                "value": {
                  "type": "string",
                  "maxLength": 25,
                  "example": "M13A1837453"
                }
              }
            },
            "motorno": {
              "type": "object",
              "description": "Vehicle Motor Number",
              "properties": {
                "value": {
                  "type": "string",
                  "maxLength": 25,
                  "example": ""
                }
              }
            },
            "yearofmanufacture": {
              "type": "object",
              "description": "Manufacturing year",
              "properties": {
                "value": {
                  "type": "string",
                  "maxLength": 4,
                  "example": "2010"
                }
              }
            },
            "firstregistrationdate": {
              "type": "object",
              "description": "Date when vehicle is registered with LTA. See \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14'",
              "properties": {
                "value": {
                  "type": "string",
                  "format": "date",
                  "maxLength": 10,
                  "example": "2010-06-06"
                }
              }
            },
            "originalregistrationdate": {
              "type": "object",
              "description": "Date when vehicle is first registered in the country of origin. See \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14'",
              "properties": {
                "value": {
                  "type": "string",
                  "format": "date",
                  "maxLength": 10,
                  "example": "2010-06-06"
                }
              }
            },
            "coecategory": {
              "type": "object",
              "description": "Vehicle Certificate of Entitlement (COE) bid category",
              "properties": {
                "value": {
                  "type": "string",
                  "maxLength": 40,
                  "example": "A - CAR UP TO 1600CC & 97KW (130BHP)"
                }
              }
            },
            "coeexpirydate": {
              "type": "object",
              "description": "Vehicle Certificate of Entitlement (COE) expiry date. See \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14'",
              "properties": {
                "value": {
                  "type": "string",
                  "maxLength": 10,
                  "format": "date",
                  "example": "2020-06-05"
                }
              }
            },
            "roadtaxexpirydate": {
              "type": "object",
              "description": "See \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14'",
              "properties": {
                "value": {
                  "type": "string",
                  "format": "date",
                  "maxLength": 10,
                  "example": "2020-06-05"
                }
              }
            },
            "quotapremium": {
              "type": "object",
              "description": "Actual Quota Premium (QP) amount payable for the COE upon registration, conversion or COE revalidation in Singapore dollars (SGD). For renewal of COE, the value will contain actual PQP paid.",
              "properties": {
                "value": {
                  "type": "number",
                  "format": "double",
                  "multipleOf": 0.01,
                  "maxLength": 11,
                  "example": 14000.01
                }
              }
            },
            "openmarketvalue": {
              "type": "object",
              "description": "Open Market Value is the value of manufacturer invoice price, freight and insurance in Singapore dollars (SGD).",
              "properties": {
                "value": {
                  "type": "number",
                  "format": "double",
                  "maxLength": 11,
                  "example": 25000.01
                }
              }
            },
            "co2emission": {
              "type": "object",
              "description": "CO2 emission rate",
              "properties": {
                "value": {
                  "type": "number",
                  "format": "double",
                  "maxLength": 9,
                  "example": 146.01
                }
              }
            },
            "status": {
              "type": "object",
              "description": "Status of the Vehicle.\n\n* 1 - LIVE\n* 2 - DE-REGISTERED",
              "properties": {
                "code": {
                  "type": "string",
                  "maxLength": 1,
                  "enum": [
                    1,
                    2
                  ],
                  "example": "1"
                },
                "desc": {
                  "type": "string",
                  "maxLength": 300,
                  "enum": [
                    "LIVE",
                    "DE-REGISTERED"
                  ],
                  "example": "LIVE"
                }
              }
            },
            "primarycolour": {
              "type": "object",
              "description": "Vehicle Primary Colour (e.g. BLACK)",
              "properties": {
                "value": {
                  "type": "string",
                  "maxLength": 30,
                  "example": "BLACK"
                }
              }
            },
            "secondarycolour": {
              "type": "object",
              "description": "Vehicle Primary Colour (e.g. WHITE)",
              "properties": {
                "value": {
                  "type": "string",
                  "maxLength": 30,
                  "example": "WHITE"
                }
              }
            },
            "attachment1": {
              "type": "object",
              "description": "Vehicle Attachment 1 (e.g. DISABLED)",
              "properties": {
                "value": {
                  "type": "string",
                  "maxLength": 50,
                  "example": "DISABLED"
                }
              }
            },
            "attachment2": {
              "type": "object",
              "description": "Vehicle Attachment 2 (e.g. WITH SUN ROOF)",
              "properties": {
                "value": {
                  "type": "string",
                  "maxLength": 50,
                  "example": "WITH SUN ROOF"
                }
              }
            },
            "attachment3": {
              "type": "object",
              "description": "Vehicle Attachment 3 (e.g. SIDE CURTAIN)",
              "properties": {
                "value": {
                  "type": "string",
                  "maxLength": 50,
                  "example": "SIDE CURTAIN"
                }
              }
            },
            "scheme": {
              "type": "object",
              "description": "Vehicle Scheme (e.g. REVISED OFF-PEAK CAR)",
              "properties": {
                "value": {
                  "type": "string",
                  "maxLength": 66,
                  "example": "REVISED OFF-PEAK CAR"
                }
              }
            },
            "thcemission": {
              "type": "object",
              "description": "Total Hydro Carbon (THC) emission rate",
              "properties": {
                "value": {
                  "type": "number",
                  "format": "double",
                  "maxLength": 9,
                  "example": 1.011001
                }
              }
            },
            "coemission": {
              "type": "object",
              "description": "Carbon Monoxide emission rate",
              "properties": {
                "value": {
                  "type": "number",
                  "format": "double",
                  "maxLength": 9,
                  "example": 1.100001
                }
              }
            },
            "noxemission": {
              "type": "object",
              "description": "Nitrogen Oxide (NOx) emission rate.",
              "properties": {
                "value": {
                  "type": "number",
                  "format": "double",
                  "maxLength": 9,
                  "example": 0.011001
                }
              }
            },
            "pmemission": {
              "type": "object",
              "description": "Particulates (PM - Atmospheric Particulate Matter) emission rate.",
              "properties": {
                "value": {
                  "type": "number",
                  "format": "double",
                  "maxLength": 9,
                  "example": 0.007
                }
              }
            },
            "enginecapacity": {
              "type": "object",
              "description": "Engine Capacity in cubic centimeter (cc)",
              "properties": {
                "value": {
                  "type": "integer",
                  "maxLength": 8,
                  "example": 1600
                }
              }
            },
            "powerrate": {
              "type": "object",
              "description": "Power Rate. Applicable to Electric and Hybrid vehicles powered by electric motors. Unit is Kilowatt.",
              "properties": {
                "value": {
                  "type": "number",
                  "format": "double",
                  "maxLength": 8,
                  "example": 1.41
                }
              }
            },
            "effectiveownership": {
              "type": "object",
              "description": "Effective Date/Time of Ownership. See \"date-time\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14'",
              "properties": {
                "value": {
                  "type": "string",
                  "format": "date-time",
                  "maxLength": 25,
                  "example": "2010-08-31T20:12:12+08:00"
                }
              }
            },
            "propellant": {
              "type": "object",
              "description": "Propellant (e.g. Compressed Natural Gas, Diesel, Diesel-CNG, Diesel-Electric, Diesel-Electric (Plug-In), Electric, Gas, Liquefied Petroleum Gas (LPG), Petrol, Petrol-CNG, Petrol-Electric, Petrol-Electric (Plug-In), Petrol-LPG",
              "properties": {
                "value": {
                  "type": "string",
                  "maxLength": 40,
                  "example": "Compressed Natural Gas"
                }
              }
            },
            "maximumunladenweight": {
              "type": "object",
              "description": "Maximum Unladen Weight in kilograms (kg)",
              "properties": {
                "value": {
                  "type": "integer",
                  "maxLength": 9,
                  "example": 1500
                }
              }
            },
            "maximumladenweight": {
              "type": "object",
              "description": "Maximum Laden Weight in kilograms (kg)",
              "properties": {
                "value": {
                  "type": "integer",
                  "maxLength": 12,
                  "example": 1795
                }
              }
            },
            "minimumparfbenefit": {
              "type": "object",
              "description": "Minimum PARF Benefit in Singapore dollars (SGD).",
              "properties": {
                "value": {
                  "type": "number",
                  "format": "double",
                  "maxLength": 12,
                  "example": 8770.01
                }
              }
            },
            "nooftransfers": {
              "type": "object",
              "description": "Number of Transfer",
              "properties": {
                "value": {
                  "type": "integer",
                  "maxLength": 5,
                  "example": 2
                }
              }
            },
            "vpc": {
              "type": "object",
              "description": "Vehicle Parking Certificate. Applicable for Heavy Vehicles.",
              "properties": {
                "value": {
                  "type": "string",
                  "maxLength": 10,
                  "example": "1234567890"
                }
              }
            }
          },
          "allOf": [
            {
              "$ref": "#/components/schemas/DataFieldProperties"
            }
          ]
        }
      },
      "passexpirydate": {
        "type": "object",
        "title": "PassExpiryDate",
        "description": "Pass expiry of a foreigner. <br/>**Note:** Only applies to a foreigner with a valid pass.",
        "properties": {
          "value": {
            "type": "string",
            "format": "date",
            "description": "Value of data field. See \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14",
            "example": "2022-12-31"
          }
        }
      },
      "passstatus": {
        "type": "object",
        "title": "PassStatus",
        "description": "Pass status of a FIN holder. <br/>**Note:** Only applies to a foreigner with a valid pass. \n*\tLive\n*\tApproved\n",
        "properties": {
          "value": {
            "type": "string",
            "enum": [
              "Live",
              "Approved"
            ],
            "description": "Value of data field.",
            "example": "Live"
          }
        }
      },
      "passtype": {
        "type": "object",
        "title": "PassType",
        "description": "Pass type of a FIN holder. <br/>**Note:** Only applies to a foreigner with a valid pass.\n\nRefer to the [Code reference tables](#section/Support) in the Support section for list of possible values.",
        "properties": {
          "code": {
            "type": "string",
            "description": "Value of data field.",
            "example": "RPass"
          },
          "desc": {
            "type": "string",
            "example": "Work Permit"
          }
        }
      },
      "uinfin": {
        "type": "object",
        "title": "UINFIN",
        "description": "Singapore issued identification number of the Person.",
        "properties": {
          "value": {
            "type": "string",
            "maxLength": 66,
            "description": "value of the field, should be displayed as it is.",
            "example": "S1111111D"
          }
        }
      },
      "partialuinfin": {
        "type": "object",
        "title": "Partial UINFIN",
        "description": "Masked Singapore issued identification number of the Person. Only the last 3 digit and ending alphabet will be in clear.",
        "properties": {
          "value": {
            "type": "string",
            "maxLength": 9,
            "description": "Value of the field, should be displayed as it is.",
            "example": "*****111D"
          }
        }
      },
      "merdekagen": {
        "type": "object",
        "title": "MerdekaGen",
        "description": "Merdekagen Eligibility",
        "properties": {
          "eligibility": {
            "type": "object",
            "description": "Eligibility",
            "properties": {
              "value": {
                "type": "boolean",
                "example": true
              }
            }
          }
        }
      },
      "pioneergen": {
        "type": "object",
        "title": "PioneerGen",
        "description": "Pioneergen Eligibility",
        "properties": {
          "eligibility": {
            "type": "object",
            "description": "Eligibility",
            "properties": {
              "value": {
                "type": "boolean",
                "example": true
              }
            }
          }
        }
      },
      "TokenError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "EntityAddress": {
        "type": "object",
        "description": "Entity's address details, in order of when data is first\nmade available.\n\n**NOTE:** Only the **latest registration address** for the entity will be returned.",
        "properties": {
          "addresses-list": {
            "type": "array",
            "description": "Entity address details.\n\nCan be Singapore formatted address or unformatted address (for non-Singapore addresses).\n\n**Note:** `address-sg` and `address-unformatted` are mutually exclusive.",
            "oneOf": [
              {
                "type": "object",
                "title": "Address SG",
                "properties": {
                  "type": {
                    "type": "string",
                    "default": "SG",
                    "description": "Type of Address (SG or UNFORMATTED for non SG)",
                    "enum": [
                      "SG",
                      "UNFORMATTED"
                    ]
                  },
                  "standard": {
                    "type": "string",
                    "description": "The standard of formatting that the address is adhering to.\n- D - Singapore Government Data Reference Model (SG-DRM)\n- F - National Coded Address (NCA)\n- L - Local Unformatted Address\n- N - Foreign Unformatted Address\n\n**NOTE:** When this value is 'D', the formatted Singapore address `address-sg` property will apply. Else the `address-unformatted` will apply for unformatted addresses.\n",
                    "enum": [
                      "D",
                      "F",
                      "L",
                      "N"
                    ],
                    "maxLength": 1
                  },
                  "postal": {
                    "type": "object",
                    "description": "Postal Code of Address",
                    "properties": {
                      "value": {
                        "type": "string",
                        "minLength": 6,
                        "maxLength": 6,
                        "example": "100123"
                      }
                    }
                  },
                  "block": {
                    "type": "object",
                    "description": "Block of Address",
                    "properties": {
                      "value": {
                        "type": "string",
                        "maxLength": 10,
                        "example": "123"
                      }
                    }
                  },
                  "street": {
                    "type": "object",
                    "description": "Street of Address",
                    "properties": {
                      "value": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "XYZ street 99"
                      }
                    }
                  },
                  "building": {
                    "type": "object",
                    "description": "Building of Address",
                    "properties": {
                      "value": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "ABC building"
                      }
                    }
                  },
                  "floor": {
                    "type": "object",
                    "description": "Floor of Address",
                    "properties": {
                      "value": {
                        "type": "string",
                        "maxLength": 3,
                        "example": "10"
                      }
                    }
                  },
                  "unit": {
                    "type": "object",
                    "description": "Unit of Address",
                    "properties": {
                      "value": {
                        "type": "string",
                        "maxLength": 5,
                        "example": "100"
                      }
                    }
                  },
                  "country": {
                    "allOf": [
                      {
                        "description": "Country/Place. Refer to code table provided [HERE](#section/Support) in the Support section for list of possible values."
                      },
                      {
                        "type": "object",
                        "description": "Country of Address. For AddressSG this will always be \"SG\".\n\nRefer to `country` in code table provided [HERE](https://public.cloud.myinfo.gov.sg/myinfobiz/myinfo-business-api-code-tables.xlsx) for description of each code.\n",
                        "properties": {
                          "code": {
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 2,
                            "default": "SG"
                          },
                          "desc": {
                            "type": "string",
                            "default": "Singapore"
                          }
                        }
                      }
                    ]
                  }
                },
                "discriminator": {
                  "propertyName": "type"
                }
              },
              {
                "type": "object",
                "title": "Address Unformatted",
                "properties": {
                  "type": {
                    "type": "string",
                    "default": "UNFORMATTED",
                    "description": "Type of Address (SG or UNFORMATTED for non SG)",
                    "enum": [
                      "SG",
                      "UNFORMATTED"
                    ]
                  },
                  "standard": {
                    "type": "string",
                    "description": "The standard of formatting that the address is adhering to.\n- D - Singapore Government Data Reference Model (SG-DRM)\n- F - National Coded Address (NCA)\n- L - Local Unformatted Address\n- N - Foreign Unformatted Address\n\n**NOTE:** When this value is 'D', the formatted Singapore address `address-sg` property will apply. Else the `address-unformatted` will apply for unformatted addresses.\n",
                    "enum": [
                      "D",
                      "F",
                      "L",
                      "N"
                    ],
                    "maxLength": 1
                  },
                  "line1": {
                    "type": "object",
                    "description": "Unregistered Foreign address line 1",
                    "properties": {
                      "value": {
                        "type": "string",
                        "maxLength": 70,
                        "example": "987 ZYX street"
                      }
                    }
                  },
                  "line2": {
                    "type": "object",
                    "description": "Unregistered Foreign address line 2",
                    "properties": {
                      "value": {
                        "type": "string",
                        "maxLength": 70,
                        "example": "Florida, CA 45678"
                      }
                    }
                  }
                },
                "discriminator": {
                  "propertyName": "type"
                }
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "SG": "#/components/schemas/entity-address-sg",
                "UNFORMATTED": "#/components/schemas/entity-address-unformatted"
              }
            }
          }
        }
      },
      "entity-address-sg": {
        "type": "object",
        "title": "Address SG",
        "properties": {
          "type": {
            "type": "string",
            "default": "SG",
            "description": "Type of Address (SG or UNFORMATTED for non SG)",
            "enum": [
              "SG",
              "UNFORMATTED"
            ]
          },
          "standard": {
            "type": "string",
            "description": "The standard of formatting that the address is adhering to.\n- D - Singapore Government Data Reference Model (SG-DRM)\n- F - National Coded Address (NCA)\n- L - Local Unformatted Address\n- N - Foreign Unformatted Address\n\n**NOTE:** When this value is 'D', the formatted Singapore address `address-sg` property will apply. Else the `address-unformatted` will apply for unformatted addresses.\n",
            "enum": [
              "D",
              "F",
              "L",
              "N"
            ],
            "maxLength": 1
          },
          "postal": {
            "type": "object",
            "description": "Postal Code of Address",
            "properties": {
              "value": {
                "type": "string",
                "minLength": 6,
                "maxLength": 6,
                "example": "100123"
              }
            }
          },
          "block": {
            "type": "object",
            "description": "Block of Address",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 10,
                "example": "123"
              }
            }
          },
          "street": {
            "type": "object",
            "description": "Street of Address",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 32,
                "example": "XYZ street 99"
              }
            }
          },
          "building": {
            "type": "object",
            "description": "Building of Address",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 32,
                "example": "ABC building"
              }
            }
          },
          "floor": {
            "type": "object",
            "description": "Floor of Address",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 3,
                "example": "10"
              }
            }
          },
          "unit": {
            "type": "object",
            "description": "Unit of Address",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 5,
                "example": "100"
              }
            }
          },
          "country": {
            "allOf": [
              {
                "description": "Country/Place. Refer to code table provided [HERE](#section/Support) in the Support section for list of possible values."
              },
              {
                "type": "object",
                "description": "Country of Address. For AddressSG this will always be \"SG\".\n\nRefer to `country` in code table provided [HERE](https://public.cloud.myinfo.gov.sg/myinfobiz/myinfo-business-api-code-tables.xlsx) for description of each code.\n",
                "properties": {
                  "code": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 2,
                    "default": "SG"
                  },
                  "desc": {
                    "type": "string",
                    "default": "Singapore"
                  }
                }
              }
            ]
          }
        },
        "discriminator": {
          "propertyName": "type"
        }
      },
      "entity-address-unformatted": {
        "type": "object",
        "title": "Address Unformatted",
        "properties": {
          "type": {
            "type": "string",
            "default": "UNFORMATTED",
            "description": "Type of Address (SG or UNFORMATTED for non SG)",
            "enum": [
              "SG",
              "UNFORMATTED"
            ]
          },
          "standard": {
            "type": "string",
            "description": "The standard of formatting that the address is adhering to.\n- D - Singapore Government Data Reference Model (SG-DRM)\n- F - National Coded Address (NCA)\n- L - Local Unformatted Address\n- N - Foreign Unformatted Address\n\n**NOTE:** When this value is 'D', the formatted Singapore address `address-sg` property will apply. Else the `address-unformatted` will apply for unformatted addresses.\n",
            "enum": [
              "D",
              "F",
              "L",
              "N"
            ],
            "maxLength": 1
          },
          "line1": {
            "type": "object",
            "description": "Unregistered Foreign address line 1",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 70,
                "example": "987 ZYX street"
              }
            }
          },
          "line2": {
            "type": "object",
            "description": "Unregistered Foreign address line 2",
            "properties": {
              "value": {
                "type": "string",
                "maxLength": 70,
                "example": "Florida, CA 45678"
              }
            }
          }
        },
        "discriminator": {
          "propertyName": "type"
        }
      },
      "person-appointment": {
        "type": "object",
        "title": "person appointment holder",
        "properties": {
          "category": {
            "allOf": [
              {
                "default": "1"
              },
              {
                "type": "object",
                "description": "Category of the position of the appointment holder. Possible values:\n- 1 - Individual\n- 2 - Local Company\n- 3 - Foreign Company\n- 4 - Unregistered Local Entity\n- 5 - Limited Liability Partnerships\n- 6 - Unregistered Foreign Entity\n\n**Note: This field will be return `\"\"` if the appointment holder do not fall in any of the above categories.**\n",
                "enum": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5",
                  "6"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 1,
                    "example": "1"
                  },
                  "desc": {
                    "type": "string",
                    "example": "Individual"
                  }
                }
              }
            ]
          },
          "person-reference": {
            "$ref": "#/components/schemas/PersonReference"
          },
          "corppass-email": {
            "allOf": [
              {
                "description": "CorpPass account email"
              },
              {
                "type": "object",
                "description": "CorpPass account email\n\napplicable for entity types: [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`,`AF`,`UL`,`UF`,`OE`]\n\nmandatory: No",
                "properties": {
                  "value": {
                    "type": "string",
                    "maxLength": 320
                  }
                }
              }
            ]
          },
          "corppass-mobileno": {
            "allOf": [
              {
                "description": "CorpPass mobile number"
              },
              {
                "type": "object",
                "description": "CorpPass account mobile\n\napplicable for entity types: [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`,`AF`,`UL`,`UF`,`OE`]\n\nmandatory: No",
                "properties": {
                  "value": {
                    "type": "string",
                    "maxLength": 20
                  }
                }
              }
            ]
          },
          "position": {
            "type": "object",
            "description": "Position of referenced corporate entity or person.\n\n`position-code` is applicable for Sole-Proprietors, Partnerships, and Companies. \n\nRefer to Position code table by entity type provided [HERE](#section/Support) in the Support section for list of possible values. \n\n**NOTE:** `position-code` are only available for the following positions.\n\nPossible values:\n- 1 - Administrator\n- 2 - Agent\n- 3 - Agent of Foreign Firm\n- 4 - Auditor\n- 5 - Authorised Representative\n- 6 - Chief Executive Officer\n- 7 - Director\n- 8 - Director Under Section 17(3)(d) of the Accountants Act\n- 9 - Estate Off\n- 10 - Executor/Executrix\n- 11 - General Partner\n- 12 - General Partner as Agent of Foreign Firm\n- 13 - General Partner as Nominee/Trustee\n- 14 - Limited Partner\n- 15 - Manager\n- 16 - Managing Director\n- 17 - Member\n- 18 - Next-Of-Kin\n- 19 - Nominee\n- 20 - Nominee/Trustee\n- 21 - Officer\n- 22 - Owner\n- 23 - Partner\n- 24 - Partner Under Section 18(3)(c) of the Accountants Act\n- 25 - Partner Under Section 18A(3)(e) of the Accountants Act (For ALLP Only)\n- 26 - Public Accountant Employee\n- 27 - Public Accounting Employee (For ALLP Only)\n- 28 - Secretary\n- 29 - Sole-Proprietor/Partner\n- 30 - Trustee\n",
            "properties": {
              "code": {
                "type": "string",
                "maxLength": 2,
                "example": "7"
              },
              "desc": {
                "type": "string",
                "example": "Director"
              }
            }
          },
          "appointment-date": {
            "allOf": [
              {
                "description": "See [RFC3339](http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14) \"full-date\" format `YYYY-MM-DD`."
              },
              {
                "type": "object",
                "description": "Position appointment date\n\napplicable for entity types: [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`,`UL`,`UF`]\n\nmandatory: Yes",
                "properties": {
                  "value": {
                    "type": "string",
                    "format": "date",
                    "description": "Value of data field. See \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14",
                    "example": "2018-01-01"
                  }
                }
              }
            ]
          }
        },
        "discriminator": {
          "propertyName": "category"
        }
      },
      "entity-appointment": {
        "type": "object",
        "title": "entity appointment holder",
        "properties": {
          "category": {
            "type": "object",
            "description": "Category of the position of the appointment holder. Possible values:\n- 1 - Individual\n- 2 - Local Company\n- 3 - Foreign Company\n- 4 - Unregistered Local Entity\n- 5 - Limited Liability Partnerships\n- 6 - Unregistered Foreign Entity\n\n**Note: This field will be return `\"\"` if the appointment holder do not fall in any of the above categories.**\n",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6"
            ],
            "properties": {
              "code": {
                "type": "string",
                "maxLength": 1,
                "example": "1"
              },
              "desc": {
                "type": "string",
                "example": "Individual"
              }
            }
          },
          "entity-reference": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "position": {
            "type": "object",
            "description": "Position of referenced corporate entity or person.\n\n`position-code` is applicable for Sole-Proprietors, Partnerships, and Companies. \n\nRefer to Position code table by entity type provided [HERE](#section/Support) in the Support section for list of possible values. \n\n**NOTE:** `position-code` are only available for the following positions.\n\nPossible values:\n- 1 - Administrator\n- 2 - Agent\n- 3 - Agent of Foreign Firm\n- 4 - Auditor\n- 5 - Authorised Representative\n- 6 - Chief Executive Officer\n- 7 - Director\n- 8 - Director Under Section 17(3)(d) of the Accountants Act\n- 9 - Estate Off\n- 10 - Executor/Executrix\n- 11 - General Partner\n- 12 - General Partner as Agent of Foreign Firm\n- 13 - General Partner as Nominee/Trustee\n- 14 - Limited Partner\n- 15 - Manager\n- 16 - Managing Director\n- 17 - Member\n- 18 - Next-Of-Kin\n- 19 - Nominee\n- 20 - Nominee/Trustee\n- 21 - Officer\n- 22 - Owner\n- 23 - Partner\n- 24 - Partner Under Section 18(3)(c) of the Accountants Act\n- 25 - Partner Under Section 18A(3)(e) of the Accountants Act (For ALLP Only)\n- 26 - Public Accountant Employee\n- 27 - Public Accounting Employee (For ALLP Only)\n- 28 - Secretary\n- 29 - Sole-Proprietor/Partner\n- 30 - Trustee\n",
            "properties": {
              "code": {
                "type": "string",
                "maxLength": 2,
                "example": "7"
              },
              "desc": {
                "type": "string",
                "example": "Director"
              }
            }
          },
          "appointment-date": {
            "allOf": [
              {
                "description": "See [RFC3339](http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14) \"full-date\" format `YYYY-MM-DD`."
              },
              {
                "type": "object",
                "description": "Position appointment date\n\napplicable for entity types: [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`,`UL`,`UF`]\n\nmandatory: Yes",
                "properties": {
                  "value": {
                    "type": "string",
                    "format": "date",
                    "description": "Value of data field. See \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14",
                    "example": "2018-01-01"
                  }
                }
              }
            ]
          }
        },
        "discriminator": {
          "propertyName": "category"
        }
      },
      "person-shareholder": {
        "type": "object",
        "title": "person shareholder",
        "properties": {
          "category": {
            "allOf": [
              {
                "default": "1"
              },
              {
                "type": "object",
                "description": "Category of the shareholder. Possible values:\n- 1 - Individual\n- 2 - Local Company\n- 3 - Foreign Company\n- 4 - Unregistered Local Entity\n- 5 - Limited Liability Partnerships\n- 6 - Unregistered Foreign Entity\n\n**Note: This field will be return `\"\"` if the shareholder do not fall in any of the above categories.**\n",
                "enum": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5",
                  "6"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 1,
                    "example": "1"
                  },
                  "desc": {
                    "type": "string",
                    "example": "Individual"
                  }
                }
              }
            ]
          },
          "person-reference": {
            "$ref": "#/components/schemas/PersonReference"
          },
          "share-type": {
            "type": "object",
            "description": "Type of shares. Possible values:\n- 1 - Ordinary Capital\n- 2 - Preference Capital\n- 3 - Others Capital\n- 0 - Company Limited by Guarantee Capital\n",
            "enum": [
              "1",
              "2",
              "3",
              "0"
            ],
            "properties": {
              "code": {
                "type": "string",
                "maxLength": 1,
                "example": "1"
              },
              "desc": {
                "type": "string",
                "example": "Ordinary Capital"
              }
            }
          },
          "corppass-email": {
            "allOf": [
              {
                "description": "CorpPass account email"
              },
              {
                "type": "object",
                "description": "CorpPass account email\n\napplicable for entity types: [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`,`AF`,`UL`,`UF`,`OE`]\n\nmandatory: No",
                "properties": {
                  "value": {
                    "type": "string",
                    "maxLength": 320
                  }
                }
              }
            ]
          },
          "corppass-mobileno": {
            "allOf": [
              {
                "description": "CorpPass mobile number"
              },
              {
                "type": "object",
                "description": "CorpPass account mobile\n\napplicable for entity types: [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`,`AF`,`UL`,`UF`,`OE`]\n\nmandatory: No",
                "properties": {
                  "value": {
                    "type": "string",
                    "maxLength": 20
                  }
                }
              }
            ]
          },
          "allocation": {
            "allOf": [
              {
                "description": "Allotted shares, not to be confused with `currency` as monetary sense."
              },
              {
                "type": "object",
                "description": "Number of shares allotted\n\napplicable for entity types: [`LC`]\n\nmandatory: No",
                "properties": {
                  "value": {
                    "type": "number",
                    "format": "double"
                  }
                }
              }
            ]
          },
          "currency": {
            "allOf": [
              {
                "description": "Indicates the currency that the shares are held in.\n\nRefer to `currency` in code table provided [HERE](#section/Support) in the Support section for list of possible values.\n\n**NOTE:** This is not to be confused with `allocation`, which indicates the allotted shares. Refer to `Currency` in code table provided for description of each code."
              },
              {
                "type": "object",
                "description": "Shareholder’s currency code\n\napplicable for entity types: [`LC`]\n\nmandatory: Yes",
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 3
                  },
                  "desc": {
                    "type": "string"
                  }
                }
              }
            ]
          }
        },
        "discriminator": {
          "propertyName": "category"
        }
      },
      "entity-shareholder": {
        "type": "object",
        "title": "entity shareholder",
        "properties": {
          "category": {
            "type": "object",
            "description": "Category of the shareholder. Possible values:\n- 1 - Individual\n- 2 - Local Company\n- 3 - Foreign Company\n- 4 - Unregistered Local Entity\n- 5 - Limited Liability Partnerships\n- 6 - Unregistered Foreign Entity\n\n**Note: This field will be return `\"\"` if the shareholder do not fall in any of the above categories.**\n",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6"
            ],
            "properties": {
              "code": {
                "type": "string",
                "maxLength": 1,
                "example": "1"
              },
              "desc": {
                "type": "string",
                "example": "Individual"
              }
            }
          },
          "entity-reference": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "share-type": {
            "type": "object",
            "description": "Type of shares. Possible values:\n- 1 - Ordinary Capital\n- 2 - Preference Capital\n- 3 - Others Capital\n- 0 - Company Limited by Guarantee Capital\n",
            "enum": [
              "1",
              "2",
              "3",
              "0"
            ],
            "properties": {
              "code": {
                "type": "string",
                "maxLength": 1,
                "example": "1"
              },
              "desc": {
                "type": "string",
                "example": "Ordinary Capital"
              }
            }
          },
          "allocation": {
            "allOf": [
              {
                "description": "Allotted shares, not to be confused with `currency` as monetary sense."
              },
              {
                "type": "object",
                "description": "Number of shares allotted\n\napplicable for entity types: [`LC`]\n\nmandatory: No",
                "properties": {
                  "value": {
                    "type": "number",
                    "format": "double"
                  }
                }
              }
            ]
          },
          "currency": {
            "allOf": [
              {
                "description": "Indicates the currency that the shares are held in.\n\nRefer to `currency` in code table provided [HERE](#section/Support) in the Support section for list of possible values.\n\n**NOTE:** This is not to be confused with `allocation`, which indicates the allotted shares. Refer to `Currency` in code table provided for description of each code."
              },
              {
                "type": "object",
                "description": "Shareholder’s currency code\n\napplicable for entity types: [`LC`]\n\nmandatory: Yes",
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 3
                  },
                  "desc": {
                    "type": "string"
                  }
                }
              }
            ]
          }
        },
        "discriminator": {
          "propertyName": "category"
        }
      },
      "Entity": {
        "type": "object",
        "description": "Entity's details.",
        "properties": {
          "basic-profile": {
            "allOf": [
              {
                "type": "object",
                "description": "Entity's basic particulars.",
                "properties": {
                  "uen": {
                    "allOf": [
                      {
                        "description": "Entity unique identifier"
                      },
                      {
                        "type": "object",
                        "description": "Entity unique identifier\n\napplicable for entity types: [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`,`AF`,`UL`,`UF`,`OE`]\n\nmandatory: Yes",
                        "properties": {
                          "value": {
                            "type": "string",
                            "maxLength": 10
                          }
                        }
                      }
                    ]
                  },
                  "entity-name": {
                    "allOf": [
                      {
                        "description": "Registered name of entity."
                      },
                      {
                        "type": "object",
                        "description": "Entity name\n\napplicable for entity types: [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`,`AF`,`UL`,`UF`,`OE`]\n\nmandatory: Yes",
                        "properties": {
                          "value": {
                            "type": "string",
                            "maxLength": 100,
                            "example": "ABC Company"
                          }
                        }
                      }
                    ]
                  },
                  "entity-type": {
                    "allOf": [
                      {
                        "description": "If this field is `LC` or `FC`, refer to `CompanyType`. If this field is `BN`, refer to `BusinessConstitution`. Refer to `Entity Type` in code table provided [HERE](#section/Support) in the Support section for list of possible values."
                      },
                      {
                        "type": "object",
                        "description": "Type of entity\n\napplicable for entity types: [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`,`AF`,`UL`,`UF`,`OE`]\n\nmandatory: Yes",
                        "properties": {
                          "code": {
                            "type": "string",
                            "maxLength": 2,
                            "minLength": 2,
                            "example": "BN"
                          },
                          "desc": {
                            "type": "string",
                            "example": "Business"
                          }
                        }
                      }
                    ]
                  },
                  "entity-status": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Status of the entity. Possible values:\n- LIVE - Entity is LIVE\n- NON-LIVE - Entity is not LIVE\n",
                        "enum": [
                          "LIVE",
                          "NON-LIVE"
                        ],
                        "properties": {
                          "value": {
                            "type": "string",
                            "example": "LIVE"
                          }
                        }
                      }
                    ]
                  },
                  "business-constitution": {
                    "allOf": [
                      {
                        "description": "Type of business. This field is available only for business and public account firm entities, and omitted for other entities. Possible values:\n- S - Sole-Proprietorship\n- P - Partnership"
                      },
                      {
                        "type": "object",
                        "description": "Business/PAF constitution\n\napplicable for entity types: [`BN`,`PAF`]\n\nmandatory: No",
                        "properties": {
                          "code": {
                            "type": "string",
                            "maxLength": 1,
                            "minLength": 1,
                            "example": "S"
                          },
                          "desc": {
                            "type": "string",
                            "example": "Sole-Proprietor"
                          }
                        }
                      }
                    ]
                  },
                  "company-type": {
                    "allOf": [
                      {
                        "description": "Type of company. This field is available only for company entities, and omitted for non-company entities. Possible values:\n- A1 - Public Company Limited by Shares\n- A3 - Public Company Limited by Guarantee\n- A4 - Unlimited Public Company\n- B1 - Private Company Limited by Shares\n- B2 - Exempt Private Company Limited by Shares\n- B3 - Unlimited Private Company\n- B4 - Unlimited Exempt Private Company\n- F1 - Foreign Company Registered in Singapore"
                      },
                      {
                        "type": "object",
                        "description": "Type of company\n\napplicable for entity types: [`LC`,`FC`]\n\nmandatory: Yes",
                        "properties": {
                          "code": {
                            "type": "string",
                            "maxLength": 2,
                            "minLength": 2,
                            "example": "A1"
                          },
                          "desc": {
                            "type": "string",
                            "example/": "Public Company Limited by Shares"
                          }
                        }
                      }
                    ]
                  },
                  "ownership": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "This field is available only for entities with shareholders, and omitted\nwhen no shareholder information is made available. Possible values:\n- 1 - Individual Shareholders only\n- 2 - Corporate Entity Shareholders only\n- 3 - Both Individual and Corporate Entity Shareholders",
                        "enum": [
                          "1",
                          "2",
                          "3"
                        ],
                        "properties": {
                          "code": {
                            "type": "string",
                            "maxLength": 1,
                            "example": "1"
                          },
                          "desc": {
                            "type": "string",
                            "example": "Individual Shareholders only"
                          }
                        }
                      }
                    ]
                  },
                  "country-of-incorporation": {
                    "allOf": [
                      {
                        "description": "Country/Place of incorporation. Refer to code table provided [HERE](#section/Support) in the Support section for list of possible values."
                      },
                      {
                        "type": "object",
                        "description": "Country of incorporation\n\napplicable for entity types: [`LC`,`FC`,`UL`,`UF`]\n\nmandatory: No",
                        "properties": {
                          "code": {
                            "type": "string",
                            "maxLength": 2,
                            "minLength": 2,
                            "default": "SG"
                          },
                          "desc": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "registration-date": {
                    "allOf": [
                      {
                        "description": "Date of entity registration. See [RFC3339](http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14) \"full-date\" format `YYYY-MM-DD`."
                      },
                      {
                        "type": "object",
                        "description": "Business registration date\n\napplicable for entity types: [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`,`OE`]\n\nmandatory: Yes",
                        "properties": {
                          "value": {
                            "type": "string",
                            "format": "date",
                            "description": "Value of data field. See \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14",
                            "example": "2018-01-01"
                          }
                        }
                      }
                    ]
                  },
                  "business-expiry-date": {
                    "allOf": [
                      {
                        "description": "See [RFC3339](http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14) \"full-date\" format `YYYY-MM-DD`."
                      },
                      {
                        "type": "object",
                        "description": "Business registration date\n\napplicable for entity types: [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`,`OE`]\n\nmandatory: Yes",
                        "properties": {
                          "value": {
                            "type": "string",
                            "format": "date",
                            "description": "Value of data field. See \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14",
                            "example": "2018-01-01"
                          }
                        }
                      }
                    ]
                  },
                  "primary-activity": {
                    "allOf": [
                      {
                        "description": "Singapore Standard Industrial Classification (SSIC) **2020** edition codes. Refer to `ssic-activity` in code table provided [HERE](#section/Support) in the Support section for list of possible values."
                      },
                      {
                        "type": "object",
                        "description": "SSIC primary activity code\n\napplicable for entity types: [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`,`OE`]\n\nmandatory: Yes for entity types [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`], No for entity type `OE`",
                        "properties": {
                          "code": {
                            "type": "string",
                            "maxLength": 5,
                            "minLength": 5,
                            "example": "10613"
                          },
                          "desc": {
                            "type": "string",
                            "example": "Processing of pepper seeds"
                          }
                        }
                      }
                    ]
                  },
                  "primary-user-described-activity": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Additional Description for primary activity.",
                        "properties": {
                          "value": {
                            "type": "string",
                            "example": "CREATING CULTURAL AND EDUCATIONAL EVENT PRODUCTIONS FOR THE COMMUNITY"
                          }
                        }
                      }
                    ]
                  },
                  "secondary-activity": {
                    "allOf": [
                      {
                        "description": "Singapore Standard Industrial Classification (SSIC) **2020** edition codes. Refer to `ssic-activity` in code table provided [HERE](#section/Support) in the Support section for list of possible values."
                      },
                      {
                        "type": "object",
                        "description": "SSIC secondary activity code\n\napplicable for entity types: [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`,`OE`]\n\nmandatory: Yes for entity types [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`], No for entity type `OE`",
                        "properties": {
                          "code": {
                            "type": "string",
                            "maxLength": 5,
                            "minLength": 5,
                            "example": "16230"
                          },
                          "desc": {
                            "type": "string",
                            "example": "Manufacture of wooden containers"
                          }
                        }
                      }
                    ]
                  },
                  "secondary-user-described-activity": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Additional Description for secondary activity.",
                        "properties": {
                          "value": {
                            "type": "string",
                            "example": "PROVIDING CONSULTANCY, MARKETING & OTHER TRADE RELATED SERVICES"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              {
                "$ref": "#/components/schemas/MyinfobizDataFieldProperties"
              }
            ]
          },
          "previous-names": {
            "allOf": [
              {
                "type": "object",
                "description": "Entity's previous entity name records, up to the last __5__\nrecords in reverse chronological order (latest->first) of effective\ndate.",
                "properties": {
                  "previous-names-list": {
                    "type": "array",
                    "description": "Entity's previous name record.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "history-name": {
                          "allOf": [
                            {
                              "description": "Entity previous name"
                            },
                            {
                              "type": "object",
                              "description": "Name of Entity name history\n\napplicable for entity types: [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`,`OE`]\n\nmandatory: Yes",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "maxLength": 100
                                }
                              }
                            }
                          ]
                        },
                        "history-name-effective-date": {
                          "allOf": [
                            {
                              "description": "See [RFC3339](http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14) \"full-date\" format `YYYY-MM-DD`."
                            },
                            {
                              "type": "object",
                              "description": "Entity name history effective date\n\napplicable for entity types: [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`,`OE`]\n\nmandatory: Yes",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "format": "date"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "maxItems": 5
              },
              {
                "$ref": "#/components/schemas/MyinfobizDataFieldProperties"
              }
            ]
          },
          "previous-uens": {
            "allOf": [
              {
                "type": "object",
                "description": "Entity's previous unique entity number (UEN) records, up to the\nlast __5__ records in reverse chronological order of when data is first made available.",
                "properties": {
                  "previous-uens-list": {
                    "type": "array",
                    "description": "Entity's previous unique entity number (UEN) record.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "previous-uen": {
                          "allOf": [
                            {
                              "description": "Entity previous uen"
                            },
                            {
                              "type": "object",
                              "description": "Entity’s former business registration number\n\napplicable for entity types: [`LC`,`FC`,`LLP`,`OE`]\n\nmandatory: Yes",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "maxLength": 10
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "maxItems": 5
              },
              {
                "$ref": "#/components/schemas/MyinfobizDataFieldProperties"
              }
            ]
          },
          "addresses": {
            "allOf": [
              {
                "type": "object",
                "description": "Entity's address details, in order of when data is first\nmade available.\n\n**NOTE:** Only the **latest registration address** for the entity will be returned.",
                "properties": {
                  "addresses-list": {
                    "type": "array",
                    "description": "Entity address details.\n\nCan be Singapore formatted address or unformatted address (for non-Singapore addresses).\n\n**Note:** `address-sg` and `address-unformatted` are mutually exclusive.",
                    "oneOf": [
                      {
                        "type": "object",
                        "title": "Address SG",
                        "properties": {
                          "type": {
                            "type": "string",
                            "default": "SG",
                            "description": "Type of Address (SG or UNFORMATTED for non SG)",
                            "enum": [
                              "SG",
                              "UNFORMATTED"
                            ]
                          },
                          "standard": {
                            "type": "string",
                            "description": "The standard of formatting that the address is adhering to.\n- D - Singapore Government Data Reference Model (SG-DRM)\n- F - National Coded Address (NCA)\n- L - Local Unformatted Address\n- N - Foreign Unformatted Address\n\n**NOTE:** When this value is 'D', the formatted Singapore address `address-sg` property will apply. Else the `address-unformatted` will apply for unformatted addresses.\n",
                            "enum": [
                              "D",
                              "F",
                              "L",
                              "N"
                            ],
                            "maxLength": 1
                          },
                          "postal": {
                            "type": "object",
                            "description": "Postal Code of Address",
                            "properties": {
                              "value": {
                                "type": "string",
                                "minLength": 6,
                                "maxLength": 6,
                                "example": "100123"
                              }
                            }
                          },
                          "block": {
                            "type": "object",
                            "description": "Block of Address",
                            "properties": {
                              "value": {
                                "type": "string",
                                "maxLength": 10,
                                "example": "123"
                              }
                            }
                          },
                          "street": {
                            "type": "object",
                            "description": "Street of Address",
                            "properties": {
                              "value": {
                                "type": "string",
                                "maxLength": 32,
                                "example": "XYZ street 99"
                              }
                            }
                          },
                          "building": {
                            "type": "object",
                            "description": "Building of Address",
                            "properties": {
                              "value": {
                                "type": "string",
                                "maxLength": 32,
                                "example": "ABC building"
                              }
                            }
                          },
                          "floor": {
                            "type": "object",
                            "description": "Floor of Address",
                            "properties": {
                              "value": {
                                "type": "string",
                                "maxLength": 3,
                                "example": "10"
                              }
                            }
                          },
                          "unit": {
                            "type": "object",
                            "description": "Unit of Address",
                            "properties": {
                              "value": {
                                "type": "string",
                                "maxLength": 5,
                                "example": "100"
                              }
                            }
                          },
                          "country": {
                            "allOf": [
                              {
                                "description": "Country/Place. Refer to code table provided [HERE](#section/Support) in the Support section for list of possible values."
                              },
                              {
                                "type": "object",
                                "description": "Country of Address. For AddressSG this will always be \"SG\".\n\nRefer to `country` in code table provided [HERE](https://public.cloud.myinfo.gov.sg/myinfobiz/myinfo-business-api-code-tables.xlsx) for description of each code.\n",
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "minLength": 2,
                                    "maxLength": 2,
                                    "default": "SG"
                                  },
                                  "desc": {
                                    "type": "string",
                                    "default": "Singapore"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "discriminator": {
                          "propertyName": "type"
                        }
                      },
                      {
                        "type": "object",
                        "title": "Address Unformatted",
                        "properties": {
                          "type": {
                            "type": "string",
                            "default": "UNFORMATTED",
                            "description": "Type of Address (SG or UNFORMATTED for non SG)",
                            "enum": [
                              "SG",
                              "UNFORMATTED"
                            ]
                          },
                          "standard": {
                            "type": "string",
                            "description": "The standard of formatting that the address is adhering to.\n- D - Singapore Government Data Reference Model (SG-DRM)\n- F - National Coded Address (NCA)\n- L - Local Unformatted Address\n- N - Foreign Unformatted Address\n\n**NOTE:** When this value is 'D', the formatted Singapore address `address-sg` property will apply. Else the `address-unformatted` will apply for unformatted addresses.\n",
                            "enum": [
                              "D",
                              "F",
                              "L",
                              "N"
                            ],
                            "maxLength": 1
                          },
                          "line1": {
                            "type": "object",
                            "description": "Unregistered Foreign address line 1",
                            "properties": {
                              "value": {
                                "type": "string",
                                "maxLength": 70,
                                "example": "987 ZYX street"
                              }
                            }
                          },
                          "line2": {
                            "type": "object",
                            "description": "Unregistered Foreign address line 2",
                            "properties": {
                              "value": {
                                "type": "string",
                                "maxLength": 70,
                                "example": "Florida, CA 45678"
                              }
                            }
                          }
                        },
                        "discriminator": {
                          "propertyName": "type"
                        }
                      }
                    ],
                    "discriminator": {
                      "propertyName": "type",
                      "mapping": {
                        "SG": "#/components/schemas/entity-address-sg",
                        "UNFORMATTED": "#/components/schemas/entity-address-unformatted"
                      }
                    }
                  }
                }
              },
              {
                "$ref": "#/components/schemas/MyinfobizDataFieldProperties"
              }
            ]
          },
          "financials": {
            "allOf": [
              {
                "type": "object",
                "description": "Entity's financial information for the last __2__-years, in\nreverse chronological order (latest-first) of the year-period.",
                "properties": {
                  "highlights": {
                    "type": "array",
                    "description": "Entity's financial details.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "current-period-start-date": {
                          "allOf": [
                            {
                              "description": "See [RFC3339](http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14) \"full-date\" format `YYYY-MM-DD`."
                            },
                            {
                              "type": "object",
                              "description": "Current Period Start date\n\napplicable for entity types: [`LC`,`FC`]\n\nmandatory: No",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "format": "date"
                                }
                              }
                            }
                          ]
                        },
                        "current-period-end-date": {
                          "allOf": [
                            {
                              "description": "See [RFC3339](http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14) \"full-date\" format `YYYY-MM-DD`."
                            },
                            {
                              "type": "object",
                              "description": "Financial Period End date\n\napplicable for entity types: [`LC`,`FC`]\n\nmandatory: Yes",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "format": "date"
                                }
                              }
                            }
                          ]
                        },
                        "is-audited": {
                          "allOf": [
                            {
                              "description": "this is `TRUE` if financials have been audited. `FALSE` otherwise."
                            },
                            {
                              "type": "object",
                              "description": "Whether financial statements are audited\n\napplicable for entity types: [`LC`,`FC`]\nmandatory: No",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "maxLength": 1,
                                  "minLength": 1
                                }
                              }
                            }
                          ]
                        },
                        "currency": {
                          "allOf": [
                            {
                              "description": "Refer to `Currency` in code table provided [HERE](#section/Support) in the Support section for list of possible values."
                            },
                            {
                              "type": "object",
                              "description": "Currency code\n\napplicable for entity types: [`LC`,`FC`]\n\nmandatory: No",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "maxLength": 3
                                },
                                "desc": {
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        },
                        "company-revenue": {
                          "allOf": [
                            {
                              "description": "Monetary value for company revenue in fiscal period. Refer to `currency` for the currency code."
                            },
                            {
                              "type": "object",
                              "description": "Revenue\n\napplicable for entity types: [`LC`,`FC`]\n\nmandatory: No",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "double"
                                }
                              }
                            }
                          ]
                        },
                        "company-profit-loss-before-tax": {
                          "allOf": [
                            {
                              "description": "Monetary value for company profit-loss before tax in fiscal period. Refer to `currency` for the currency code."
                            },
                            {
                              "type": "object",
                              "description": "Profit (loss) before tax from continuing operations:-\n\napplicable for entity types: [`LC`,`FC`]\n\nmandatory: No",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "double"
                                }
                              }
                            }
                          ]
                        },
                        "company-profit-loss-after-tax": {
                          "allOf": [
                            {
                              "description": "Monetary value for company profit loss after tax in fiscal period. Refer to `currency` for the currency code."
                            },
                            {
                              "type": "object",
                              "description": "Profit (loss) after tax from continuing operations:-\n\napplicable for entity types: [`LC`,`FC`]\n\nmandatory: No",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "double"
                                }
                              }
                            }
                          ]
                        },
                        "group-revenue": {
                          "allOf": [
                            {
                              "description": "Monetary value for group revenue in fiscal period. Refer to `currency` for the currency code."
                            },
                            {
                              "type": "object",
                              "description": "Revenue at Group Level\n\napplicable for entity types: [`LC`,`FC`]\n\nmandatory: No",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "double"
                                }
                              }
                            }
                          ]
                        },
                        "group-capital-paid-up-capital-amount": {
                          "allOf": [
                            {
                              "description": "Monetary value for group paid up capital. Refer to `currency` for the currency code."
                            },
                            {
                              "type": "object",
                              "description": "Share capital, at group level (For paid up capital, to extract from BizFile)\n\napplicable for entity types: [`LC`,`FC`]\n\nmandatory: No",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "double"
                                }
                              }
                            }
                          ]
                        },
                        "group-profit-loss-before-tax": {
                          "allOf": [
                            {
                              "description": "Monetary value for group profit-loss before tax in fiscal period. Refer to `currency` for the currency code."
                            },
                            {
                              "type": "object",
                              "description": "Profit (loss) before tax from continuing operations, at group level:-\n\napplicable for entity types: [`LC`,`FC`]\n\nmandatory: No",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "double"
                                }
                              }
                            }
                          ]
                        },
                        "group-profit-loss-after-tax": {
                          "allOf": [
                            {
                              "description": "Monetary value for group profit-loss after tax in fiscal period. Refer to `currency` for the currency code."
                            },
                            {
                              "type": "object",
                              "description": "Profit (loss) after tax from continuing operations, at group level:-\n\napplicable for entity types: [`LC`,`FC`]\n\nmandatory: No",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "double"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              },
              {
                "$ref": "#/components/schemas/MyinfobizDataFieldProperties"
              }
            ]
          },
          "capitals": {
            "allOf": [
              {
                "type": "object",
                "description": "Entity's capital information, in order of when data is\nfirst made available.",
                "properties": {
                  "capitals-list": {
                    "type": "array",
                    "description": "Entity's capital details.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "capital-type": {
                          "type": "object",
                          "description": "Type of capital shares. Possible values:\n- 1 - Ordinary Capital\n- 2 - Preference Capital\n- 3 - Others Capital\n- T - Treasury Shares\n- A - Authorised Capital (Only for Foreign Companies)\n",
                          "enum": [
                            "1",
                            "2",
                            "3",
                            "T",
                            "A"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 1,
                              "example": "1"
                            },
                            "desc": {
                              "type": "string",
                              "example": "Ordinary Capital"
                            }
                          }
                        },
                        "share-allotted-amount": {
                          "allOf": [
                            {
                              "description": "Alloted shares, not to be confused with `currency` as monetary sense."
                            },
                            {
                              "type": "object",
                              "description": "Allotted number of Company capital shares\n\napplicable for entity types: [`LC`,`FC`]\nmandatory: No",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "double"
                                }
                              }
                            }
                          ]
                        },
                        "issued-capital-amount": {
                          "allOf": [
                            {
                              "description": "Issued capital monetary amount. Refer to `currency` for the currency code."
                            },
                            {
                              "type": "object",
                              "description": "Issued Cap Amount\n\napplicable for entity types: [`LC`,`FC`]\nmandatory: No",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "double"
                                }
                              }
                            }
                          ]
                        },
                        "paid-up-capital-amount": {
                          "allOf": [
                            {
                              "description": "Paid-up capital monetary amount. Refer to `currency` for the currency code."
                            },
                            {
                              "type": "object",
                              "description": "Paidup Cap Amount\n\napplicable for entity types: [`LC`,`FC`]\nmandatory: No",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "double"
                                }
                              }
                            }
                          ]
                        },
                        "currency": {
                          "allOf": [
                            {
                              "description": "Refer to `Currency` in code table provided [HERE](#section/Support) in the Support section for list of possible values."
                            },
                            {
                              "type": "object",
                              "description": "Company capital currency\n\napplicable for entity types: [`LC`,`FC`]\nmandatory: Yes",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "maxLength": 3
                                },
                                "desc": {
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              },
              {
                "$ref": "#/components/schemas/MyinfobizDataFieldProperties"
              }
            ]
          },
          "appointments": {
            "allOf": [
              {
                "type": "object",
                "description": "Entity's non-withdrawn appointment holder and/or key\npersonnel details, in order of appointment holder follow by key personnel\ndetails when data is first made available. For alternate director appointment\nholder, the representing director will be the previous record.",
                "properties": {
                  "appointments-list": {
                    "type": "array",
                    "description": "Entity's non-withdrawn appointment holder and/or key personnel details, in order of appointment holder follow by key personnel details when data is first made available. For alternate director appointment holder, the representing director will be the previous record.",
                    "oneOf": [
                      {
                        "type": "object",
                        "title": "person appointment holder",
                        "properties": {
                          "category": {
                            "allOf": [
                              {
                                "default": "1"
                              },
                              {
                                "type": "object",
                                "description": "Category of the position of the appointment holder. Possible values:\n- 1 - Individual\n- 2 - Local Company\n- 3 - Foreign Company\n- 4 - Unregistered Local Entity\n- 5 - Limited Liability Partnerships\n- 6 - Unregistered Foreign Entity\n\n**Note: This field will be return `\"\"` if the appointment holder do not fall in any of the above categories.**\n",
                                "enum": [
                                  "1",
                                  "2",
                                  "3",
                                  "4",
                                  "5",
                                  "6"
                                ],
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "maxLength": 1,
                                    "example": "1"
                                  },
                                  "desc": {
                                    "type": "string",
                                    "example": "Individual"
                                  }
                                }
                              }
                            ]
                          },
                          "person-reference": {
                            "$ref": "#/components/schemas/PersonReference"
                          },
                          "corppass-email": {
                            "allOf": [
                              {
                                "description": "CorpPass account email"
                              },
                              {
                                "type": "object",
                                "description": "CorpPass account email\n\napplicable for entity types: [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`,`AF`,`UL`,`UF`,`OE`]\n\nmandatory: No",
                                "properties": {
                                  "value": {
                                    "type": "string",
                                    "maxLength": 320
                                  }
                                }
                              }
                            ]
                          },
                          "corppass-mobileno": {
                            "allOf": [
                              {
                                "description": "CorpPass mobile number"
                              },
                              {
                                "type": "object",
                                "description": "CorpPass account mobile\n\napplicable for entity types: [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`,`AF`,`UL`,`UF`,`OE`]\n\nmandatory: No",
                                "properties": {
                                  "value": {
                                    "type": "string",
                                    "maxLength": 20
                                  }
                                }
                              }
                            ]
                          },
                          "position": {
                            "type": "object",
                            "description": "Position of referenced corporate entity or person.\n\n`position-code` is applicable for Sole-Proprietors, Partnerships, and Companies. \n\nRefer to Position code table by entity type provided [HERE](#section/Support) in the Support section for list of possible values. \n\n**NOTE:** `position-code` are only available for the following positions.\n\nPossible values:\n- 1 - Administrator\n- 2 - Agent\n- 3 - Agent of Foreign Firm\n- 4 - Auditor\n- 5 - Authorised Representative\n- 6 - Chief Executive Officer\n- 7 - Director\n- 8 - Director Under Section 17(3)(d) of the Accountants Act\n- 9 - Estate Off\n- 10 - Executor/Executrix\n- 11 - General Partner\n- 12 - General Partner as Agent of Foreign Firm\n- 13 - General Partner as Nominee/Trustee\n- 14 - Limited Partner\n- 15 - Manager\n- 16 - Managing Director\n- 17 - Member\n- 18 - Next-Of-Kin\n- 19 - Nominee\n- 20 - Nominee/Trustee\n- 21 - Officer\n- 22 - Owner\n- 23 - Partner\n- 24 - Partner Under Section 18(3)(c) of the Accountants Act\n- 25 - Partner Under Section 18A(3)(e) of the Accountants Act (For ALLP Only)\n- 26 - Public Accountant Employee\n- 27 - Public Accounting Employee (For ALLP Only)\n- 28 - Secretary\n- 29 - Sole-Proprietor/Partner\n- 30 - Trustee\n",
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 2,
                                "example": "7"
                              },
                              "desc": {
                                "type": "string",
                                "example": "Director"
                              }
                            }
                          },
                          "appointment-date": {
                            "allOf": [
                              {
                                "description": "See [RFC3339](http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14) \"full-date\" format `YYYY-MM-DD`."
                              },
                              {
                                "type": "object",
                                "description": "Position appointment date\n\napplicable for entity types: [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`,`UL`,`UF`]\n\nmandatory: Yes",
                                "properties": {
                                  "value": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "Value of data field. See \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14",
                                    "example": "2018-01-01"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "discriminator": {
                          "propertyName": "category"
                        }
                      },
                      {
                        "type": "object",
                        "title": "entity appointment holder",
                        "properties": {
                          "category": {
                            "type": "object",
                            "description": "Category of the position of the appointment holder. Possible values:\n- 1 - Individual\n- 2 - Local Company\n- 3 - Foreign Company\n- 4 - Unregistered Local Entity\n- 5 - Limited Liability Partnerships\n- 6 - Unregistered Foreign Entity\n\n**Note: This field will be return `\"\"` if the appointment holder do not fall in any of the above categories.**\n",
                            "enum": [
                              "1",
                              "2",
                              "3",
                              "4",
                              "5",
                              "6"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 1,
                                "example": "1"
                              },
                              "desc": {
                                "type": "string",
                                "example": "Individual"
                              }
                            }
                          },
                          "entity-reference": {
                            "$ref": "#/components/schemas/EntityReference"
                          },
                          "position": {
                            "type": "object",
                            "description": "Position of referenced corporate entity or person.\n\n`position-code` is applicable for Sole-Proprietors, Partnerships, and Companies. \n\nRefer to Position code table by entity type provided [HERE](#section/Support) in the Support section for list of possible values. \n\n**NOTE:** `position-code` are only available for the following positions.\n\nPossible values:\n- 1 - Administrator\n- 2 - Agent\n- 3 - Agent of Foreign Firm\n- 4 - Auditor\n- 5 - Authorised Representative\n- 6 - Chief Executive Officer\n- 7 - Director\n- 8 - Director Under Section 17(3)(d) of the Accountants Act\n- 9 - Estate Off\n- 10 - Executor/Executrix\n- 11 - General Partner\n- 12 - General Partner as Agent of Foreign Firm\n- 13 - General Partner as Nominee/Trustee\n- 14 - Limited Partner\n- 15 - Manager\n- 16 - Managing Director\n- 17 - Member\n- 18 - Next-Of-Kin\n- 19 - Nominee\n- 20 - Nominee/Trustee\n- 21 - Officer\n- 22 - Owner\n- 23 - Partner\n- 24 - Partner Under Section 18(3)(c) of the Accountants Act\n- 25 - Partner Under Section 18A(3)(e) of the Accountants Act (For ALLP Only)\n- 26 - Public Accountant Employee\n- 27 - Public Accounting Employee (For ALLP Only)\n- 28 - Secretary\n- 29 - Sole-Proprietor/Partner\n- 30 - Trustee\n",
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 2,
                                "example": "7"
                              },
                              "desc": {
                                "type": "string",
                                "example": "Director"
                              }
                            }
                          },
                          "appointment-date": {
                            "allOf": [
                              {
                                "description": "See [RFC3339](http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14) \"full-date\" format `YYYY-MM-DD`."
                              },
                              {
                                "type": "object",
                                "description": "Position appointment date\n\napplicable for entity types: [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`,`UL`,`UF`]\n\nmandatory: Yes",
                                "properties": {
                                  "value": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "Value of data field. See \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14",
                                    "example": "2018-01-01"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "discriminator": {
                          "propertyName": "category"
                        }
                      }
                    ],
                    "discriminator": {
                      "propertyName": "category",
                      "mapping": {
                        "1": "#/components/schemas/person-appointment",
                        "2": "#/components/schemas/entity-appointment",
                        "3": "#/components/schemas/entity-appointment",
                        "4": "#/components/schemas/entity-appointment",
                        "5": "#/components/schemas/entity-appointment",
                        "6": "#/components/schemas/entity-appointment"
                      }
                    }
                  }
                }
              },
              {
                "$ref": "#/components/schemas/MyinfobizDataFieldProperties"
              }
            ]
          },
          "shareholders": {
            "allOf": [
              {
                "type": "object",
                "description": "Entity's shareholder details, in order of when data is first made available.",
                "properties": {
                  "shareholders-list": {
                    "type": "array",
                    "description": "Entity's shareholder details, in order of when data is first made available.",
                    "oneOf": [
                      {
                        "type": "object",
                        "title": "person shareholder",
                        "properties": {
                          "category": {
                            "allOf": [
                              {
                                "default": "1"
                              },
                              {
                                "type": "object",
                                "description": "Category of the shareholder. Possible values:\n- 1 - Individual\n- 2 - Local Company\n- 3 - Foreign Company\n- 4 - Unregistered Local Entity\n- 5 - Limited Liability Partnerships\n- 6 - Unregistered Foreign Entity\n\n**Note: This field will be return `\"\"` if the shareholder do not fall in any of the above categories.**\n",
                                "enum": [
                                  "1",
                                  "2",
                                  "3",
                                  "4",
                                  "5",
                                  "6"
                                ],
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "maxLength": 1,
                                    "example": "1"
                                  },
                                  "desc": {
                                    "type": "string",
                                    "example": "Individual"
                                  }
                                }
                              }
                            ]
                          },
                          "person-reference": {
                            "$ref": "#/components/schemas/PersonReference"
                          },
                          "share-type": {
                            "type": "object",
                            "description": "Type of shares. Possible values:\n- 1 - Ordinary Capital\n- 2 - Preference Capital\n- 3 - Others Capital\n- 0 - Company Limited by Guarantee Capital\n",
                            "enum": [
                              "1",
                              "2",
                              "3",
                              "0"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 1,
                                "example": "1"
                              },
                              "desc": {
                                "type": "string",
                                "example": "Ordinary Capital"
                              }
                            }
                          },
                          "corppass-email": {
                            "allOf": [
                              {
                                "description": "CorpPass account email"
                              },
                              {
                                "type": "object",
                                "description": "CorpPass account email\n\napplicable for entity types: [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`,`AF`,`UL`,`UF`,`OE`]\n\nmandatory: No",
                                "properties": {
                                  "value": {
                                    "type": "string",
                                    "maxLength": 320
                                  }
                                }
                              }
                            ]
                          },
                          "corppass-mobileno": {
                            "allOf": [
                              {
                                "description": "CorpPass mobile number"
                              },
                              {
                                "type": "object",
                                "description": "CorpPass account mobile\n\napplicable for entity types: [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`,`AF`,`UL`,`UF`,`OE`]\n\nmandatory: No",
                                "properties": {
                                  "value": {
                                    "type": "string",
                                    "maxLength": 20
                                  }
                                }
                              }
                            ]
                          },
                          "allocation": {
                            "allOf": [
                              {
                                "description": "Allotted shares, not to be confused with `currency` as monetary sense."
                              },
                              {
                                "type": "object",
                                "description": "Number of shares allotted\n\napplicable for entity types: [`LC`]\n\nmandatory: No",
                                "properties": {
                                  "value": {
                                    "type": "number",
                                    "format": "double"
                                  }
                                }
                              }
                            ]
                          },
                          "currency": {
                            "allOf": [
                              {
                                "description": "Indicates the currency that the shares are held in.\n\nRefer to `currency` in code table provided [HERE](#section/Support) in the Support section for list of possible values.\n\n**NOTE:** This is not to be confused with `allocation`, which indicates the allotted shares. Refer to `Currency` in code table provided for description of each code."
                              },
                              {
                                "type": "object",
                                "description": "Shareholder’s currency code\n\napplicable for entity types: [`LC`]\n\nmandatory: Yes",
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "maxLength": 3
                                  },
                                  "desc": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "discriminator": {
                          "propertyName": "category"
                        }
                      },
                      {
                        "type": "object",
                        "title": "entity shareholder",
                        "properties": {
                          "category": {
                            "type": "object",
                            "description": "Category of the shareholder. Possible values:\n- 1 - Individual\n- 2 - Local Company\n- 3 - Foreign Company\n- 4 - Unregistered Local Entity\n- 5 - Limited Liability Partnerships\n- 6 - Unregistered Foreign Entity\n\n**Note: This field will be return `\"\"` if the shareholder do not fall in any of the above categories.**\n",
                            "enum": [
                              "1",
                              "2",
                              "3",
                              "4",
                              "5",
                              "6"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 1,
                                "example": "1"
                              },
                              "desc": {
                                "type": "string",
                                "example": "Individual"
                              }
                            }
                          },
                          "entity-reference": {
                            "$ref": "#/components/schemas/EntityReference"
                          },
                          "share-type": {
                            "type": "object",
                            "description": "Type of shares. Possible values:\n- 1 - Ordinary Capital\n- 2 - Preference Capital\n- 3 - Others Capital\n- 0 - Company Limited by Guarantee Capital\n",
                            "enum": [
                              "1",
                              "2",
                              "3",
                              "0"
                            ],
                            "properties": {
                              "code": {
                                "type": "string",
                                "maxLength": 1,
                                "example": "1"
                              },
                              "desc": {
                                "type": "string",
                                "example": "Ordinary Capital"
                              }
                            }
                          },
                          "allocation": {
                            "allOf": [
                              {
                                "description": "Allotted shares, not to be confused with `currency` as monetary sense."
                              },
                              {
                                "type": "object",
                                "description": "Number of shares allotted\n\napplicable for entity types: [`LC`]\n\nmandatory: No",
                                "properties": {
                                  "value": {
                                    "type": "number",
                                    "format": "double"
                                  }
                                }
                              }
                            ]
                          },
                          "currency": {
                            "allOf": [
                              {
                                "description": "Indicates the currency that the shares are held in.\n\nRefer to `currency` in code table provided [HERE](#section/Support) in the Support section for list of possible values.\n\n**NOTE:** This is not to be confused with `allocation`, which indicates the allotted shares. Refer to `Currency` in code table provided for description of each code."
                              },
                              {
                                "type": "object",
                                "description": "Shareholder’s currency code\n\napplicable for entity types: [`LC`]\n\nmandatory: Yes",
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "maxLength": 3
                                  },
                                  "desc": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "discriminator": {
                          "propertyName": "category"
                        }
                      }
                    ],
                    "discriminator": {
                      "propertyName": "category",
                      "mapping": {
                        "1": "#/components/schemas/person-shareholder",
                        "2": "#/components/schemas/entity-shareholder",
                        "3": "#/components/schemas/entity-shareholder",
                        "4": "#/components/schemas/entity-shareholder",
                        "5": "#/components/schemas/entity-shareholder",
                        "6": "#/components/schemas/entity-shareholder"
                      }
                    }
                  }
                }
              },
              {
                "$ref": "#/components/schemas/MyinfobizDataFieldProperties"
              }
            ]
          },
          "grants": {
            "allOf": [
              {
                "type": "object",
                "description": "Entity's approved grant information, in order of when data\nis first made available.",
                "properties": {
                  "grants-list": {
                    "type": "array",
                    "description": "Entity's grant details.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "grant-type": {
                          "type": "object",
                          "description": "Type of grant. Possible values:\n- MA  - Marketing Assistance\n- MRA - Market Readiness Assistance\n- GCP - Global Company Partnership\n- AIP - CDG Product Development (AIP)\n- CDG - Capability Development Grant\n- BIF - Business Improvement Fund\n- BIM - Building Information Model (BIM)\n- WOGPG - WOG Productivity Grant\n- PSG - Productivity Solutions Grant\n",
                          "enum": [
                            "MA",
                            "MRA",
                            "GCP",
                            "AIP",
                            "CDG",
                            "BIF",
                            "BIM",
                            "WOGPG",
                            "PSG"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 3,
                              "example": "MA"
                            },
                            "desc": {
                              "type": "string",
                              "example": "Marketing Assistance"
                            }
                          }
                        },
                        "grant-status": {
                          "type": "object",
                          "description": "Status of the grant. Possible values:\n- 10 - Approved\n- 11 - Rejected by Agency\n- 12 - Withdrawn by Agency\n- 13 - Processing\n- 20 - Cancelled\n- 21 - Accepted\n- 22 - Rejected by Applicant\n- 30 - Submitted\n- 31 - Pending Re-submission\n- 32 - Rerouted\n",
                          "enum": [
                            "10",
                            "11",
                            "12",
                            "13",
                            "20",
                            "21",
                            "22",
                            "30",
                            "31",
                            "32"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 2,
                              "example": "10"
                            },
                            "desc": {
                              "type": "string",
                              "example": "Approved"
                            }
                          }
                        },
                        "functional-area": {
                          "type": "object",
                          "description": "Functional area for the grant. Possible values:\n- MRA - Market Readiness Assistance\n- GCP - Global Company Partnership\n- EVP - Events Participation\n- ITS - IT Software\n- ATE - Automation/Equipment\n- BMF - Branding & Marketing\n- FNM - Financial Management\n- HCD - Human Capital Development\n- CTE - Customer Experience\n- SBE - Standards & Business Excellence\n- PSD - Product & Strategy Development\n- PRD - Process Redesign\n- PRS - Productivity Solutions Grant\n",
                          "enum": [
                            "ATE",
                            "BMF",
                            "CTE",
                            "EVP",
                            "FNM",
                            "GCP",
                            "HCD",
                            "ITS",
                            "MRA",
                            "PRD",
                            "PRS",
                            "PSD",
                            "SBE"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 3,
                              "example": "ATE"
                            },
                            "desc": {
                              "type": "string",
                              "example": "Automation/Equipment"
                            }
                          }
                        },
                        "development-category": {
                          "type": "object",
                          "description": "Development Category of Grant. Possible values:\n- IE - International Expansion\n- CD - Capability Development\n- TG - Training Grant\n",
                          "enum": [
                            "IE",
                            "CD",
                            "TG"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 2,
                              "example": "IE"
                            },
                            "desc": {
                              "type": "string",
                              "example": "International Expansion"
                            }
                          }
                        },
                        "approved-amount": {
                          "allOf": [
                            {
                              "description": "Monetary amount approved by the grant. Currency is in `SGD` (Singapore Dollar)"
                            },
                            {
                              "type": "object",
                              "description": "Monetary amount approved by the grant. Currency is in SGD (Singapore Dollar)\n\nmandatory: N",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "double"
                                }
                              }
                            }
                          ]
                        },
                        "submitted-date": {
                          "allOf": [
                            {
                              "description": "Date-Timestamp that the grant was submitted.\n\nSee [RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14) \"date-time\" format `YYYY-MM-DD''T''HH:MM:SSZ`, with timezone."
                            },
                            {
                              "type": "object",
                              "description": "Date-Timestamp that the grant was submitted.\n\nmandatory: N",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "format": "datetime"
                                }
                              }
                            }
                          ]
                        },
                        "last-updated-date": {
                          "allOf": [
                            {
                              "description": "Date-Timestamp that the grant was last updated.\n\nSee [RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14) \"date-time\" format `YYYY-MM-DD''T''HH:MM:SSZ`, with timezone."
                            },
                            {
                              "type": "object",
                              "description": "Date-Timestamp that the grant was last updated.\n\nmandatory: N",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "format": "datetime"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              },
              {
                "$ref": "#/components/schemas/MyinfobizDataFieldProperties"
              }
            ]
          },
          "builders": {
            "allOf": [
              {
                "type": "object",
                "description": "Entity's builder information\nThis field is available only for entities that hold builder licences.\n\nNote: This field is paired with contractors. Request for 'builders-contractors' to retrieve builders data.",
                "properties": {
                  "builders-list": {
                    "type": "array",
                    "description": "Entity's builder information.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "licence": {
                          "type": "object",
                          "description": "Type of Builder Licence\nThis field is available only for entities that hold builder licences.\nPossible values:\n- GB1 - General Builder Class 1\n- GB2 - General Builder Class 2\n- SB(GS) - Specialist Builder (Ground Support and Stabilisation Works)\n- SB(PC) - Specialist Builder (Pre-cast Concrete Work)\n- SB(PT) - Specialist Builder (In-situ Post-tensioning Work)\n- SB(PW) - Specialist Builder (Piling Works)\n- SB(SI) - Specialist Builder (Site Investigation Work)\n- SB(SS) - Specialist Builder (Structural Steelwork)",
                          "enum": [
                            "GB1",
                            "GB2",
                            "SB(GS)",
                            "SB(PC)",
                            "SB(PT)",
                            "SB(PW)",
                            "SB(SI)",
                            "SB(SS)"
                          ],
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 6,
                              "example": "GB1"
                            },
                            "desc": {
                              "type": "string",
                              "example": "General Builder Class 1"
                            }
                          }
                        },
                        "licence-expiry-date": {
                          "type": "object",
                          "description": "Builder Licence expiry date\nThis field is available only for entities that hold builder licences.",
                          "properties": {
                            "value": {
                              "type": "string",
                              "format": "date",
                              "description": "Value of data field. See \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14",
                              "example": "2018-01-01"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "$ref": "#/components/schemas/MyinfobizDataFieldProperties"
              }
            ]
          },
          "contractors": {
            "allOf": [
              {
                "type": "object",
                "description": "Entity's contractor information\nThis field is available only for entities that hold contractor workheads.\n\nNote: This field is paired with builders. Request for 'builders-contractors' to retrieve contractors data.",
                "properties": {
                  "contractors-list": {
                    "type": "array",
                    "description": "Entity's contractor information.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "registration-expiry-date": {
                          "type": "object",
                          "description": "Contractor registration expiry date\nThis field is available only for entities that hold contractor workheads.",
                          "properties": {
                            "value": {
                              "type": "string",
                              "format": "date",
                              "description": "Value of data field. See \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14",
                              "example": "2018-01-01"
                            }
                          }
                        },
                        "workhead": {
                          "type": "object",
                          "description": "Type of Contractor Workhead\nThis field is available only for entities that hold contractor workheads.\n\nRefer to `contractors-workhead` in code table provided [HERE](#section/Support) in the Support section for list of possible values.",
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 4,
                              "example": "CR01"
                            },
                            "desc": {
                              "type": "string",
                              "example": "Minor Construction Works"
                            }
                          }
                        },
                        "workhead-financial-grade": {
                          "type": "object",
                          "description": "Type of Contractor Workhead Financial Grade\nThis field is available only for entities that hold contractor workheads.\n\nRefer to `financial-grade` in code table provided [HERE](#section/Support) in the Support section for list of possible values.",
                          "properties": {
                            "code": {
                              "type": "string",
                              "example": "A2"
                            },
                            "desc": {
                              "type": "string",
                              "example": "85"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "$ref": "#/components/schemas/MyinfobizDataFieldProperties"
              }
            ]
          },
          "gov-contracts": {
            "allOf": [
              {
                "type": "object",
                "description": "Entity's government contract information\nThis field is available only for entities that hold government contracts.",
                "properties": {
                  "gov-contracts-list": {
                    "type": "array",
                    "description": "Entity's government contracts information.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "award-date": {
                          "type": "object",
                          "description": "government contracts award date\nThis field is available only for entities that hold government conttracts.",
                          "properties": {
                            "value": {
                              "type": "string",
                              "format": "date",
                              "description": "Value of data field. See \"full-date\" in http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14",
                              "example": "2018-01-01"
                            }
                          }
                        },
                        "award-value": {
                          "type": "object",
                          "description": "government contracts award value\nThis field is available only for entities that hold government conttracts.",
                          "properties": {
                            "value": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        },
                        "awarding-agency": {
                          "type": "object",
                          "description": "government contracts awarding agency\nThis field is available only for entities that hold government conttracts.",
                          "properties": {
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "currency": {
                          "type": "object",
                          "description": "contract award value currency\n\nRefer to `Currency` in code table provided [HERE](#section/Support) in the Support section for list of possible values.",
                          "properties": {
                            "code": {
                              "type": "string",
                              "maxLength": 3,
                              "example": "SGD"
                            },
                            "desc": {
                              "type": "string",
                              "example": "SINGAPORE, DOLLARS"
                            }
                          }
                        },
                        "document-id": {
                          "type": "object",
                          "description": "government contracts document ID\nThis field is available only for entities that hold government conttracts.",
                          "properties": {
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "notice-description": {
                          "type": "object",
                          "description": "government contracts description\nThis field is available only for entities that hold government conttracts.",
                          "properties": {
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "num-suppliers": {
                          "type": "object",
                          "description": "government contracts number of suppliers\nThis field is available only for entities that hold government conttracts.",
                          "properties": {
                            "value": {
                              "type": "number"
                            }
                          }
                        },
                        "procurement-cat": {
                          "type": "object",
                          "description": "government contracts procurement category\nThis field is available only for entities that hold government conttracts.\n\nRefer to `gebiz-procurement-cat` in code table provided [HERE](#section/Support) in the Support section for list of possible values.",
                          "properties": {
                            "code": {
                              "type": "string",
                              "example": "100054"
                            },
                            "desc": {
                              "type": "string",
                              "example": "Event Organising, Food & Beverages => Event Organising"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "$ref": "#/components/schemas/MyinfobizDataFieldProperties"
              }
            ]
          },
          "licences": {
            "allOf": [
              {
                "type": "object",
                "description": "Entity's Licences",
                "properties": {
                  "licences-list": {
                    "type": "array",
                    "description": "Entity's government contracts information.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "expiry-date": {
                          "allOf": [
                            {
                              "description": "licence expiry date"
                            },
                            {
                              "type": "object",
                              "description": "licence expiry date\n\nmandatory: N",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "format": "date"
                                }
                              }
                            }
                          ]
                        },
                        "issuance-agency": {
                          "allOf": [
                            {
                              "description": "licence issuance agency. Refer to `agency` in code table provided [HERE](#section/Support) in the Support section for list of possible values."
                            },
                            {
                              "type": "object",
                              "description": "licence issuance agency\n\nRefer to the [Code reference tables](#section/Support) in the Support section for list of possible values.\n\nmandatory: Y",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "maxLength": 3
                                },
                                "desc": {
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        },
                        "issue-date": {
                          "allOf": [
                            {
                              "description": "licence issuance issue date"
                            },
                            {
                              "type": "object",
                              "description": "licence issue date\n\nmandatory: N",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "format": "date"
                                }
                              }
                            }
                          ]
                        },
                        "licence-name": {
                          "allOf": [
                            {
                              "description": "licence name"
                            },
                            {
                              "type": "object",
                              "description": "Licence name\n\nmandatory: Y",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "maxLength": 150
                                }
                              }
                            }
                          ]
                        },
                        "licence-number": {
                          "allOf": [
                            {
                              "description": "licence number"
                            },
                            {
                              "type": "object",
                              "description": "Unique licence number assign by agencies.\n\nmandatory: Y",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "maxLength": 20
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              },
              {
                "$ref": "#/components/schemas/MyinfobizDataFieldProperties"
              }
            ]
          }
        },
        "example": {
          "grants": {
            "grants-list": [],
            "lastupdated": "2023-07-28",
            "source": "1",
            "classification": "C"
          },
          "financials": {
            "lastupdated": "2023-07-28",
            "source": "1",
            "highlights": [],
            "classification": "C"
          },
          "addresses": {
            "lastupdated": "2023-07-28",
            "source": "1",
            "addresses-list": [
              {
                "standard": {
                  "code": "D",
                  "desc": "Singapore Government Enterprise Architecture (SGEA) Data Reference Model (DRM) Standard"
                },
                "country": {
                  "code": "SG",
                  "desc": "SINGAPORE"
                },
                "unit": {
                  "value": "7"
                },
                "street": {
                  "value": "Aljunied Road"
                },
                "block": {
                  "value": "623"
                },
                "postal": {
                  "value": "389835"
                },
                "floor": {
                  "value": "2"
                },
                "type": "SG",
                "building": {
                  "value": ""
                }
              }
            ],
            "classification": "C"
          },
          "appointments": {
            "lastupdated": "2023-07-28",
            "appointments-list": [
              {
                "person-reference": {
                  "nationality": {
                    "code": "SP",
                    "desc": "SINGAPORE PR"
                  },
                  "idno": {
                    "value": "S9912374E"
                  },
                  "person-name": {
                    "value": "TIMOTHY TAN CHENG GUAN"
                  }
                },
                "position": {
                  "code": "15",
                  "desc": "Manager"
                },
                "appointment-date": {
                  "value": "2012-05-26"
                },
                "corppass-email": {
                  "value": "myinfotesting@company.com"
                },
                "category": {
                  "code": "1",
                  "desc": "Individual"
                },
                "corppass-mobileno": {
                  "value": "97399245"
                }
              },
              {
                "person-reference": {
                  "nationality": {
                    "code": "SG",
                    "desc": "SINGAPORE CITIZEN"
                  },
                  "idno": {
                    "value": "S9912360E"
                  },
                  "person-name": {
                    "value": "YEE XIN MEI"
                  }
                },
                "position": {
                  "code": "11",
                  "desc": "General Partner"
                },
                "appointment-date": {
                  "value": "2012-05-26"
                },
                "corppass-email": {
                  "value": ""
                },
                "category": {
                  "code": "1",
                  "desc": "Individual"
                },
                "corppass-mobileno": {
                  "value": ""
                }
              },
              {
                "person-reference": {
                  "nationality": {
                    "code": "SG",
                    "desc": "SINGAPORE CITIZEN"
                  },
                  "idno": {
                    "value": "F1612345P"
                  },
                  "person-name": {
                    "value": "PARTIAL INFO USER ONE"
                  }
                },
                "position": {
                  "code": "14",
                  "desc": "Limited Partner"
                },
                "appointment-date": {
                  "value": "2012-05-26"
                },
                "corppass-email": {
                  "value": "myinfotesting1@company.com"
                },
                "category": {
                  "code": "1",
                  "desc": "Individual"
                },
                "corppass-mobileno": {
                  "value": "97399246"
                }
              }
            ],
            "source": "1",
            "classification": "C"
          },
          "builders": {
            "lastupdated": "2023-07-28",
            "source": "1",
            "classification": "C",
            "builders-list": []
          },
          "basic-profile": {
            "uen": {
              "value": "T15LP0010D"
            },
            "entity-name": {
              "value": "Proper Partners LP"
            },
            "entity-type": {
              "code": "LP",
              "desc": "Limited Partnerships"
            },
            "entity-status": {
              "value": "LIVE"
            },
            "primary-activity": {
              "code": "20222",
              "desc": "MANUFACTURE OF VARNISHES AND LACQUERS (INCLUDING ENAMELS)"
            },
            "primary-user-described-activity": {
              "value": "VARNISHING OF NEW AND OLD FURNITURE/DOORS/WOOD CABINETS"
            },
            "secondary-activity": {
              "code": "47521",
              "desc": "RETAIL SALE OF PAINTS"
            },
            "secondary-user-described-activity": {
              "value": "RETAIL SALE OF PAINTS INCLUDING CONSTRUCTION CHEMICALS"
            },
            "registration-date": {
              "value": "2012-05-26"
            },
            "source": "1",
            "classification": "C",
            "business-expiry-date": {
              "value": "2024-06-11"
            }
          },
          "shareholders": {
            "lastupdated": "2023-07-28",
            "source": "1",
            "classification": "C",
            "shareholders-list": []
          },
          "capitals": {
            "capitals-list": [],
            "lastupdated": "2023-07-28",
            "source": "1",
            "classification": "C"
          },
          "contractors": {
            "lastupdated": "2023-07-28",
            "source": "1",
            "contractors-list": [],
            "classification": "C"
          },
          "previous-uens": {
            "lastupdated": "2023-07-28",
            "previous-uens-list": [
              {
                "previous-uen": {
                  "value": "T21LP8850B"
                }
              },
              {
                "previous-uen": {
                  "value": "T47LP3705Q"
                }
              },
              {
                "previous-uen": {
                  "value": "T60LP7981Q"
                }
              },
              {
                "previous-uen": {
                  "value": "T83LP1870R"
                }
              }
            ],
            "source": "1",
            "classification": "C"
          },
          "previous-names": {
            "lastupdated": "2023-07-28",
            "source": "1",
            "previous-names-list": [
              {
                "history-name": {
                  "value": "Remind Partners LP"
                },
                "history-name-effective-date": {
                  "value": "1970-04-08"
                }
              },
              {
                "history-name": {
                  "value": "Mainstream Partners LP"
                },
                "history-name-effective-date": {
                  "value": "1953-12-14"
                }
              },
              {
                "history-name": {
                  "value": "Fixture Partners LP"
                },
                "history-name-effective-date": {
                  "value": "1941-09-15"
                }
              },
              {
                "history-name": {
                  "value": "Confine Partners LP"
                },
                "history-name-effective-date": {
                  "value": "1932-08-10"
                }
              }
            ],
            "classification": "C"
          },
          "gov-contracts": {
            "lastupdated": "2023-07-28",
            "source": "1",
            "classification": "C",
            "gov-contracts-list": []
          },
          "licences": {
            "licences-list": [],
            "lastupdated": "2023-07-28",
            "source": "1",
            "classification": "C"
          }
        }
      },
      "PersonReference": {
        "type": "object",
        "description": "Entity appointment or shareholder instance's person reference details.",
        "properties": {
          "idno": {
            "allOf": [
              {
                "description": "ID number of person as lodged by the entity at registration. This may be NRIC or FIN or passport or any other type of ID.\n\n**NOTE:** this ID is not verified by government."
              },
              {
                "type": "object",
                "description": "Person’s identification number.\n\nmandatory: Yes ",
                "properties": {
                  "value": {
                    "type": "string",
                    "maxLength": 20
                  }
                }
              }
            ]
          },
          "person-name": {
            "allOf": [
              {
                "description": "Name of person as lodged by entity at registration.\n\n**NOTE:** this name is not verified by government."
              },
              {
                "type": "object",
                "description": "Person’s name\n\nmandatory: Yes",
                "properties": {
                  "value": {
                    "type": "string",
                    "maxLength": 66
                  }
                }
              }
            ]
          },
          "nationality": {
            "allOf": [
              {
                "description": "Nationality/Citizenship.\n\n**Note:** There is a known issue with this field, where the return value sometimes will be `SP` which refers to \"Singapore Permanent Resident\". This value will be moved to a separate \"Residential Status\" field in later releases.\n\nRefer to code table provided under [HERE](#section/Support) in the Support section for list of possible values."
              },
              {
                "type": "object",
                "description": "Person’s nationality code\n\nRefer to `NationalityCode` in code table provided [HERE](https://www.ndi-api.gov.sg/assets/lib/myinfo/downloads/myinfo-api-code-tables.xlsx) for description of each code.\n\nmandatory: Yes",
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2
                  },
                  "desc": {
                    "type": "string"
                  }
                }
              }
            ]
          }
        }
      },
      "EntityReference": {
        "type": "object",
        "description": "Entity appointment or shareholder instance's entity reference details.",
        "properties": {
          "uen": {
            "allOf": [
              {
                "description": "Unique Entity Number - unique identifier for entity. See [https://www.uen.gov.sg](https://www.uen.gov.sg) for more details."
              },
              {
                "type": "object",
                "description": "Entity unique identifier\n\napplicable for entity types: [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`,`AF`,`UL`,`UF`,`OE`]\n\nmandatory: Yes",
                "properties": {
                  "value": {
                    "type": "string",
                    "maxLength": 10
                  }
                }
              }
            ]
          },
          "entity-name": {
            "allOf": [
              {
                "description": "Registered name of entity."
              },
              {
                "type": "object",
                "description": "Entity name\n\napplicable for entity types: [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`,`AF`,`UL`,`UF`,`OE`]\n\nmandatory: Yes",
                "properties": {
                  "value": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "ABC Company"
                  }
                }
              }
            ]
          },
          "entity-type": {
            "allOf": [
              {
                "description": "If this field is `LC` or `FC`, refer to `CompanyType`. If this field is `BN`, refer to `BusinessConstitution`. Refer to `Entity Type` in code table provided [HERE](#section/Support) in the Support section for list of possible values."
              },
              {
                "type": "object",
                "description": "Type of entity\n\napplicable for entity types: [`BN`,`LC`,`FC`,`LLP`,`LP`,`PAF`,`AF`,`UL`,`UF`,`OE`]\n\nmandatory: Yes",
                "properties": {
                  "code": {
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "BN"
                  },
                  "desc": {
                    "type": "string",
                    "example": "Business"
                  }
                }
              }
            ]
          }
        }
      },
      "Entity-Person": {
        "type": "object",
        "description": "Entity-Person instance's details.",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Entity"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          }
        }
      }
    }
  }
}